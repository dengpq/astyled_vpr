!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABSOLUTE	../include/vpr_types.h	/^    ABSOLUTE,$/;"	e	enum:e_Fc_type
ALL_NETS	draw.c	/^enum e_draw_net_type {ALL_NETS, HIGHLIGHTED};$/;"	e	enum:e_draw_net_type	file:
AUTO_SCHED	../include/vpr_types.h	/^    AUTO_SCHED,$/;"	e	enum:sched_type
BLACK	../include/graphics.h	/^    BLACK,$/;"	e	enum:color_types
BLOCK_COUNT	timing_place_lookup.c	44;"	d	file:
BLUE	../include/graphics.h	/^    BLUE,$/;"	e	enum:color_types
BOTTOM	../include/vpr_types.h	/^    BOTTOM = 1,$/;"	e	enum:e_side
BOUNDING_BOX_PLACE	../include/vpr_types.h	/^    BOUNDING_BOX_PLACE,$/;"	e	enum:e_place_algorithm
BREADTH_FIRST	../include/vpr_types.h	/^    BREADTH_FIRST,$/;"	e	enum:e_router_algorithm
BUFSIZE	../include/util.h	20;"	d
BUF_AND_PTRANS_FLAG	check_rr_graph.c	11;"	d	file:
BUF_FLAG	check_rr_graph.c	9;"	d	file:
BUTTON_TEXT_LEN	graphics.c	92;"	d	file:
C	../include/vpr_types.h	/^    float C;$/;"	m	struct:__anon22	access:public
CHANX	../include/vpr_types.h	/^    CHANX,$/;"	e	enum:__anon21
CHANX_COST_INDEX_START	../include/vpr_types.h	/^    CHANX_COST_INDEX_START$/;"	e	enum:e_cost_indices
CHANY	../include/vpr_types.h	/^    CHANY$/;"	e	enum:__anon21
CHECK	place.c	/^enum cost_methods {NORMAL, CHECK};$/;"	e	enum:cost_methods	file:
CHECK_NETLIST_H	../include/check_netlist.h	2;"	d
CHECK_RAND	util.c	526;"	d	file:
CHECK_ROUTE_H	../include/check_route.h	2;"	d
CHECK_RR_GRAPH_H	../include/check_rr_graph.h	2;"	d
CHUNK_SIZE	util.c	119;"	d	file:
CLB	../include/vpr_types.h	/^    CLB,$/;"	e	enum:e_block_types
CLB_IPIN	../include/path_delay2.h	/^    CLB_IPIN,$/;"	e	enum:__anon6
CLB_OPIN	../include/path_delay2.h	/^    CLB_OPIN,$/;"	e	enum:__anon6
CONSTANT_GEN_SOURCE	../include/path_delay2.h	/^    CONSTANT_GEN_SOURCE$/;"	e	enum:__anon6
CYAN	../include/graphics.h	/^    CYAN,$/;"	e	enum:color_types
C_downstream	../include/route_tree_timing.h	/^    float C_downstream;$/;"	m	struct:s_rt_node	access:public
C_downstream	net_delay.c	/^    float C_downstream;$/;"	m	struct:s_rc_node	file:	access:public
C_ipin_cblock	../include/vpr_types.h	/^    float   C_ipin_cblock;$/;"	m	struct:__anon20	access:public
C_load	../include/vpr_types.h	/^    float C_load;$/;"	m	struct:__anon23	access:public
Cin	../include/vpr_types.h	/^    float Cin;$/;"	m	struct:s_switch_inf	access:public
Cmetal	../include/vpr_types.h	/^    float Cmetal;$/;"	m	struct:__anon17	access:public
Cmetal	../include/vpr_types.h	/^    float Cmetal;$/;"	m	struct:__anon18	access:public
Cout	../include/vpr_types.h	/^    float Cout;$/;"	m	struct:s_switch_inf	access:public
DARKGREEN	../include/graphics.h	/^    DARKGREEN,$/;"	e	enum:color_types
DARKGREY	../include/graphics.h	/^    DARKGREY,$/;"	e	enum:color_types
DASHED	../include/graphics.h	/^    DASHED$/;"	e	enum:line_types
DEBUG_TIMING_PLACE_LOOKUP	timing_place_lookup.c	51;"	d	file:
DELAY_NORMALIZED	../include/vpr_types.h	/^    DELAY_NORMALIZED,$/;"	e	enum:e_base_cost_type
DELTA	../include/vpr_types.h	/^    DELTA$/;"	e	enum:e_stat
DEMAND_ONLY	../include/vpr_types.h	/^    DEMAND_ONLY$/;"	e	enum:e_base_cost_type
DETAILED	../include/vpr_types.h	/^    DETAILED$/;"	e	enum:e_route_type
DETAILED_START	read_arch.c	127;"	d	file:
DRAW_ALL_BUT_BUFFERS_RR	draw.c	/^enum e_draw_rr_toggle {DRAW_NO_RR = 0, DRAW_ALL_RR, DRAW_ALL_BUT_BUFFERS_RR,$/;"	e	enum:e_draw_rr_toggle	file:
DRAW_ALL_RR	draw.c	/^enum e_draw_rr_toggle {DRAW_NO_RR = 0, DRAW_ALL_RR, DRAW_ALL_BUT_BUFFERS_RR,$/;"	e	enum:e_draw_rr_toggle	file:
DRAW_H	../include/draw.h	2;"	d
DRAW_NODES_AND_SBOX_RR	draw.c	/^                       DRAW_NODES_AND_SBOX_RR, DRAW_NODES_RR$/;"	e	enum:e_draw_rr_toggle	file:
DRAW_NODES_RR	draw.c	/^                       DRAW_NODES_AND_SBOX_RR, DRAW_NODES_RR$/;"	e	enum:e_draw_rr_toggle	file:
DRAW_NO_RR	draw.c	/^enum e_draw_rr_toggle {DRAW_NO_RR = 0, DRAW_ALL_RR, DRAW_ALL_BUT_BUFFERS_RR,$/;"	e	enum:e_draw_rr_toggle	file:
DRIVER	../include/vpr_types.h	/^    DRIVER = 0,$/;"	e	enum:e_pin_type
DUMPFILE	timing_place_lookup.c	53;"	d	file:
EMPTY	place.c	36;"	d	file:
ERROR_TOL	place.c	33;"	d	file:
ERROR_TOL	route_timing.c	579;"	d	file:
FALSE	../include/util.h	/^typedef enum {FALSE, TRUE} boolean;$/;"	e	enum:__anon11
FF_SINK	../include/path_delay2.h	/^    FF_SINK,$/;"	e	enum:__anon6
FF_SOURCE	../include/path_delay2.h	/^    FF_SOURCE,$/;"	e	enum:__anon6
FRACTIONAL	../include/vpr_types.h	/^    FRACTIONAL$/;"	e	enum:e_Fc_type
FRAGMENT_THRESHOLD	util.c	120;"	d	file:
FREE	../include/vpr_types.h	/^    FREE,$/;"	e	enum:e_pad_loc_type
FROM	place.c	29;"	d	file:
FROM_AND_TO	place.c	31;"	d	file:
FROM_X_TO_Y	draw.c	/^enum e_edge_dir {FROM_X_TO_Y, FROM_Y_TO_X}; \/* Chanx to chany or vice versa? *\/$/;"	e	enum:e_edge_dir	file:
FROM_Y_TO_X	draw.c	/^enum e_edge_dir {FROM_X_TO_Y, FROM_Y_TO_X}; \/* Chanx to chany or vice versa? *\/$/;"	e	enum:e_edge_dir	file:
Fc_input	../include/vpr_types.h	/^    float Fc_input;$/;"	m	struct:s_det_routing_arch	access:public
Fc_output	../include/vpr_types.h	/^    float Fc_output;$/;"	m	struct:s_det_routing_arch	access:public
Fc_pad	../include/vpr_types.h	/^    float Fc_pad;$/;"	m	struct:s_det_routing_arch	access:public
Fc_type	../include/vpr_types.h	/^    enum  e_Fc_type Fc_type;$/;"	m	struct:s_det_routing_arch	typeref:enum:s_det_routing_arch::e_Fc_type	access:public
GAUSSIAN	../include/vpr_types.h	/^    GAUSSIAN,$/;"	e	enum:e_stat
GLOBAL	../include/vpr_types.h	/^    GLOBAL,$/;"	e	enum:e_route_type
GLOBALS_H	../include/globals.h	2;"	d
GRAPHICS_H	../include/graphics.h	2;"	d
GREEN	../include/graphics.h	/^    GREEN,$/;"	e	enum:color_types
HASHSIZE	hash.c	6;"	d	file:
HASH_H	../include/hash.h	2;"	d
HEAPSORT_H	../include/heapsort.h	2;"	d
HIGHLIGHTED	draw.c	/^enum e_draw_net_type {ALL_NETS, HIGHLIGHTED};$/;"	e	enum:e_draw_net_type	file:
HUGE_FLOAT	../include/vpr_types.h	49;"	d
IA	util.c	523;"	d	file:
IC	util.c	524;"	d	file:
ILLEGAL	../include/vpr_types.h	/^    ILLEGAL$/;"	e	enum:e_block_types
IM	util.c	525;"	d	file:
IMPOSSIBLE	../include/timing_place_lookup.h	7;"	d
INITIAL_BLOCK_STORAGE	read_netlist.c	167;"	d	file:
INPAD	../include/vpr_types.h	/^    INPAD,$/;"	e	enum:e_block_types
INPAD_OPIN	../include/path_delay2.h	/^    INPAD_OPIN,$/;"	e	enum:__anon6
INPAD_SOURCE	../include/path_delay2.h	/^    INPAD_SOURCE,$/;"	e	enum:__anon6
INTRINSIC_DELAY	../include/vpr_types.h	/^    INTRINSIC_DELAY,$/;"	e	enum:e_base_cost_type
IO	../include/vpr_types.h	/^    IO,$/;"	e	enum:e_block_types
IPIN	../include/vpr_types.h	/^    IPIN,$/;"	e	enum:__anon21
IPIN_COST_INDEX	../include/vpr_types.h	/^    IPIN_COST_INDEX,$/;"	e	enum:e_cost_indices
LEFT	../include/vpr_types.h	/^    LEFT = 2,$/;"	e	enum:e_side
LIGHTGREY	../include/graphics.h	/^    LIGHTGREY,$/;"	e	enum:color_types
LINEAR_CONG	../include/vpr_types.h	/^    LINEAR_CONG,$/;"	e	enum:place_c_types
LONGLINE	segment_stats.c	10;"	d	file:
MAGENTA	../include/graphics.h	/^    MAGENTA$/;"	e	enum:color_types
MAJOR	../include/vpr_types.h	47;"	d
MAXPIXEL	graphics.c	154;"	d	file:
MAXPTS	../include/graphics.h	28;"	d
MAX_CHANNEL_WIDTH	../include/vpr_types.h	53;"	d
MAX_FONT_SIZE	graphics.c	89;"	d	file:
MAX_MOVES_BEFORE_RECOMPUTE	place.c	34;"	d	file:
MAX_SHORT	../include/vpr_types.h	54;"	d
MINOR	../include/vpr_types.h	46;"	d
MINPIXEL	graphics.c	155;"	d	file:
MWIDTH	graphics.c	87;"	d	file:
NCHUNK	route_common.c	884;"	d	file:
NDEBUG	../include/vpr_types.h	17;"	d
NET_COUNT	timing_place_lookup.c	33;"	d	file:
NET_DELAY_H	../include/net_delay.h	2;"	d
NET_TIMING_DRIVEN_PLACE	../include/vpr_types.h	/^    NET_TIMING_DRIVEN_PLACE,$/;"	e	enum:e_place_algorithm
NET_USED	timing_place_lookup.c	37;"	d	file:
NET_USED_SINK_BLOCK	timing_place_lookup.c	40;"	d	file:
NET_USED_SOURCE_BLOCK	timing_place_lookup.c	39;"	d	file:
NONLINEAR_CONG	../include/vpr_types.h	/^    NONLINEAR_CONG$/;"	e	enum:place_c_types
NORMAL	place.c	/^enum cost_methods {NORMAL, CHECK};$/;"	e	enum:cost_methods	file:
NO_FIXED_CHANNEL_WIDTH	../include/vpr_types.h	334;"	d
NO_GRAPHICS	../include/vpr_types.h	16;"	d
NO_PICTURE	../include/vpr_types.h	/^    NO_PICTURE,$/;"	e	enum:pic_type
NO_PREVIOUS	../include/vpr_types.h	601;"	d
NO_ROUTE_THROUGHS	route_tree_timing.c	237;"	d	file:
NUMINP	read_arch.c	131;"	d	file:
NUM_COLOR	../include/graphics.h	7;"	d
NUM_DETAILED	read_arch.c	124;"	d	file:
NUM_REQUIRED	read_arch.c	123;"	d	file:
NUM_TIMING	read_arch.c	125;"	d	file:
OFF	graphics.c	930;"	d	file:
ON	graphics.c	931;"	d	file:
OPEN	../include/vpr_types.h	/^    OPEN = -1,$/;"	e	enum:e_pin_type
OPIN	../include/vpr_types.h	/^    OPIN,$/;"	e	enum:__anon21
OPIN_COST_INDEX	../include/vpr_types.h	/^    OPIN_COST_INDEX,$/;"	e	enum:e_cost_indices
OUTPAD	../include/vpr_types.h	/^    OUTPAD,$/;"	e	enum:e_block_types
OUTPAD_IPIN	../include/path_delay2.h	/^    OUTPAD_IPIN,$/;"	e	enum:__anon6
OUTPAD_SINK	../include/path_delay2.h	/^    OUTPAD_SINK,$/;"	e	enum:__anon6
PATH_DELAY2_H	../include/path_delay2.h	2;"	d
PATH_DELAY_H	../include/path_delay.h	2;"	d
PATH_TIMING_DRIVEN_PLACE	../include/vpr_types.h	/^    PATH_TIMING_DRIVEN_PLACE$/;"	e	enum:e_place_algorithm
PI	graphics.c	90;"	d	file:
PLACEMENT	../include/vpr_types.h	/^    PLACEMENT,$/;"	e	enum:pic_type
PLACE_ALWAYS	../include/vpr_types.h	/^    PLACE_ALWAYS$/;"	e	enum:pfreq
PLACE_AND_ROUTE	../include/vpr_types.h	/^    PLACE_AND_ROUTE,$/;"	e	enum:e_operation
PLACE_AND_ROUTE_H	../include/place_and_route.h	2;"	d
PLACE_H	../include/place.h	2;"	d
PLACE_NEVER	../include/vpr_types.h	/^    PLACE_NEVER,$/;"	e	enum:pfreq
PLACE_ONCE	../include/vpr_types.h	/^    PLACE_ONCE,$/;"	e	enum:pfreq
PLACE_ONLY	../include/vpr_types.h	/^    PLACE_ONLY,$/;"	e	enum:e_operation
POSTSCRIPT	../include/graphics.h	5;"	d
PRINT_NETLIST_H	../include/print_netlist.h	2;"	d
PTRANS_FLAG	check_rr_graph.c	10;"	d	file:
PULSE	../include/vpr_types.h	/^    PULSE,$/;"	e	enum:e_stat
R	../include/vpr_types.h	/^    float R;$/;"	m	struct:__anon22	access:public
R	../include/vpr_types.h	/^    float R;$/;"	m	struct:s_switch_inf	access:public
RANDOM	../include/vpr_types.h	/^    RANDOM,$/;"	e	enum:e_pad_loc_type
READ_ARCH_H	../include/read_arch.h	2;"	d
READ_NETLIST_H	../include/read_netlist.h	2;"	d
READ_PLACE_H	../include/read_place.h	2;"	d
RECEIVER	../include/vpr_types.h	/^    RECEIVER = 1$/;"	e	enum:e_pin_type
RED	../include/graphics.h	/^    RED,$/;"	e	enum:color_types
RIGHT	../include/vpr_types.h	/^    RIGHT = 3$/;"	e	enum:e_side
ROUND_UP	route_timing.c	470;"	d	file:
ROUTE_BREATH_FIRST_H	../include/route_breadth_first.h	2;"	d
ROUTE_COMMNO_H	../include/route_common.h	2;"	d
ROUTE_EXPORT_H	../include/route_export.h	2;"	d
ROUTE_ONLY	../include/vpr_types.h	/^    ROUTE_ONLY,$/;"	e	enum:e_operation
ROUTE_TIMING_H	../include/route_timing.h	2;"	d
ROUTE_TREE_TIMING_H	../include/route_tree_timing.h	2;"	d
ROUTING	../include/vpr_types.h	/^    ROUTING$/;"	e	enum:pic_type
RR_GRAPH2_H	../include/rr_graph2.h	2;"	d
RR_GRAPH_AREA_H	../include/rr_graph_area.h	2;"	d
RR_GRAPH_H	../include/rr_graph.h	2;"	d
RR_GRAPH_INDEXED_DATA_H	../include/rr_graph_indexed_data.h	2;"	d
RR_GRAPH_SBOX_H	../include/rr_graph_sbox.h	2;"	d
RR_GRAPH_TIMING_PARAMS	../include/rr_graph_timing_params.h	2;"	d
RR_GRAPH_UTIL_INCLUDED	../include/rr_graph_util.h	2;"	d
R_minW_nmos	../include/vpr_types.h	/^    float R_minW_nmos;$/;"	m	struct:s_det_routing_arch	access:public
R_minW_pmos	../include/vpr_types.h	/^    float R_minW_pmos;$/;"	m	struct:s_det_routing_arch	access:public
R_upstream	../include/route_common.h	/^    float R_upstream;$/;"	m	struct:s_heap	access:public
R_upstream	../include/route_tree_timing.h	/^    float R_upstream;$/;"	m	struct:s_rt_node	access:public
Rmetal	../include/vpr_types.h	/^    float Rmetal;$/;"	m	struct:__anon17	access:public
Rmetal	../include/vpr_types.h	/^    float Rmetal;$/;"	m	struct:__anon18	access:public
SBOX_ERROR	rr_graph_sbox.c	79;"	d	file:
SCREEN	../include/graphics.h	4;"	d
SEGMENT_STATS_H	../include/segment_stats.h	2;"	d
SINK	../include/vpr_types.h	/^    SINK,$/;"	e	enum:__anon21
SINK_BLOCK	timing_place_lookup.c	42;"	d	file:
SINK_COST_INDEX	../include/vpr_types.h	/^    SINK_COST_INDEX,$/;"	e	enum:e_cost_indices
SMALL_NET	place.c	18;"	d	file:
SOLID	../include/graphics.h	/^    SOLID,$/;"	e	enum:line_types
SOURCE	../include/vpr_types.h	/^    SOURCE,$/;"	e	enum:__anon21
SOURCE_BLOCK	timing_place_lookup.c	41;"	d	file:
SOURCE_COST_INDEX	../include/vpr_types.h	/^    SOURCE_COST_INDEX = 0,$/;"	e	enum:e_cost_indices
STATS_H	../include/stats.h	2;"	d
SUBBLK_IPIN	../include/path_delay2.h	/^    SUBBLK_IPIN,$/;"	e	enum:__anon6
SUBBLK_OPIN	../include/path_delay2.h	/^    SUBBLK_OPIN,$/;"	e	enum:__anon6
SUBSET	../include/vpr_types.h	/^    SUBSET,$/;"	e	enum:e_switch_block_type
TIMING_ANALYSIS_ONLY	../include/vpr_types.h	/^    TIMING_ANALYSIS_ONLY$/;"	e	enum:e_operation
TIMING_DRIVEN	../include/vpr_types.h	/^    TIMING_DRIVEN$/;"	e	enum:e_router_algorithm
TIMING_PLACE_H	../include/timing_place.h	2;"	d
TIMING_PLACE_LOOKUP_H	../include/timing_place_lookup.h	2;"	d
TIMING_START	read_arch.c	128;"	d	file:
TO	place.c	30;"	d	file:
TOKENS	../include/vpr_types.h	20;"	d
TOP	../include/vpr_types.h	/^    TOP = 0,$/;"	e	enum:e_side
TRUE	../include/util.h	/^typedef enum {FALSE, TRUE} boolean;$/;"	e	enum:__anon11
T_AREA_HEIGHT	graphics.c	88;"	d	file:
T_CONSTANT_GENERATOR	path_delay.c	755;"	d	file:
T_arr	../include/path_delay2.h	/^    float    T_arr; \/* *\/$/;"	m	struct:__anon5	access:public
T_clb_ipin_to_sblk_ipin	../include/vpr_types.h	/^    float   T_clb_ipin_to_sblk_ipin;$/;"	m	struct:__anon20	access:public
T_comb	../include/vpr_types.h	/^    float T_comb;$/;"	m	struct:__anon19	access:public
T_ipad	../include/vpr_types.h	/^    float   T_ipad;$/;"	m	struct:__anon20	access:public
T_ipin_cblock	../include/vpr_types.h	/^    float   T_ipin_cblock;$/;"	m	struct:__anon20	access:public
T_linear	../include/vpr_types.h	/^    float T_linear;$/;"	m	struct:__anon23	access:public
T_opad	../include/vpr_types.h	/^    float   T_opad;$/;"	m	struct:__anon20	access:public
T_quadratic	../include/vpr_types.h	/^    float T_quadratic;$/;"	m	struct:__anon23	access:public
T_req	../include/path_delay2.h	/^    float    T_req; \/* *\/$/;"	m	struct:__anon5	access:public
T_sblk_opin_to_clb_opin	../include/vpr_types.h	/^    float   T_sblk_opin_to_clb_opin;$/;"	m	struct:__anon20	access:public
T_sblk_opin_to_sblk_ipin	../include/vpr_types.h	/^    float   T_sblk_opin_to_sblk_ipin;$/;"	m	struct:__anon20	access:public
T_seq_in	../include/vpr_types.h	/^    float T_seq_in;$/;"	m	struct:__anon19	access:public
T_seq_out	../include/vpr_types.h	/^    float T_seq_out;$/;"	m	struct:__anon19	access:public
T_subblock	../include/vpr_types.h	/^    t_T_subblock* T_subblock;$/;"	m	struct:__anon20	access:public
Tdel	../include/path_delay2.h	/^    float Tdel;$/;"	m	struct:__anon4	access:public
Tdel	../include/route_tree_timing.h	/^    float Tdel;$/;"	m	struct:s_rt_node	access:public
Tdel	../include/vpr_types.h	/^    float Tdel;$/;"	m	struct:s_switch_inf	access:public
Tdel	net_delay.c	/^    float Tdel;$/;"	m	struct:s_rc_node	file:	access:public
UNIFORM	../include/vpr_types.h	/^    UNIFORM,$/;"	e	enum:e_stat
UNIVERSAL	../include/vpr_types.h	/^    UNIVERSAL$/;"	e	enum:e_switch_block_type
USER	../include/vpr_types.h	/^    USER$/;"	e	enum:e_pad_loc_type
USER_SCHED	../include/vpr_types.h	/^    USER_SCHED$/;"	e	enum:sched_type
UTIL_H	../include/util.h	2;"	d
VPR_TYPES_H	../include/vpr_types.h	3;"	d
VPR_UTILS_H	../include/vpr_utils.h	2;"	d
WHITE	../include/graphics.h	/^    WHITE,$/;"	e	enum:color_types
WILTON	../include/vpr_types.h	/^    WILTON,$/;"	e	enum:e_switch_block_type
XPOST	graphics.c	75;"	d	file:
XTOWORLD	graphics.c	81;"	d	file:
YELLOW	../include/graphics.h	/^    YELLOW,$/;"	e	enum:color_types
YPOST	graphics.c	76;"	d	file:
YTOWORLD	graphics.c	82;"	d	file:
__anon13::dc	../include/vpr_types.h	/^    float dc;$/;"	m	struct:__anon13	access:public
__anon13::peak	../include/vpr_types.h	/^    float peak;$/;"	m	struct:__anon13	access:public
__anon13::type	../include/vpr_types.h	/^    enum e_stat type;$/;"	m	struct:__anon13	typeref:enum:__anon13::e_stat	access:public
__anon13::width	../include/vpr_types.h	/^    float width;$/;"	m	struct:__anon13	access:public
__anon13::xpeak	../include/vpr_types.h	/^    float xpeak;$/;"	m	struct:__anon13	access:public
__anon14::chan_width_io	../include/vpr_types.h	/^    float chan_width_io;$/;"	m	struct:__anon14	access:public
__anon14::chan_x_dist	../include/vpr_types.h	/^    t_chan chan_x_dist;$/;"	m	struct:__anon14	access:public
__anon14::chan_y_dist	../include/vpr_types.h	/^    t_chan chan_y_dist;$/;"	m	struct:__anon14	access:public
__anon15::clock	../include/vpr_types.h	/^    int clock;$/;"	m	struct:__anon15	access:public
__anon15::inputs	../include/vpr_types.h	/^    int* inputs;$/;"	m	struct:__anon15	access:public
__anon15::name	../include/vpr_types.h	/^    char* name;$/;"	m	struct:__anon15	access:public
__anon15::output	../include/vpr_types.h	/^    int output;$/;"	m	struct:__anon15	access:public
__anon16::chunk_head_ptr	../include/vpr_types.h	/^    struct s_linked_vptr* chunk_head_ptr;$/;"	m	struct:__anon16	typeref:struct:__anon16::s_linked_vptr	access:public
__anon16::max_subblocks_per_block	../include/vpr_types.h	/^    int  max_subblocks_per_block;$/;"	m	struct:__anon16	access:public
__anon16::num_const_gen	../include/vpr_types.h	/^    int num_const_gen;$/;"	m	struct:__anon16	access:public
__anon16::num_ff	../include/vpr_types.h	/^    int num_ff; \/* number of flip-flops in the input circuit netlist *\/$/;"	m	struct:__anon16	access:public
__anon16::num_subblocks_per_block	../include/vpr_types.h	/^    int* num_subblocks_per_block; \/* int num_subblocks_per_block[0...num_blocks-1] *\/$/;"	m	struct:__anon16	access:public
__anon16::subblock_inf	../include/vpr_types.h	/^    t_subblock** subblock_inf;$/;"	m	struct:__anon16	access:public
__anon16::subblock_lut_size	../include/vpr_types.h	/^    int subblock_lut_size; \/* input pins of subblock, that is, LUT-K. *\/$/;"	m	struct:__anon16	access:public
__anon17::Cmetal	../include/vpr_types.h	/^    float Cmetal;$/;"	m	struct:__anon17	access:public
__anon17::Rmetal	../include/vpr_types.h	/^    float Rmetal;$/;"	m	struct:__anon17	access:public
__anon17::frac_cb	../include/vpr_types.h	/^    float frac_cb;$/;"	m	struct:__anon17	access:public
__anon17::frac_sb	../include/vpr_types.h	/^    float frac_sb;$/;"	m	struct:__anon17	access:public
__anon17::frequency	../include/vpr_types.h	/^    float frequency;$/;"	m	struct:__anon17	access:public
__anon17::length	../include/vpr_types.h	/^    int   length;$/;"	m	struct:__anon17	access:public
__anon17::longline	../include/vpr_types.h	/^    boolean longline;$/;"	m	struct:__anon17	access:public
__anon17::opin_switch	../include/vpr_types.h	/^    short opin_switch;$/;"	m	struct:__anon17	access:public
__anon17::wire_switch	../include/vpr_types.h	/^    short wire_switch;$/;"	m	struct:__anon17	access:public
__anon18::Cmetal	../include/vpr_types.h	/^    float Cmetal;$/;"	m	struct:__anon18	access:public
__anon18::Rmetal	../include/vpr_types.h	/^    float Rmetal;$/;"	m	struct:__anon18	access:public
__anon18::cb	../include/vpr_types.h	/^    boolean* cb;$/;"	m	struct:__anon18	access:public
__anon18::index	../include/vpr_types.h	/^    int index;$/;"	m	struct:__anon18	access:public
__anon18::length	../include/vpr_types.h	/^    int length;$/;"	m	struct:__anon18	access:public
__anon18::longline	../include/vpr_types.h	/^    boolean longline;$/;"	m	struct:__anon18	access:public
__anon18::opin_switch	../include/vpr_types.h	/^    short opin_switch;$/;"	m	struct:__anon18	access:public
__anon18::sb	../include/vpr_types.h	/^    boolean* sb;$/;"	m	struct:__anon18	access:public
__anon18::start	../include/vpr_types.h	/^    int start;$/;"	m	struct:__anon18	access:public
__anon18::wire_switch	../include/vpr_types.h	/^    short wire_switch;$/;"	m	struct:__anon18	access:public
__anon19::T_comb	../include/vpr_types.h	/^    float T_comb;$/;"	m	struct:__anon19	access:public
__anon19::T_seq_in	../include/vpr_types.h	/^    float T_seq_in;$/;"	m	struct:__anon19	access:public
__anon19::T_seq_out	../include/vpr_types.h	/^    float T_seq_out;$/;"	m	struct:__anon19	access:public
__anon1::fcn	graphics.c	/^    void (*fcn)(void (*drawscreen)(void));$/;"	m	struct:__anon1	file:	access:public
__anon1::height	graphics.c	/^    int height;$/;"	m	struct:__anon1	file:	access:public
__anon1::ispoly	graphics.c	/^    int ispoly;$/;"	m	struct:__anon1	file:	access:public
__anon1::ispressed	graphics.c	/^    int ispressed;$/;"	m	struct:__anon1	file:	access:public
__anon1::istext	graphics.c	/^    int istext;$/;"	m	struct:__anon1	file:	access:public
__anon1::poly	graphics.c	/^    int poly[3][2];$/;"	m	struct:__anon1	file:	access:public
__anon1::text	graphics.c	/^    char text[BUTTON_TEXT_LEN];$/;"	m	struct:__anon1	file:	access:public
__anon1::width	graphics.c	/^    int width;$/;"	m	struct:__anon1	file:	access:public
__anon1::win	graphics.c	/^    Window win;$/;"	m	struct:__anon1	file:	access:public
__anon1::xleft	graphics.c	/^    int xleft;$/;"	m	struct:__anon1	file:	access:public
__anon1::ytop	graphics.c	/^    int ytop;$/;"	m	struct:__anon1	file:	access:public
__anon20::C_ipin_cblock	../include/vpr_types.h	/^    float   C_ipin_cblock;$/;"	m	struct:__anon20	access:public
__anon20::T_clb_ipin_to_sblk_ipin	../include/vpr_types.h	/^    float   T_clb_ipin_to_sblk_ipin;$/;"	m	struct:__anon20	access:public
__anon20::T_ipad	../include/vpr_types.h	/^    float   T_ipad;$/;"	m	struct:__anon20	access:public
__anon20::T_ipin_cblock	../include/vpr_types.h	/^    float   T_ipin_cblock;$/;"	m	struct:__anon20	access:public
__anon20::T_opad	../include/vpr_types.h	/^    float   T_opad;$/;"	m	struct:__anon20	access:public
__anon20::T_sblk_opin_to_clb_opin	../include/vpr_types.h	/^    float   T_sblk_opin_to_clb_opin;$/;"	m	struct:__anon20	access:public
__anon20::T_sblk_opin_to_sblk_ipin	../include/vpr_types.h	/^    float   T_sblk_opin_to_sblk_ipin;$/;"	m	struct:__anon20	access:public
__anon20::T_subblock	../include/vpr_types.h	/^    t_T_subblock* T_subblock;$/;"	m	struct:__anon20	access:public
__anon20::timing_analysis_enabled	../include/vpr_types.h	/^    boolean timing_analysis_enabled;$/;"	m	struct:__anon20	access:public
__anon22::C	../include/vpr_types.h	/^    float C;$/;"	m	struct:__anon22	access:public
__anon22::R	../include/vpr_types.h	/^    float R;$/;"	m	struct:__anon22	access:public
__anon22::capacity	../include/vpr_types.h	/^    short capacity;$/;"	m	struct:__anon22	access:public
__anon22::cost_index	../include/vpr_types.h	/^    short cost_index;$/;"	m	struct:__anon22	access:public
__anon22::edges	../include/vpr_types.h	/^    int* edges;$/;"	m	struct:__anon22	access:public
__anon22::num_edges	../include/vpr_types.h	/^    short num_edges;$/;"	m	struct:__anon22	access:public
__anon22::occ	../include/vpr_types.h	/^    short occ;$/;"	m	struct:__anon22	access:public
__anon22::ptc_num	../include/vpr_types.h	/^    short ptc_num;$/;"	m	struct:__anon22	access:public
__anon22::switches	../include/vpr_types.h	/^    short* switches;$/;"	m	struct:__anon22	access:public
__anon22::type	../include/vpr_types.h	/^    t_rr_type type;$/;"	m	struct:__anon22	access:public
__anon22::xhigh	../include/vpr_types.h	/^    short xhigh;$/;"	m	struct:__anon22	access:public
__anon22::xlow	../include/vpr_types.h	/^    short xlow;$/;"	m	struct:__anon22	access:public
__anon22::yhigh	../include/vpr_types.h	/^    short yhigh;$/;"	m	struct:__anon22	access:public
__anon22::ylow	../include/vpr_types.h	/^    short ylow;$/;"	m	struct:__anon22	access:public
__anon23::C_load	../include/vpr_types.h	/^    float C_load;$/;"	m	struct:__anon23	access:public
__anon23::T_linear	../include/vpr_types.h	/^    float T_linear;$/;"	m	struct:__anon23	access:public
__anon23::T_quadratic	../include/vpr_types.h	/^    float T_quadratic;$/;"	m	struct:__anon23	access:public
__anon23::base_cost	../include/vpr_types.h	/^    float base_cost;$/;"	m	struct:__anon23	access:public
__anon23::inv_length	../include/vpr_types.h	/^    float inv_length;$/;"	m	struct:__anon23	access:public
__anon23::ortho_cost_index	../include/vpr_types.h	/^    int ortho_cost_index;$/;"	m	struct:__anon23	access:public
__anon23::saved_base_cost	../include/vpr_types.h	/^    float saved_base_cost;$/;"	m	struct:__anon23	access:public
__anon23::seg_index	../include/vpr_types.h	/^    int seg_index;$/;"	m	struct:__anon23	access:public
__anon3::x	../include/graphics.h	/^    float x;$/;"	m	struct:__anon3	access:public
__anon3::y	../include/graphics.h	/^    float y;$/;"	m	struct:__anon3	access:public
__anon4::Tdel	../include/path_delay2.h	/^    float Tdel;$/;"	m	struct:__anon4	access:public
__anon4::to_node	../include/path_delay2.h	/^    int to_node;$/;"	m	struct:__anon4	access:public
__anon5::T_arr	../include/path_delay2.h	/^    float    T_arr; \/* *\/$/;"	m	struct:__anon5	access:public
__anon5::T_req	../include/path_delay2.h	/^    float    T_req; \/* *\/$/;"	m	struct:__anon5	access:public
__anon5::num_edges	../include/path_delay2.h	/^    int      num_edges;$/;"	m	struct:__anon5	access:public
__anon5::out_edges	../include/path_delay2.h	/^    t_tedge* out_edges;$/;"	m	struct:__anon5	access:public
__anon7::iblk	../include/path_delay2.h	/^    int iblk;$/;"	m	struct:__anon7	access:public
__anon7::ipin	../include/path_delay2.h	/^    short ipin;$/;"	m	struct:__anon7	access:public
__anon7::isubblk	../include/path_delay2.h	/^    short isubblk;$/;"	m	struct:__anon7	access:public
__anon7::type	../include/path_delay2.h	/^    t_tnode_type type;$/;"	m	struct:__anon7	access:public
__anon9::acc_cost	../include/route_common.h	/^    float acc_cost;$/;"	m	struct:__anon9	access:public
__anon9::backward_path_cost	../include/route_common.h	/^    float backward_path_cost;$/;"	m	struct:__anon9	access:public
__anon9::path_cost	../include/route_common.h	/^    path_cost;$/;"	m	struct:__anon9	access:public
__anon9::pres_cost	../include/route_common.h	/^    float pres_cost;$/;"	m	struct:__anon9	access:public
__anon9::prev_edge	../include/route_common.h	/^    short prev_edge;$/;"	m	struct:__anon9	access:public
__anon9::prev_node	../include/route_common.h	/^    int prev_node;$/;"	m	struct:__anon9	access:public
__anon9::target_flag	../include/route_common.h	/^    target_flag;$/;"	m	struct:__anon9	access:public
acc_cost	../include/route_common.h	/^    float acc_cost;$/;"	m	struct:__anon9	access:public
acc_fac	../include/vpr_types.h	/^    float acc_fac;$/;"	m	struct:s_router_opts	access:public
add_clb	read_netlist.c	/^static char* add_clb(int doall, FILE* fp_net, char* buf)$/;"	f	file:	signature:(int doall, FILE* fp_net, char* buf)
add_clb	read_netlist.c	/^static char* add_clb(int doall, FILE* fp_net, char* buf);$/;"	p	file:	signature:(int doall, FILE* fp_net, char* buf)
add_global	read_netlist.c	/^static void add_global(int doall, FILE* fp_net, char* buf)$/;"	f	file:	signature:(int doall, FILE* fp_net, char* buf)
add_global	read_netlist.c	/^static void add_global(int doall, FILE* fp_net, char* buf);$/;"	p	file:	signature:(int doall, FILE* fp_net, char* buf)
add_io	read_netlist.c	/^static void add_io(int doall, int block_type, FILE* fp_net, char* buf)$/;"	f	file:	signature:(int doall, int block_type, FILE* fp_net, char* buf)
add_io	read_netlist.c	/^static void add_io(int doall, int type, FILE* fp_net, char* buf);$/;"	p	file:	signature:(int doall, int type, FILE* fp_net, char* buf)
add_net	read_netlist.c	/^static int add_net(char* ptr, enum e_pin_type type, int bnum, int blk_pnum,$/;"	f	file:	signature:(char* ptr, enum e_pin_type type, int bnum, int blk_pnum, int doall)
add_net	read_netlist.c	/^static int add_net(char* ptr, enum e_pin_type type, int bnum, int blk_pnum,$/;"	p	file:	signature:(char* ptr, enum e_pin_type type, int bnum, int blk_pnum, int doall)
add_path_to_route_tree	route_tree_timing.c	/^static t_rt_node* add_path_to_route_tree(struct s_heap* hptr, t_rt_node$/;"	f	file:	signature:(struct s_heap* hptr, t_rt_node ** sink_rt_node_ptr)
add_path_to_route_tree	route_tree_timing.c	/^static t_rt_node* add_path_to_route_tree(struct s_heap* hptr, t_rt_node$/;"	p	file:	signature:(struct s_heap* hptr, t_rt_node ** sink_rt_node_ptr)
add_route_tree_to_heap	route_timing.c	/^static void add_route_tree_to_heap(t_rt_node* rt_node, int target_node,$/;"	f	file:	signature:(t_rt_node* rt_node, int target_node, float target_criticality, float astar_fac)
add_route_tree_to_heap	route_timing.c	/^static void add_route_tree_to_heap(t_rt_node* rt_node, int target_node,$/;"	p	file:	signature:(t_rt_node* rt_node, int target_node, float target_criticality, float astar_fac)
add_rr_graph_C_from_switches	../include/rr_graph_timing_params.h	/^void add_rr_graph_C_from_switches(float C_ipin_cblock);$/;"	p	signature:(float C_ipin_cblock)
add_rr_graph_C_from_switches	rr_graph_timing_params.c	/^void add_rr_graph_C_from_switches(float C_ipin_cblock)$/;"	f	signature:(float C_ipin_cblock)
add_to_heap	route_common.c	/^static void add_to_heap(struct s_heap* hptr)$/;"	f	file:	signature:(struct s_heap* hptr)
add_to_heap	route_common.c	/^static void add_to_heap(struct s_heap* hptr);$/;"	p	file:	signature:(struct s_heap* hptr)
add_to_mod_list	../include/route_common.h	/^void add_to_mod_list(float* fptr);$/;"	p	signature:(float* fptr)
add_to_mod_list	route_common.c	/^void add_to_mod_list(float* fptr)$/;"	f	signature:(float* fptr)
add_to_rc_tree	net_delay.c	/^static void add_to_rc_tree(t_rc_node* parent_rc, t_rc_node* child_rc, short$/;"	f	file:	signature:(t_rc_node* parent_rc, t_rc_node* child_rc, short iswitch, int inode, t_linked_rc_edge** rc_edge_free_list_ptr)
add_to_rc_tree	net_delay.c	/^static void add_to_rc_tree(t_rc_node* parent_rc, t_rc_node* child_rc, short$/;"	p	file:	signature:(t_rc_node* parent_rc, t_rc_node* child_rc, short iswitch, int inode, t_linked_rc_edge** rc_edge_free_list_ptr)
add_to_sort_heap	heapsort.c	/^static void add_to_sort_heap(int* heap, float* sort_values, int index,$/;"	f	file:	signature:(int* heap, float* sort_values, int index, int heap_tail)
add_to_sort_heap	heapsort.c	/^static void add_to_sort_heap(int* heap, float* sort_values, int index,$/;"	p	file:	signature:(int* heap, float* sort_values, int index, int heap_tail)
adjust_one_rr_occ_and_pcost	route_common.c	/^static void adjust_one_rr_occ_and_pcost(int inode, int add_or_sub, float$/;"	f	file:	signature:(int inode, int add_or_sub, float pres_fac)
adjust_one_rr_occ_and_pcost	route_common.c	/^static void adjust_one_rr_occ_and_pcost(int inode, int add_or_sub, float$/;"	p	file:	signature:(int inode, int add_or_sub, float pres_fac)
adjustwin	graphics.c	/^static void adjustwin(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
adjustwin	graphics.c	/^static void adjustwin(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
alloc_and_assign_internal_structures	timing_place_lookup.c	/^static void alloc_and_assign_internal_structures(struct s_net** original_net,$/;"	f	file:	signature:(struct s_net** original_net, struct s_block** original_block, int* original_num_nets, int* original_num_blocks)
alloc_and_assign_internal_structures	timing_place_lookup.c	/^static void alloc_and_assign_internal_structures(struct s_net** original_net,$/;"	p	file:	signature:(struct s_net** original_net, struct s_block** original_block, int* original_num_nets, int* original_num_blocks)
alloc_and_load_clb_opins_used_locally	route_common.c	/^static t_ivec** alloc_and_load_clb_opins_used_locally(t_subblock_data$/;"	f	file:	signature:(t_subblock_data subblock_data)
alloc_and_load_clb_opins_used_locally	route_common.c	/^static t_ivec** alloc_and_load_clb_opins_used_locally(t_subblock_data$/;"	p	file:	signature:(t_subblock_data subblock_data)
alloc_and_load_clb_pin_to_tracks	rr_graph.c	/^static int*** alloc_and_load_clb_pin_to_tracks(enum e_pin_type pin_type,$/;"	f	file:	signature:(enum e_pin_type pin_type, int nodes_per_chan, int Fc, boolean perturb_switch_pattern)
alloc_and_load_clb_pin_to_tracks	rr_graph.c	/^static int*** alloc_and_load_clb_pin_to_tracks(enum e_pin_type pin_type,$/;"	p	file:	signature:(enum e_pin_type pin_type, int nodes_per_chan, int Fc, boolean perturb_switch_pattern)
alloc_and_load_edges_and_switches	rr_graph.c	/^void alloc_and_load_edges_and_switches(int inode, int num_edges,$/;"	f	signature:(int inode, int num_edges, t_linked_edge* edge_list_head)
alloc_and_load_edges_and_switches	rr_graph.c	/^void alloc_and_load_edges_and_switches(int inode, int num_edges,$/;"	p	file:	signature:(int inode, int num_edges, t_linked_edge* edge_list_head)
alloc_and_load_fanout_counts	path_delay.c	/^static void alloc_and_load_fanout_counts(int** *num_uses_of_clb_ipin_ptr,$/;"	p	file:	signature:(int** *num_uses_of_clb_ipin_ptr, int** *num_uses_of_sblk_opin_ptr, t_subblock_data subblock_data)
alloc_and_load_fanout_counts	path_delay.c	/^static void alloc_and_load_fanout_counts(int*** num_uses_of_clb_ipin_ptr,$/;"	f	file:	signature:(int*** num_uses_of_clb_ipin_ptr, int*** num_uses_of_sblk_opin_ptr, t_subblock_data subblock_data)
alloc_and_load_for_fast_cost_update	place.c	/^static void alloc_and_load_for_fast_cost_update(float place_cost_exp)$/;"	f	file:	signature:(float place_cost_exp)
alloc_and_load_for_fast_cost_update	place.c	/^static void alloc_and_load_for_fast_cost_update(float place_cost_exp);$/;"	p	file:	signature:(float place_cost_exp)
alloc_and_load_pads_to_tracks	rr_graph.c	/^static int** alloc_and_load_pads_to_tracks(int nodes_per_chan, int Fc_pad)$/;"	f	file:	signature:(int nodes_per_chan, int Fc_pad)
alloc_and_load_pads_to_tracks	rr_graph.c	/^static int** alloc_and_load_pads_to_tracks(int nodes_per_chan, int Fc_pad);$/;"	p	file:	signature:(int nodes_per_chan, int Fc_pad)
alloc_and_load_pin_mappings	path_delay.c	/^static int alloc_and_load_pin_mappings(int** *block_pin_to_tnode_ptr,$/;"	p	file:	signature:(int** *block_pin_to_tnode_ptr, int**** sblk_pin_to_tnode_ptr, t_subblock_data subblock_data, int** num_uses_of_sblk_opin)
alloc_and_load_pin_mappings	path_delay.c	/^static int alloc_and_load_pin_mappings(int***  block_pin_to_tnode_ptr,$/;"	f	file:	signature:(int*** block_pin_to_tnode_ptr, int**** sblk_pin_to_tnode_ptr, t_subblock_data subblock_data, int** num_uses_of_sblk_opin)
alloc_and_load_placement_structs	place.c	/^static void alloc_and_load_placement_structs(int place_cost_type,$/;"	f	file:	signature:(int place_cost_type, int num_regions, float place_cost_exp, float*** old_region_occ_x, float*** old_region_occ_y, struct s_placer_opts placer_opts)
alloc_and_load_placement_structs	place.c	/^static void alloc_and_load_placement_structs(int place_cost_type,$/;"	p	file:	signature:(int place_cost_type, int num_regions, float place_cost_exp, float** *old_region_occ_x, float** *old_region_occ_y, struct s_placer_opts placer_opts)
alloc_and_load_rc_tree	net_delay.c	/^static t_rc_node* alloc_and_load_rc_tree(int inet, t_rc_node$/;"	f	file:	signature:(int inet, t_rc_node ** rc_node_free_list_ptr, t_linked_rc_edge** rc_edge_free_list_ptr, t_linked_rc_ptr* rr_node_to_rc_node)
alloc_and_load_rc_tree	net_delay.c	/^static t_rc_node* alloc_and_load_rc_tree(int inet, t_rc_node$/;"	p	file:	signature:(int inet, t_rc_node ** rc_node_free_list_ptr, t_linked_rc_edge** rc_edge_free_list_ptr, t_linked_rc_ptr* rr_node_to_rc_node)
alloc_and_load_rr_clb_source	rr_graph.c	/^static void alloc_and_load_rr_clb_source(int** rr_node_indices,$/;"	f	file:	signature:(int** rr_node_indices, int nodes_per_chan)
alloc_and_load_rr_clb_source	rr_graph.c	/^static void alloc_and_load_rr_clb_source(int** rr_node_indices,$/;"	p	file:	signature:(int** rr_node_indices, int nodes_per_chan)
alloc_and_load_rr_graph	rr_graph.c	/^static void alloc_and_load_rr_graph(int**  rr_node_indices,$/;"	f	file:	signature:(int** rr_node_indices, int*** clb_opin_to_tracks, struct s_ivec** tracks_to_clb_ipin, int** pads_to_tracks, struct s_ivec* tracks_to_pads, int Fc_output, int Fc_input, int Fc_pad, int nodes_per_chan, enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_seg_details* seg_details_x, t_seg_details* seg_details_y)
alloc_and_load_rr_graph	rr_graph.c	/^static void alloc_and_load_rr_graph(int** rr_node_indices,$/;"	p	file:	signature:(int** rr_node_indices, int** *clb_opin_to_tracks, struct s_ivec** tracks_to_clb_ipin, int** pads_to_tracks, struct s_ivec* tracks_to_pads, int Fc_output, int Fc_input, int Fc_pad, int nodes_per_chan, enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_seg_details* seg_details_x, t_seg_details* seg_details_y)
alloc_and_load_rr_indexed_data	../include/rr_graph_indexed_data.h	/^void alloc_and_load_rr_indexed_data(t_segment_inf* segment_inf,$/;"	p	signature:(t_segment_inf* segment_inf, int num_segment, int** rr_node_indices, int nodes_per_chan, int wire_to_ipin_switch, enum e_base_cost_type base_cost_type)
alloc_and_load_rr_indexed_data	rr_graph_indexed_data.c	/^void alloc_and_load_rr_indexed_data(t_segment_inf* segment_inf,$/;"	f	signature:(t_segment_inf* segment_inf, int num_segment, int** rr_node_indices, int nodes_per_chan, int wire_to_ipin_switch, enum e_base_cost_type base_cost_type)
alloc_and_load_rr_node_indices	../include/rr_graph2.h	/^int** alloc_and_load_rr_node_indices(int nodes_per_clb,$/;"	p	signature:(int nodes_per_clb, int nodes_per_pad, int nodes_per_chan, t_seg_details* seg_details_x, t_seg_details* seg_details_y)
alloc_and_load_rr_node_indices	rr_graph2.c	/^int** alloc_and_load_rr_node_indices(int nodes_per_clb,$/;"	f	signature:(int nodes_per_clb, int nodes_per_pad, int nodes_per_chan, t_seg_details* seg_details_x, t_seg_details* seg_details_y)
alloc_and_load_rr_node_route_structs	../include/route_common.h	/^void alloc_and_load_rr_node_route_structs(void);$/;"	p	signature:(void)
alloc_and_load_rr_node_route_structs	route_common.c	/^void alloc_and_load_rr_node_route_structs(void)$/;"	f	signature:(void)
alloc_and_load_seg_details	../include/rr_graph2.h	/^t_seg_details* alloc_and_load_seg_details(int nodes_per_chan,$/;"	p	signature:(int nodes_per_chan, t_segment_inf* segment_inf, int num_seg_types, int max_len)
alloc_and_load_seg_details	rr_graph2.c	/^t_seg_details* alloc_and_load_seg_details(int nodes_per_chan, t_segment_inf$/;"	f	signature:(int nodes_per_chan, t_segment_inf *segment_inf, int num_seg_types, int max_len)
alloc_and_load_sharable_switch_trans	rr_graph_area.c	/^static float* alloc_and_load_sharable_switch_trans(int num_switch,$/;"	f	file:	signature:(int num_switch, float trans_sram_bit, float R_minW_nmos, float R_minW_pmos)
alloc_and_load_sharable_switch_trans	rr_graph_area.c	/^static float* alloc_and_load_sharable_switch_trans(int num_switch,$/;"	p	file:	signature:(int num_switch, float trans_sram_bit, float R_minW_nmos, float R_minW_pmos)
alloc_and_load_switch_block_conn	../include/rr_graph_sbox.h	/^void alloc_and_load_switch_block_conn(int nodes_per_chan,$/;"	p	signature:(int nodes_per_chan, enum e_switch_block_type switch_block_type)
alloc_and_load_switch_block_conn	rr_graph_sbox.c	/^void alloc_and_load_switch_block_conn(int nodes_per_chan,$/;"	f	signature:(int nodes_per_chan, enum e_switch_block_type switch_block_type)
alloc_and_load_timing_graph	../include/path_delay.h	/^float** alloc_and_load_timing_graph(t_timing_inf timing_inf,$/;"	p	signature:(t_timing_inf timing_inf, t_subblock_data subblock_data)
alloc_and_load_timing_graph	path_delay.c	/^float** alloc_and_load_timing_graph(t_timing_inf timing_inf,$/;"	f	signature:(t_timing_inf timing_inf, t_subblock_data subblock_data)
alloc_and_load_timing_graph_levels	../include/path_delay2.h	/^int alloc_and_load_timing_graph_levels(void);$/;"	p	signature:(void)
alloc_and_load_timing_graph_levels	path_delay2.c	/^int alloc_and_load_timing_graph_levels(void)$/;"	f	signature:(void)
alloc_and_load_tnode_fanin_and_check_edges	path_delay2.c	/^static int* alloc_and_load_tnode_fanin_and_check_edges(int* num_sinks_ptr)$/;"	f	file:	signature:(int* num_sinks_ptr)
alloc_and_load_tnode_fanin_and_check_edges	path_delay2.c	/^static int* alloc_and_load_tnode_fanin_and_check_edges(int* num_sinks_ptr);$/;"	p	file:	signature:(int* num_sinks_ptr)
alloc_and_load_tnodes_and_net_mapping	path_delay.c	/^static void alloc_and_load_tnodes_and_net_mapping(int** num_uses_of_clb_ipin,$/;"	f	file:	signature:(int** num_uses_of_clb_ipin, int** num_uses_of_sblk_opin, int** block_pin_to_tnode, int*** sblk_pin_to_tnode, t_subblock_data subblock_data, t_timing_inf timing_inf)
alloc_and_load_tnodes_and_net_mapping	path_delay.c	/^static void alloc_and_load_tnodes_and_net_mapping(int** num_uses_of_clb_ipin,$/;"	p	file:	signature:(int** num_uses_of_clb_ipin, int** num_uses_of_sblk_opin, int** block_pin_to_tnode, int** * sblk_pin_to_tnode, t_subblock_data subblock_data, t_timing_inf timing_inf)
alloc_and_load_tracks_to_clb_ipin	rr_graph.c	/^static struct s_ivec** alloc_and_load_tracks_to_clb_ipin(int nodes_per_chan,$/;"	f	file:	signature:(int nodes_per_chan, int Fc, int*** clb_ipin_to_tracks)
alloc_and_load_tracks_to_clb_ipin	rr_graph.c	/^static struct s_ivec** alloc_and_load_tracks_to_clb_ipin(int nodes_per_chan,$/;"	p	file:	signature:(int nodes_per_chan, int Fc, int** *clb_ipin_to_tracks)
alloc_and_load_tracks_to_pads	rr_graph.c	/^static struct s_ivec* alloc_and_load_tracks_to_pads(int** pads_to_tracks,$/;"	f	file:	signature:(int** pads_to_tracks, int nodes_per_chan, int Fc_pad)
alloc_and_load_tracks_to_pads	rr_graph.c	/^static struct s_ivec* alloc_and_load_tracks_to_pads(int** pads_to_tracks,$/;"	p	file:	signature:(int** pads_to_tracks, int nodes_per_chan, int Fc_pad)
alloc_and_load_unique_pin_list	place.c	/^static void alloc_and_load_unique_pin_list(void)$/;"	f	file:	signature:(void)
alloc_and_load_unique_pin_list	place.c	/^static void alloc_and_load_unique_pin_list(void);$/;"	p	file:	signature:(void)
alloc_and_load_unsharable_switch_trans	rr_graph_area.c	/^static float* alloc_and_load_unsharable_switch_trans(int num_switch,$/;"	f	file:	signature:(int num_switch, float trans_sram_bit, float R_minW_nmos)
alloc_and_load_unsharable_switch_trans	rr_graph_area.c	/^static float* alloc_and_load_unsharable_switch_trans(int num_switch,$/;"	p	file:	signature:(int num_switch, float trans_sram_bit, float R_minW_nmos)
alloc_block	timing_place_lookup.c	/^static void alloc_block(void)$/;"	f	file:	signature:(void)
alloc_block	timing_place_lookup.c	/^static void alloc_block(void);$/;"	p	file:	signature:(void)
alloc_crit	timing_place.c	/^static float** alloc_crit(struct s_linked_vptr** chunk_list_head_ptr)$/;"	f	file:	signature:(struct s_linked_vptr** chunk_list_head_ptr)
alloc_crit	timing_place.c	/^static float** alloc_crit(struct s_linked_vptr** chunk_list_head_ptr);$/;"	p	file:	signature:(struct s_linked_vptr** chunk_list_head_ptr)
alloc_delta_arrays	timing_place_lookup.c	/^static void alloc_delta_arrays(void)$/;"	f	file:	signature:(void)
alloc_delta_arrays	timing_place_lookup.c	/^static void alloc_delta_arrays(void);$/;"	p	file:	signature:(void)
alloc_draw_structs	../include/draw.h	/^void alloc_draw_structs(void);$/;"	p	signature:(void)
alloc_draw_structs	draw.c	/^void alloc_draw_structs(void)$/;"	f	signature:(void)
alloc_hash_table	../include/hash.h	/^struct s_hash** alloc_hash_table(void);$/;"	p	signature:(void)
alloc_hash_table	hash.c	/^struct s_hash** alloc_hash_table(void) {$/;"	f	signature:(void)
alloc_heap_data	route_common.c	/^static struct s_heap* alloc_heap_data(void) {$/;"	f	file:	signature:(void)
alloc_heap_data	route_common.c	/^static struct s_heap* alloc_heap_data(void);$/;"	p	file:	signature:(void)
alloc_ivector_and_copy_int_list	../include/util.h	/^void alloc_ivector_and_copy_int_list(t_linked_int** list_head_ptr,$/;"	p	signature:(t_linked_int** list_head_ptr, int num_items, struct s_ivec* ivec, t_linked_int ** free_list_head_ptr)
alloc_ivector_and_copy_int_list	util.c	/^void alloc_ivector_and_copy_int_list(t_linked_int** list_head_ptr,$/;"	f	signature:(t_linked_int** list_head_ptr, int num_items, struct s_ivec* ivec, t_linked_int ** free_list_head_ptr)
alloc_linked_f_pointer	route_common.c	/^static struct s_linked_f_pointer* alloc_linked_f_pointer(void) {$/;"	f	file:	signature:(void)
alloc_linked_f_pointer	route_common.c	/^static struct s_linked_f_pointer* alloc_linked_f_pointer(void);$/;"	p	file:	signature:(void)
alloc_linked_rc_edge	net_delay.c	/^static t_linked_rc_edge* alloc_linked_rc_edge(t_linked_rc_edge$/;"	f	file:	signature:(t_linked_rc_edge ** rc_edge_free_list_ptr)
alloc_linked_rc_edge	net_delay.c	/^static t_linked_rc_edge* alloc_linked_rc_edge(t_linked_rc_edge$/;"	p	file:	signature:(t_linked_rc_edge ** rc_edge_free_list_ptr)
alloc_linked_rt_edge	route_tree_timing.c	/^static t_linked_rt_edge* alloc_linked_rt_edge(void)$/;"	f	file:	signature:(void)
alloc_linked_rt_edge	route_tree_timing.c	/^static t_linked_rt_edge* alloc_linked_rt_edge(void);$/;"	p	file:	signature:(void)
alloc_lookups_and_criticalities	../include/timing_place.h	/^void alloc_lookups_and_criticalities(t_chan_width_dist chan_width_dist,$/;"	p	signature:(t_chan_width_dist chan_width_dist, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data subblock_data, float*** net_delay, float*** net_slack)
alloc_lookups_and_criticalities	timing_place.c	/^void alloc_lookups_and_criticalities(t_chan_width_dist chan_width_dist,$/;"	f	signature:(t_chan_width_dist chan_width_dist, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data subblock_data, float*** net_delay, float*** net_slack)
alloc_matrix	../include/util.h	/^void** alloc_matrix(int nrmin, int nrmax, int ncmin, int ncmax,$/;"	p	signature:(int nrmin, int nrmax, int ncmin, int ncmax, size_t elsize)
alloc_matrix	util.c	/^void** alloc_matrix(int nrmin, int nrmax, int ncmin, int ncmax,$/;"	f	signature:(int nrmin, int nrmax, int ncmin, int ncmax, size_t elsize)
alloc_matrix3	../include/util.h	/^void*** alloc_matrix3(int nrmin, int nrmax, int ncmin, int ncmax, int ndmin,$/;"	p	signature:(int nrmin, int nrmax, int ncmin, int ncmax, int ndmin, int ndmax, size_t elsize)
alloc_matrix3	util.c	/^void*** alloc_matrix3(int nrmin, int nrmax, int ncmin, int ncmax,$/;"	f	signature:(int nrmin, int nrmax, int ncmin, int ncmax, int ndmin, int ndmax, size_t elsize)
alloc_net	timing_place_lookup.c	/^static void alloc_net(void)$/;"	f	file:	signature:(void)
alloc_net	timing_place_lookup.c	/^static void alloc_net(void);$/;"	p	file:	signature:(void)
alloc_net_delay	../include/net_delay.h	/^float** alloc_net_delay(struct s_linked_vptr** chunk_list_head_ptr);$/;"	p	signature:(struct s_linked_vptr** chunk_list_head_ptr)
alloc_net_delay	net_delay.c	/^float** alloc_net_delay(struct s_linked_vptr** chunk_list_head_ptr)$/;"	f	signature:(struct s_linked_vptr** chunk_list_head_ptr)
alloc_net_rr_terminals	rr_graph.c	/^static void alloc_net_rr_terminals(void)$/;"	f	file:	signature:(void)
alloc_net_rr_terminals	rr_graph.c	/^static void alloc_net_rr_terminals(void);$/;"	p	file:	signature:(void)
alloc_net_slack	path_delay.c	/^static float** alloc_net_slack(void)$/;"	f	file:	signature:(void)
alloc_net_slack	path_delay.c	/^static float** alloc_net_slack(void);$/;"	p	file:	signature:(void)
alloc_place_regions	place.c	/^static void alloc_place_regions(int num_regions)$/;"	f	file:	signature:(int num_regions)
alloc_place_regions	place.c	/^static void alloc_place_regions(int num_regions);$/;"	p	file:	signature:(int num_regions)
alloc_rc_node	net_delay.c	/^static t_rc_node* alloc_rc_node(t_rc_node** rc_node_free_list_ptr)$/;"	f	file:	signature:(t_rc_node** rc_node_free_list_ptr)
alloc_rc_node	net_delay.c	/^static t_rc_node* alloc_rc_node(t_rc_node** rc_node_free_list_ptr);$/;"	p	file:	signature:(t_rc_node** rc_node_free_list_ptr)
alloc_route_structs	../include/route_export.h	/^t_ivec** alloc_route_structs(t_subblock_data subblock_data);$/;"	p	signature:(t_subblock_data subblock_data)
alloc_route_structs	route_common.c	/^t_ivec** alloc_route_structs(t_subblock_data subblock_data)$/;"	f	signature:(t_subblock_data subblock_data)
alloc_route_tree_timing_structs	../include/route_tree_timing.h	/^void alloc_route_tree_timing_structs(void);$/;"	p	signature:(void)
alloc_route_tree_timing_structs	route_tree_timing.c	/^void alloc_route_tree_timing_structs(void)$/;"	f	signature:(void)
alloc_routing_structs	timing_place_lookup.c	/^static void alloc_routing_structs(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data subblock_data)
alloc_routing_structs	timing_place_lookup.c	/^static void alloc_routing_structs(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data subblock_data)
alloc_rt_node	route_tree_timing.c	/^static t_rt_node* alloc_rt_node(void)$/;"	f	file:	signature:(void)
alloc_rt_node	route_tree_timing.c	/^static t_rt_node* alloc_rt_node(void);$/;"	p	file:	signature:(void)
alloc_saved_routing	../include/route_export.h	/^struct s_trace** alloc_saved_routing(t_ivec** clb_opins_used_locally,$/;"	p	signature:(t_ivec** clb_opins_used_locally, t_ivec** *saved_clb_opins_used_locally_ptr)
alloc_saved_routing	route_common.c	/^struct s_trace** alloc_saved_routing(t_ivec** clb_opins_used_locally,$/;"	f	signature:(t_ivec** clb_opins_used_locally, t_ivec** *saved_clb_opins_used_locally_ptr)
alloc_timing_driven_route_structs	../include/route_timing.h	/^void alloc_timing_driven_route_structs(float** pin_criticality_ptr,$/;"	p	signature:(float** pin_criticality_ptr, int** sink_order_ptr, t_rt_node*** rt_node_of_sink_ptr)
alloc_timing_driven_route_structs	route_timing.c	/^void alloc_timing_driven_route_structs(float** pin_criticality_ptr,$/;"	f	signature:(float** pin_criticality_ptr, int** sink_order_ptr, t_rt_node*** rt_node_of_sink_ptr)
alloc_trace_data	route_common.c	/^static struct s_trace* alloc_trace_data(void) {$/;"	f	file:	signature:(void)
alloc_trace_data	route_common.c	/^static struct s_trace* alloc_trace_data(void);$/;"	p	file:	signature:(void)
allocate_and_load_critical_path	../include/path_delay.h	/^t_linked_int* allocate_and_load_critical_path(void);$/;"	p	signature:(void)
allocate_and_load_critical_path	path_delay.c	/^t_linked_int* allocate_and_load_critical_path(void)$/;"	f	signature:(void)
alpha_t	../include/vpr_types.h	/^    float alpha_t; \/* factor about descrease the temperature. *\/$/;"	m	struct:s_annealing_sched	access:public
angnorm	graphics.c	/^static float angnorm(float ang)$/;"	f	file:	signature:(float ang)
assess_swap	place.c	/^static int assess_swap(float delta_c, float t)$/;"	f	file:	signature:(float delta_c, float t)
assess_swap	place.c	/^static int assess_swap(float delta_c, float t);$/;"	p	file:	signature:(float delta_c, float t)
assign_blocks_and_route_net	timing_place_lookup.c	/^static float assign_blocks_and_route_net(enum e_block_types source_type,$/;"	f	file:	signature:(enum e_block_types source_type, int source_x_loc, int source_y_loc, enum e_block_types sink_type, int sink_x_loc, int sink_y_loc, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
assign_blocks_and_route_net	timing_place_lookup.c	/^static float assign_blocks_and_route_net(enum e_block_types source_type,$/;"	p	file:	signature:(enum e_block_types source_type, int source_x_loc, int source_y_loc, enum e_block_types sink_type, int sink_x_loc, int sink_y_loc, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
assign_locations	timing_place_lookup.c	/^static void assign_locations(enum e_block_types source_type,$/;"	f	file:	signature:(enum e_block_types source_type, int source_x_loc, int source_y_loc, enum e_block_types sink_type, int sink_x_loc, int sink_y_loc)
assign_locations	timing_place_lookup.c	/^static void assign_locations(enum e_block_types source_type,$/;"	p	file:	signature:(enum e_block_types source_type, int source_x_loc, int source_y_loc, enum e_block_types sink_type, int sink_x_loc, int sink_y_loc)
astar_fac	../include/vpr_types.h	/^    float astar_fac;$/;"	m	struct:s_router_opts	access:public
backward_path_cost	../include/route_common.h	/^    float backward_path_cost;$/;"	m	struct:__anon9	access:public
backward_path_cost	../include/route_common.h	/^    float backward_path_cost;$/;"	m	struct:s_heap	access:public
base_cost	../include/vpr_types.h	/^    float base_cost;$/;"	m	struct:__anon23	access:public
base_cost_type	../include/vpr_types.h	/^    enum e_base_cost_type base_cost_type;$/;"	m	struct:s_router_opts	typeref:enum:s_router_opts::e_base_cost_type	access:public
bb_coords	place.c	/^static struct s_bb* bb_coords = NULL;$/;"	v	typeref:struct:s_bb	file:
bb_factor	../include/vpr_types.h	/^    int bb_factor;$/;"	m	struct:s_router_opts	access:public
bb_num_on_edges	place.c	/^static struct s_bb* bb_num_on_edges = NULL;$/;"	v	typeref:struct:s_bb	file:
bend_cost	../include/vpr_types.h	/^    float bend_cost;$/;"	m	struct:s_router_opts	access:public
binary_search_place_and_route	place_and_route.c	/^static int binary_search_place_and_route(struct s_placer_opts placer_opts,$/;"	f	file:	signature:(struct s_placer_opts placer_opts, char* place_file, char* net_file, char* arch_file, char* route_file, boolean full_stats, boolean verify_binary_search, struct s_annealing_sched annealing_sched, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data *subblock_data_ptr, t_chan_width_dist chan_width_dist)
binary_search_place_and_route	place_and_route.c	/^static int binary_search_place_and_route(struct s_placer_opts$/;"	p	file:	signature:(struct s_placer_opts placer_opts, char* place_file, char* net_file, char* arch_file, char* route_file, boolean full_stats, boolean verify_binary_search, struct s_annealing_sched annealing_sched, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data *subblock_data_ptr, t_chan_width_dist chan_width_dist)
blk_pin	../include/vpr_types.h	/^    int* blk_pin;$/;"	m	struct:s_net	access:public
block	../include/vpr_types.h	/^        int block;$/;"	m	union:s_clb::__anon12	access:public
block	main.c	/^struct s_block* block;$/;"	v	typeref:struct:s_block
block_color	draw.c	/^static enum color_types* net_color, *block_color;$/;"	v	typeref:enum:	file:
block_dist	../include/vpr_types.h	/^    int   block_dist;$/;"	m	struct:s_placer_opts	access:public
blocks	../include/vpr_types.h	/^    int* blocks;$/;"	m	struct:s_net	access:public
boolean	../include/util.h	/^typedef enum {FALSE, TRUE} boolean;$/;"	t	typeref:enum:__anon11
boolean	../include/util.h	/^typedef int boolean;$/;"	t
breadth_first_add_source_to_heap	route_breadth_first.c	/^static void breadth_first_add_source_to_heap(int inet)$/;"	f	file:	signature:(int inet)
breadth_first_add_source_to_heap	route_breadth_first.c	/^static void breadth_first_add_source_to_heap(int inet);$/;"	p	file:	signature:(int inet)
breadth_first_expand_neighbours	route_breadth_first.c	/^static void breadth_first_expand_neighbours(int inode, float pcost, int inet,$/;"	f	file:	signature:(int inode, float pcost, int inet, float bend_cost)
breadth_first_expand_neighbours	route_breadth_first.c	/^static void breadth_first_expand_neighbours(int inode, float pcost, int inet,$/;"	p	file:	signature:(int inode, float pcost, int inet, float bend_cost)
breadth_first_expand_trace_segment	route_breadth_first.c	/^static void breadth_first_expand_trace_segment(struct s_trace* start_ptr,$/;"	f	file:	signature:(struct s_trace* start_ptr, int remaining_connections_to_sink)
breadth_first_expand_trace_segment	route_breadth_first.c	/^static void breadth_first_expand_trace_segment(struct s_trace* start_ptr,$/;"	p	file:	signature:(struct s_trace* start_ptr, int remaining_connections_to_sink)
breadth_first_route_net	route_breadth_first.c	/^static boolean breadth_first_route_net(int inet, float bend_cost)$/;"	f	file:	signature:(int inet, float bend_cost)
breadth_first_route_net	route_breadth_first.c	/^static boolean breadth_first_route_net(int inet, float bend_cost);$/;"	p	file:	signature:(int inet, float bend_cost)
buffered	../include/vpr_types.h	/^    boolean buffered; \/* buffer or tri-state transistor *\/$/;"	m	struct:s_switch_inf	access:public
build_block_output_tnode	path_delay.c	/^static void build_block_output_tnode(int inode, int iblk, int ipin,$/;"	f	file:	signature:(int inode, int iblk, int ipin, int** block_pin_to_tnode)
build_block_output_tnode	path_delay.c	/^static void build_block_output_tnode(int inode, int iblk, int ipin,$/;"	p	file:	signature:(int inode, int iblk, int ipin, int** block_pin_to_tnode)
build_clb_tnodes	path_delay.c	/^static void build_clb_tnodes(int iblk, int* n_uses_of_clb_ipin, int$/;"	p	file:	signature:(int iblk, int* n_uses_of_clb_ipin, int ** block_pin_to_tnode, int** sub_pin_to_tnode, int subblock_lut_size, int num_subs, t_subblock* sub_inf, float T_clb_ipin_to_sblk_ipin, int* next_clb_ipin_edge)
build_clb_tnodes	path_delay.c	/^static void build_clb_tnodes(int iblk, int* n_uses_of_clb_ipin,$/;"	f	file:	signature:(int iblk, int* n_uses_of_clb_ipin, int** block_pin_to_tnode, int** sub_pin_to_tnode, int subblock_lut_size, int num_subs, t_subblock* sub_inf, float T_clb_ipin_to_sblk_ipin, int* next_clb_ipin_edge)
build_default_menu	graphics.c	/^static void build_default_menu(void)$/;"	f	file:	signature:(void)
build_ipad_tnodes	path_delay.c	/^static void build_ipad_tnodes(int iblk, int** block_pin_to_tnode, float$/;"	f	file:	signature:(int iblk, int** block_pin_to_tnode, float T_ipad, int* num_subblocks_per_block, t_subblock** subblock_inf)
build_ipad_tnodes	path_delay.c	/^static void build_ipad_tnodes(int iblk, int** block_pin_to_tnode, float$/;"	p	file:	signature:(int iblk, int** block_pin_to_tnode, float T_ipad, int* num_subblocks_per_block, t_subblock ** subblock_inf)
build_opad_tnodes	path_delay.c	/^static void build_opad_tnodes(int* blk_pin_to_tnode, float T_opad, int iblk)$/;"	f	file:	signature:(int* blk_pin_to_tnode, float T_opad, int iblk)
build_opad_tnodes	path_delay.c	/^static void build_opad_tnodes(int* blk_pin_to_tnode, float T_opad, int iblk);$/;"	p	file:	signature:(int* blk_pin_to_tnode, float T_opad, int iblk)
build_rr_clb	rr_graph.c	/^static void build_rr_clb(int** rr_node_indices, int Fc_output, int** *$/;"	f	file:	signature:(int** rr_node_indices, int Fc_output, int** * clb_opin_to_tracks, int nodes_per_chan, int i, int j, int delayless_switch, t_seg_details* seg_details_x, t_seg_details *seg_details_y)
build_rr_clb	rr_graph.c	/^static void build_rr_clb(int** rr_node_indices, int Fc_output, int** *$/;"	p	file:	signature:(int** rr_node_indices, int Fc_output, int** * clb_opin_to_tracks, int nodes_per_chan, int i, int j, int delayless_switch, t_seg_details* seg_details_x, t_seg_details* seg_details_y)
build_rr_graph	../include/rr_graph.h	/^void build_rr_graph(enum e_route_type route_type,$/;"	p	signature:(enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, enum e_base_cost_type base_cost_type)
build_rr_graph	rr_graph.c	/^void build_rr_graph(enum e_route_type route_type,$/;"	f	signature:(enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, enum e_base_cost_type base_cost_type)
build_rr_pads	rr_graph.c	/^static void build_rr_pads(int** rr_node_indices, int Fc_pad, int$/;"	f	file:	signature:(int** rr_node_indices, int Fc_pad, int ** pads_to_tracks, int nodes_per_chan, int i, int j, int delayless_switch, t_seg_details* seg_details_x, t_seg_details *seg_details_y)
build_rr_pads	rr_graph.c	/^static void build_rr_pads(int** rr_node_indices, int Fc_pad, int$/;"	p	file:	signature:(int** rr_node_indices, int Fc_pad, int ** pads_to_tracks, int nodes_per_chan, int i, int j, int delayless_switch, t_seg_details* seg_details_x, t_seg_details *seg_details_y)
build_rr_xchan	rr_graph.c	/^static void build_rr_xchan(int** rr_node_indices, enum e_route_type$/;"	f	file:	signature:(int** rr_node_indices, enum e_route_type route_type, struct s_ivec** tracks_to_clb_ipin, struct s_ivec * tracks_to_pads, int i, int j, int nodes_per_chan, enum e_switch_block_type switch_block_type, int wire_to_ipin_switch, t_seg_details* seg_details_x, t_seg_details* seg_details_y, int cost_index_offset)
build_rr_xchan	rr_graph.c	/^static void build_rr_xchan(int** rr_node_indices, enum e_route_type$/;"	p	file:	signature:(int** rr_node_indices, enum e_route_type route_type, struct s_ivec** tracks_to_clb_ipin, struct s_ivec * tracks_to_pads, int i, int j, int nodes_per_chan, enum e_switch_block_type switch_block_type, int wire_to_ipin_switch, t_seg_details* seg_details_x, t_seg_details* seg_details_y, int cost_index_offset)
build_rr_ychan	rr_graph.c	/^static void build_rr_ychan(int** rr_node_indices, enum e_route_type$/;"	f	file:	signature:(int** rr_node_indices, enum e_route_type route_type, struct s_ivec** tracks_to_clb_ipin, struct s_ivec * tracks_to_pads, int i, int j, int nodes_per_chan, enum e_switch_block_type switch_block_type, int wire_to_ipin_switch, t_seg_details* seg_details_x, t_seg_details* seg_details_y, int cost_index_offset)
build_rr_ychan	rr_graph.c	/^static void build_rr_ychan(int** rr_node_indices, enum e_route_type$/;"	p	file:	signature:(int** rr_node_indices, enum e_route_type route_type, struct s_ivec** tracks_to_clb_ipin, struct s_ivec * tracks_to_pads, int i, int j, int nodes_per_chan, enum e_switch_block_type switch_block_type, int wire_to_ipin_switch, t_seg_details* seg_details_x, t_seg_details* seg_details_y, int cost_index_offset)
build_subblock_tnodes	path_delay.c	/^static void build_subblock_tnodes(int* n_uses_of_sblk_opin,$/;"	f	file:	signature:(int* n_uses_of_sblk_opin, int* blk_pin_to_tnode, int** sub_pin_to_tnode, int subblock_lut_size, int num_subs, t_subblock* sub_inf, float T_sblk_opin_to_sblk_ipin, float T_sblk_opin_to_clb_opin, t_T_subblock* T_subblock, int* next_sblk_opin_edge, int iblk)
build_subblock_tnodes	path_delay.c	/^static void build_subblock_tnodes(int* n_uses_of_sblk_opin,$/;"	p	file:	signature:(int* n_uses_of_sblk_opin, int* blk_pin_to_tnode, int** sub_pin_to_tnode, int subblock_lut_size, int num_subs, t_subblock* sub_inf, float T_sblk_opin_to_sblk_ipin, float T_sblk_opin_to_clb_opin, t_T_subblock* T_subblock, int* next_sblk_opin_edge, int iblk)
build_textarea	graphics.c	/^static void build_textarea(void)$/;"	f	file:	signature:(void)
button	graphics.c	/^static t_button* button;                 \/* [0..num_buttons-1] *\/$/;"	v	file:
capacity	../include/vpr_types.h	/^    float capacity;$/;"	m	struct:s_place_region	access:public
capacity	../include/vpr_types.h	/^    short capacity;$/;"	m	struct:__anon22	access:public
cb	../include/vpr_types.h	/^    boolean* cb;$/;"	m	struct:__anon18	access:public
ch_subblock_bytes_avail	read_netlist.c	/^static int ch_subblock_bytes_avail;$/;"	v	file:
ch_subblock_head_ptr	read_netlist.c	/^static struct s_linked_vptr* ch_subblock_head_ptr;$/;"	v	typeref:struct:s_linked_vptr	file:
ch_subblock_next_avail_mem	read_netlist.c	/^static char* ch_subblock_next_avail_mem;$/;"	v	file:
chan_width_io	../include/vpr_types.h	/^    float chan_width_io;$/;"	m	struct:__anon14	access:public
chan_width_x	main.c	/^int* chan_width_x, *chan_width_y;   \/* [0..ny] and [0..nx] respectively  *\/$/;"	v
chan_width_y	main.c	/^int* chan_width_x, *chan_width_y;   \/* [0..ny] and [0..nx] respectively  *\/$/;"	v
chan_x_dist	../include/vpr_types.h	/^    t_chan chan_x_dist;$/;"	m	struct:__anon14	access:public
chan_y_dist	../include/vpr_types.h	/^    t_chan chan_y_dist;$/;"	m	struct:__anon14	access:public
chanx_chany_adjacent	check_route.c	/^static int chanx_chany_adjacent(int chanx_node, int chany_node)$/;"	f	file:	signature:(int chanx_node, int chany_node)
chanx_chany_adjacent	check_route.c	/^static int chanx_chany_adjacent(int chanx_node, int chany_node);$/;"	p	file:	signature:(int chanx_node, int chany_node)
chanx_place_cost_fac	place.c	/^static float** chanx_place_cost_fac = NULL;$/;"	v	file:
chanx_rr_indices	rr_graph2.c	/^static int*** chanx_rr_indices; \/* [1..nx][0..ny][0..nodes_per_chan-1] *\/$/;"	v	file:
chany_place_cost_fac	place.c	/^static float** chany_place_cost_fac = NULL;$/;"	v	file:
chany_rr_indices	rr_graph2.c	/^static int*** chany_rr_indices; \/* [0..nx][1..ny][0..nodes_per_chan-1] *\/$/;"	v	file:
check_adjacent	check_route.c	/^static boolean check_adjacent(int from_node, int to_node)$/;"	f	file:	signature:(int from_node, int to_node)
check_adjacent	check_route.c	/^static boolean check_adjacent(int from_node, int to_node);$/;"	p	file:	signature:(int from_node, int to_node)
check_all_tracks_reach_pins	rr_graph.c	/^static void check_all_tracks_reach_pins(int** *tracks_connected_to_pin,$/;"	f	file:	signature:(int** *tracks_connected_to_pin, int nodes_per_chan, int Fc, enum e_pin_type ipin_or_opin)
check_all_tracks_reach_pins	rr_graph.c	/^static void check_all_tracks_reach_pins(int** *tracks_connected_to_pin,$/;"	p	file:	signature:(int** *tracks_connected_to_pin, int nodes_per_chan, int Fc, enum e_pin_type ipin_or_opin)
check_arch	read_arch.c	/^static void check_arch(char* arch_file, enum e_route_type route_type,$/;"	f	file:	signature:(char* arch_file, enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, int max_subblocks_per_block, t_chan_width_dist chan_width_dist)
check_arch	read_arch.c	/^static void check_arch(char* arch_file, enum e_route_type route_type,$/;"	p	file:	signature:(char* arch_file, enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf *segment_inf, t_timing_inf timing_inf, int max_subblocks_per_block, t_chan_width_dist chan_width_dist)
check_clb_conn	check_netlist.c	/^static int check_clb_conn(int iblk, int num_conn)$/;"	f	file:	signature:(int iblk, int num_conn)
check_clb_conn	check_netlist.c	/^static int check_clb_conn(int iblk, int num_conn);$/;"	p	file:	signature:(int iblk, int num_conn)
check_clb_to_subblock_connections	check_netlist.c	/^static int check_clb_to_subblock_connections(int iblk, t_subblock$/;"	f	file:	signature:(int iblk, t_subblock *subblock_inf, int num_subblocks, int* num_uses_of_clb_pin)
check_clb_to_subblock_connections	check_netlist.c	/^static int check_clb_to_subblock_connections(int iblk, t_subblock$/;"	p	file:	signature:(int iblk, t_subblock *subblock_inf, int num_subblocks, int* num_uses_of_clb_pin)
check_connections_to_global_clb_pins	check_netlist.c	/^static int check_connections_to_global_clb_pins(int inet)$/;"	f	file:	signature:(int inet)
check_connections_to_global_clb_pins	check_netlist.c	/^static int check_connections_to_global_clb_pins(int inet);$/;"	p	file:	signature:(int inet)
check_for_duplicate_block_names	check_netlist.c	/^static int check_for_duplicate_block_names(void)$/;"	f	file:	signature:(void)
check_for_duplicate_block_names	check_netlist.c	/^static int check_for_duplicate_block_names(void);$/;"	p	file:	signature:(void)
check_for_multiple_sink_connections	check_netlist.c	/^static void check_for_multiple_sink_connections(void)$/;"	f	file:	signature:(void)
check_for_multiple_sink_connections	check_netlist.c	/^static void check_for_multiple_sink_connections(void);$/;"	p	file:	signature:(void)
check_internal_subblock_connections	check_netlist.c	/^static int check_internal_subblock_connections(t_subblock_data$/;"	f	file:	signature:(t_subblock_data *subblock_data_ptr, int iblk, int* num_uses_of_sblk_opin)
check_internal_subblock_connections	check_netlist.c	/^static int check_internal_subblock_connections(t_subblock_data$/;"	p	file:	signature:(t_subblock_data *subblock_data_ptr, int iblk, int* num_uses_of_sblk_opin)
check_keyword	read_arch.c	/^static void check_keyword(FILE* fp, char* buf, const char* keyword)$/;"	f	file:	signature:(FILE* fp, char* buf, const char* keyword)
check_keyword	read_arch.c	/^static void check_keyword(FILE* fp, char* buf, const char* keyword);$/;"	p	file:	signature:(FILE* fp, char* buf, const char* keyword)
check_locally_used_clb_opins	check_route.c	/^static void check_locally_used_clb_opins(t_ivec** clb_opins_used_locally,$/;"	f	file:	signature:(t_ivec** clb_opins_used_locally, enum e_route_type route_type)
check_locally_used_clb_opins	check_route.c	/^static void check_locally_used_clb_opins(t_ivec** clb_opins_used_locally,$/;"	p	file:	signature:(t_ivec** clb_opins_used_locally, enum e_route_type route_type)
check_netlist	../include/check_netlist.h	/^void check_netlist(t_subblock_data* subblock_data_ptr, int* num_driver);$/;"	p	signature:(t_subblock_data* subblock_data_ptr, int* num_driver)
check_netlist	check_netlist.c	/^void check_netlist(t_subblock_data* subblock_data_ptr, int* num_driver)$/;"	f	signature:(t_subblock_data* subblock_data_ptr, int* num_driver)
check_node	../include/check_rr_graph.h	/^void check_node(int inode, enum e_route_type route_type);$/;"	p	signature:(int inode, enum e_route_type route_type)
check_node	check_rr_graph.c	/^void check_node(int inode, enum e_route_type route_type)$/;"	f	signature:(int inode, enum e_route_type route_type)
check_node_and_range	check_route.c	/^static void check_node_and_range(int inode, enum e_route_type route_type)$/;"	f	file:	signature:(int inode, enum e_route_type route_type)
check_node_and_range	check_route.c	/^static void check_node_and_range(int inode, enum e_route_type route_type);$/;"	p	file:	signature:(int inode, enum e_route_type route_type)
check_pass_transistors	check_rr_graph.c	/^static void check_pass_transistors(int from_node)$/;"	f	file:	signature:(int from_node)
check_pass_transistors	check_rr_graph.c	/^static void check_pass_transistors(int from_node);$/;"	p	file:	signature:(int from_node)
check_place	place.c	/^static void check_place(float bb_cost, float timing_cost, int place_cost_type,$/;"	f	file:	signature:(float bb_cost, float timing_cost, int place_cost_type, int num_regions, enum e_place_algorithm place_algorithm, float delay_cost)
check_place	place.c	/^static void check_place(float bb_cost, float timing_cost, int place_cost_type,$/;"	p	file:	signature:(float bb_cost, float timing_cost, int place_cost_type, int num_regions, enum e_place_algorithm place_algorithm, float delay_cost)
check_route	../include/check_route.h	/^void check_route(enum e_route_type route_type, int num_switch,$/;"	p	signature:(enum e_route_type route_type, int num_switch, t_ivec** clb_opins_used_locally)
check_route	check_route.c	/^void check_route(enum e_route_type route_type, int num_switch,$/;"	f	signature:(enum e_route_type route_type, int num_switch, t_ivec** clb_opins_used_locally)
check_rr_graph	../include/check_rr_graph.h	/^void check_rr_graph(enum e_route_type route_type, int num_switch);$/;"	p	signature:(enum e_route_type route_type, int num_switch)
check_rr_graph	check_rr_graph.c	/^void check_rr_graph(enum e_route_type route_type, int num_switch)$/;"	f	signature:(enum e_route_type route_type, int num_switch)
check_sink	check_route.c	/^static void check_sink(int inode, int inet, boolean* pin_done)$/;"	f	file:	signature:(int inode, int inet, boolean* pin_done)
check_sink	check_route.c	/^static void check_sink(int inode, int inet, boolean* pin_done);$/;"	p	file:	signature:(int inode, int inet, boolean* pin_done)
check_source	check_route.c	/^static void check_source(int inode, int inet)$/;"	f	file:	signature:(int inode, int inet)
check_source	check_route.c	/^static void check_source(int inode, int inet);$/;"	p	file:	signature:(int inode, int inet)
check_subblock_pin	check_netlist.c	/^static int check_subblock_pin(int clb_pin, int min_val, int max_val,$/;"	f	file:	signature:(int clb_pin, int min_val, int max_val, enum e_pin_type pin_type, int iblk, int isubblk, t_subblock *subblock_inf)
check_subblock_pin	check_netlist.c	/^static int check_subblock_pin(int clb_pin, int min_val, int max_val,$/;"	p	file:	signature:(int clb_pin, int min_val, int max_val, enum e_pin_type pin_type, int iblk, int isubblk, t_subblock *subblock_inf)
check_subblocks	check_netlist.c	/^static int check_subblocks(int iblk, t_subblock_data* subblock_data_ptr,$/;"	f	file:	signature:(int iblk, t_subblock_data* subblock_data_ptr, int* num_uses_of_clb_pin, int* num_uses_of_sblk_opin)
check_subblocks	check_netlist.c	/^static int check_subblocks(int iblk, t_subblock_data* subblock_data_ptr,$/;"	p	file:	signature:(int iblk, t_subblock_data* subblock_data_ptr, int* num_uses_of_clb_pin, int* num_uses_of_sblk_opin)
check_switch	check_route.c	/^static void check_switch(struct s_trace* tptr, int num_switch)$/;"	f	file:	signature:(struct s_trace* tptr, int num_switch)
check_switch	check_route.c	/^static void check_switch(struct s_trace* tptr, int num_switch);$/;"	p	file:	signature:(struct s_trace* tptr, int num_switch)
check_timing_graph	../include/path_delay2.h	/^void check_timing_graph(int num_const_gen, int num_ff, int num_sinks);$/;"	p	signature:(int num_const_gen, int num_ff, int num_sinks)
check_timing_graph	path_delay2.c	/^void check_timing_graph(int num_const_gen, int num_ff, int num_sinks)$/;"	f	signature:(int num_const_gen, int num_ff, int num_sinks)
child	../include/route_tree_timing.h	/^    struct s_rt_node* child;$/;"	m	struct:s_linked_rt_edge	typeref:struct:s_linked_rt_edge::s_rt_node	access:public
child	net_delay.c	/^    struct s_rc_node* child;$/;"	m	struct:s_linked_rc_edge	typeref:struct:s_linked_rc_edge::s_rc_node	file:	access:public
child_list	../include/route_tree_timing.h	/^        t_linked_rt_edge* child_list;$/;"	m	union:s_rt_node::__anon10	access:public
child_list	net_delay.c	/^        t_linked_rc_edge* child_list;$/;"	m	union:s_rc_node::__anon2	file:	access:public
chunk_bytes_avail	read_netlist.c	/^static int chunk_bytes_avail = 0;$/;"	v	file:
chunk_bytes_avail	rr_graph.c	/^static int chunk_bytes_avail = 0;$/;"	v	file:
chunk_head_ptr	../include/vpr_types.h	/^    struct s_linked_vptr* chunk_head_ptr;$/;"	m	struct:__anon16	typeref:struct:__anon16::s_linked_vptr	access:public
chunk_next_avail_mem	read_netlist.c	/^static char* chunk_next_avail_mem = NULL;$/;"	v	file:
chunk_next_avail_mem	rr_graph.c	/^static char* chunk_next_avail_mem = NULL;$/;"	v	file:
class_inf	main.c	/^struct s_class* class_inf;   \/* class_inf[0..num_class-1].  Provides   *$/;"	v	typeref:struct:s_class
clb	main.c	/^struct s_clb** clb;   \/* Physical block list *\/$/;"	v	typeref:struct:s_clb
clb_ipin_to_tracks	rr_graph.c	/^    int*** clb_ipin_to_tracks;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
clb_opin_to_tracks	rr_graph.c	/^    int*** clb_opin_to_tracks;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
clb_opins_used_locally	timing_place_lookup.c	/^t_ivec** clb_opins_used_locally;$/;"	v
clb_pin_class	main.c	/^int* clb_pin_class;  \/* clb_pin_class[0..pins_per_clb-1].  Gives the class  *$/;"	v
clb_width	draw.c	/^static float clb_width, pin_size;$/;"	v	file:
clearscreen	../include/graphics.h	/^void clearscreen(void);                  \/* Erases the screen *\/$/;"	p	signature:(void)
clearscreen	graphics.c	/^void clearscreen(void) { }$/;"	f	signature:(void)
clearscreen	graphics.c	/^void clearscreen(void)$/;"	f	signature:(void)
clock	../include/vpr_types.h	/^    int clock;$/;"	m	struct:__anon15	access:public
close_graphics	../include/graphics.h	/^void close_graphics(void);               \/* Closes X display      *\/$/;"	p	signature:(void)
close_graphics	graphics.c	/^void close_graphics(void) { }$/;"	f	signature:(void)
close_graphics	graphics.c	/^void close_graphics(void)$/;"	f	signature:(void)
close_postscript	../include/graphics.h	/^void close_postscript(void);$/;"	p	signature:(void)
close_postscript	graphics.c	/^void close_postscript(void) { }$/;"	f	signature:(void)
close_postscript	graphics.c	/^void close_postscript(void)$/;"	f	signature:(void)
color_types	../include/graphics.h	/^enum color_types {$/;"	g
colors	graphics.c	/^static int colors[NUM_COLOR];$/;"	v	file:
comp_bb_cost	place.c	/^static float comp_bb_cost(int method, int place_cost_type, int num_regions)$/;"	f	file:	signature:(int method, int place_cost_type, int num_regions)
comp_bb_cost	place.c	/^static float comp_bb_cost(int method, int place_cost_type, int num_regions);$/;"	p	file:	signature:(int method, int place_cost_type, int num_regions)
comp_delta_td_cost	place.c	/^static void comp_delta_td_cost(int b_from, int b_to, int num_of_pins,$/;"	p	file:	signature:(int b_from, int b_to, int num_of_pins, float* delta_timing, float* delta_delay)
comp_delta_td_cost	place.c	/^static void comp_delta_td_cost(int b_from, int b_to,$/;"	f	file:	signature:(int b_from, int b_to, int num_of_pins, float* delta_timing, float* delta_delay)
comp_td_costs	place.c	/^static void comp_td_costs(float* timing_cost, float* connection_delay_sum)$/;"	f	file:	signature:(float* timing_cost, float* connection_delay_sum)
comp_td_costs	place.c	/^static void comp_td_costs(float* timing_cost, float* connection_delay_sum);$/;"	p	file:	signature:(float* timing_cost, float* connection_delay_sum)
comp_td_point_to_point_delay	place.c	/^static float comp_td_point_to_point_delay(int inet, int ipin)$/;"	f	file:	signature:(int inet, int ipin)
comp_td_point_to_point_delay	place.c	/^static float comp_td_point_to_point_delay(int inet, int ipin);$/;"	p	file:	signature:(int inet, int ipin)
comp_width	place_and_route.c	/^static float comp_width(t_chan* chan, float x, float separation)$/;"	f	file:	signature:(t_chan* chan, float x, float separation)
comp_width	place_and_route.c	/^static float comp_width(t_chan* chan, float x, float separation);$/;"	p	file:	signature:(t_chan* chan, float x, float separation)
compute_delay_lookup_tables	../include/timing_place_lookup.h	/^void compute_delay_lookup_tables(struct s_router_opts router_opts,$/;"	p	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_chan_width_dist chan_width_dist, t_subblock_data subblock_data)
compute_delay_lookup_tables	timing_place_lookup.c	/^void compute_delay_lookup_tables(struct s_router_opts router_opts,$/;"	f	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_chan_width_dist chan_width_dist, t_subblock_data subblock_data)
compute_delta_arrays	timing_place_lookup.c	/^static void compute_delta_arrays(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, int longest_length)
compute_delta_arrays	timing_place_lookup.c	/^static void compute_delta_arrays(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, int longest_length)
compute_delta_clb_to_clb	timing_place_lookup.c	/^static void compute_delta_clb_to_clb(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, int longest_length)
compute_delta_clb_to_clb	timing_place_lookup.c	/^static void compute_delta_clb_to_clb(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, int longest_length)
compute_delta_clb_to_outpad	timing_place_lookup.c	/^static void compute_delta_clb_to_outpad(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
compute_delta_clb_to_outpad	timing_place_lookup.c	/^static void compute_delta_clb_to_outpad(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
compute_delta_inpad_to_clb	timing_place_lookup.c	/^static void compute_delta_inpad_to_clb(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
compute_delta_inpad_to_clb	timing_place_lookup.c	/^static void compute_delta_inpad_to_clb(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
compute_delta_inpad_to_outpad	timing_place_lookup.c	/^static void compute_delta_inpad_to_outpad(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
compute_delta_inpad_to_outpad	timing_place_lookup.c	/^static void compute_delta_inpad_to_outpad(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
compute_net_pin_index_values	place.c	/^static void compute_net_pin_index_values()$/;"	f	file:
compute_net_pin_index_values	place.c	/^static void compute_net_pin_index_values(void);$/;"	p	file:	signature:(void)
compute_net_slacks	path_delay.c	/^static void compute_net_slacks(float** net_slack)$/;"	f	file:	signature:(float** net_slack)
compute_net_slacks	path_delay.c	/^static void compute_net_slacks(float** net_slack);$/;"	p	file:	signature:(float** net_slack)
cont	util.c	/^static int cont;  \/* line continued? *\/$/;"	v	file:
cost	../include/route_common.h	/^    float cost;$/;"	m	struct:s_heap	access:public
cost	../include/vpr_types.h	/^    float cost;$/;"	m	struct:s_place_region	access:public
cost_index	../include/vpr_types.h	/^    short cost_index;$/;"	m	struct:__anon22	access:public
cost_methods	place.c	/^enum cost_methods {NORMAL, CHECK};$/;"	g	file:
count	../include/hash.h	/^    int count;$/;"	m	struct:s_hash	access:public
count_connections	place.c	/^int count_connections()$/;"	f
count_connections	place.c	/^int count_connections(void);$/;"	p	file:	signature:(void)
count_routing_transistors	../include/rr_graph_area.h	/^void count_routing_transistors(int num_switch, float R_minW_nmos,$/;"	p	signature:(int num_switch, float R_minW_nmos, float R_minW_pmos)
count_routing_transistors	rr_graph_area.c	/^void count_routing_transistors(int num_switch, float R_minW_nmos,$/;"	f	signature:(int num_switch, float R_minW_nmos, float R_minW_pmos)
countpass	read_arch.c	/^static void countpass(FILE* fp_arch, enum e_route_type route_type,$/;"	f	file:	signature:(FILE* fp_arch, enum e_route_type route_type, t_segment_inf** segment_inf_ptr, struct s_det_routing_arch *det_routing_arch_ptr, t_timing_inf* timing_inf_ptr)
countpass	read_arch.c	/^static void countpass(FILE* fp_arch, enum e_route_type route_type,$/;"	p	file:	signature:(FILE* fp_arch, enum e_route_type route_type, t_segment_inf** segment_inf_ptr, struct s_det_routing_arch* det_routing_arch_ptr, t_timing_inf *timing_inf)
create_button	../include/graphics.h	/^void create_button(char* prev_button_text , char* button_text,$/;"	p	signature:(char* prev_button_text , char* button_text, void (*button_func)(void (*drawscreen)(void)))
create_button	graphics.c	/^void create_button(char* prev_button_text , char* button_text,$/;"	f	signature:(char* prev_button_text , char* button_text, void (*button_func)(void (*drawscreen)(void)))
criticality_exp	../include/vpr_types.h	/^    float criticality_exp;$/;"	m	struct:s_router_opts	access:public
cross_count	place.c	/^static const float cross_count[50] = {   \/* [0..49] *\/$/;"	v	file:
current_random	util.c	/^static unsigned int current_random = 0;$/;"	v	file:
currentcolor	graphics.c	/^static int currentcolor = BLACK;$/;"	v	file:
currentfontsize	graphics.c	/^static int currentfontsize = 10;$/;"	v	file:
currentlinestyle	graphics.c	/^static int currentlinestyle = SOLID;$/;"	v	file:
currentlinewidth	graphics.c	/^static int currentlinewidth = 0;$/;"	v	file:
data	../include/util.h	/^    int data;$/;"	m	struct:s_linked_int	access:public
data_vptr	../include/util.h	/^    void* data_vptr;$/;"	m	struct:s_linked_vptr	access:public
dc	../include/vpr_types.h	/^    float dc;$/;"	m	struct:__anon13	access:public
default_message	draw.c	/^static char default_message[BUFSIZE];  \/* Default screen message on screen *\/$/;"	v	file:
delayless_switch	../include/vpr_types.h	/^    short delayless_switch;$/;"	m	struct:s_det_routing_arch	access:public
delta_clb_to_clb	timing_place_lookup.c	/^float** delta_clb_to_clb;$/;"	v
delta_clb_to_outpad	timing_place_lookup.c	/^float** delta_clb_to_outpad;$/;"	v
delta_inpad_to_clb	timing_place_lookup.c	/^float** delta_inpad_to_clb;$/;"	v
delta_inpad_to_outpad	timing_place_lookup.c	/^float** delta_inpad_to_outpad;$/;"	v
deselect_all	draw.c	/^static void deselect_all(void)$/;"	f	file:	signature:(void)
deselect_all	draw.c	/^static void deselect_all(void);$/;"	p	file:	signature:(void)
destroy_button	../include/graphics.h	/^void destroy_button(char* button_text);$/;"	p	signature:(char* button_text)
destroy_button	graphics.c	/^void destroy_button(char* button_text) { }$/;"	f	signature:(char* button_text)
destroy_button	graphics.c	/^void destroy_button(char* button_text)$/;"	f	signature:(char* button_text)
disp_type	graphics.c	/^static int disp_type;    \/* Selects SCREEN or POSTSCRIPT *\/$/;"	v	file:
display	graphics.c	/^static Display* display;$/;"	v	file:
display_height	graphics.c	/^static unsigned int display_width, display_height;  \/* screen size *\/$/;"	v	file:
display_width	graphics.c	/^static unsigned int display_width, display_height;  \/* screen size *\/$/;"	v	file:
do_constant_net_delay_timing_analysis	../include/path_delay.h	/^void do_constant_net_delay_timing_analysis(t_timing_inf timing_inf,$/;"	p	signature:(t_timing_inf timing_inf, t_subblock_data subblock_data, float constant_net_delay_value)
do_constant_net_delay_timing_analysis	path_delay.c	/^void do_constant_net_delay_timing_analysis(t_timing_inf timing_inf,$/;"	f	signature:(t_timing_inf timing_inf, t_subblock_data subblock_data, float constant_net_delay_value)
draw_chanx_to_chanx_edge	draw.c	/^static void draw_chanx_to_chanx_edge(int from_node, int from_track,$/;"	f	file:	signature:(int from_node, int from_track, int to_node, int to_track, short switch_type)
draw_chanx_to_chanx_edge	draw.c	/^static void draw_chanx_to_chanx_edge(int from_node, int from_track,$/;"	p	file:	signature:(int from_node, int from_track, int to_node, int to_track, short switch_type)
draw_chanx_to_chany_edge	draw.c	/^static void draw_chanx_to_chany_edge(int chanx_node,  int chanx_track,$/;"	f	file:	signature:(int chanx_node, int chanx_track, int chany_node, int chany_track, enum e_edge_dir edge_dir, short switch_type)
draw_chanx_to_chany_edge	draw.c	/^static void draw_chanx_to_chany_edge(int chanx_node,  int chanx_track,$/;"	p	file:	signature:(int chanx_node, int chanx_track, int chany_node, int chany_track, enum e_edge_dir edge_dir, short switch_type)
draw_chany_to_chany_edge	draw.c	/^static void draw_chany_to_chany_edge(int from_node, int from_track,$/;"	f	file:	signature:(int from_node, int from_track, int to_node, int to_track, short switch_type)
draw_chany_to_chany_edge	draw.c	/^static void draw_chany_to_chany_edge(int from_node, int from_track,$/;"	p	file:	signature:(int from_node, int from_track, int to_node, int to_track, short switch_type)
draw_congestion	draw.c	/^static void draw_congestion(void)$/;"	f	file:	signature:(void)
draw_congestion	draw.c	/^static void draw_congestion(void);$/;"	p	file:	signature:(void)
draw_message	../include/graphics.h	/^void draw_message(void);$/;"	p	signature:(void)
draw_message	graphics.c	/^void draw_message(void) { }$/;"	f	signature:(void)
draw_message	graphics.c	/^void draw_message(void)$/;"	f	signature:(void)
draw_pin_to_chan_edge	draw.c	/^static void draw_pin_to_chan_edge(int pin_node, int chan_node, int itrack,$/;"	f	file:	signature:(int pin_node, int chan_node, int itrack, boolean mark_conn)
draw_pin_to_chan_edge	draw.c	/^static void draw_pin_to_chan_edge(int pin_node, int chan_node, int itrack,$/;"	p	file:	signature:(int pin_node, int chan_node, int itrack, boolean mark_conn)
draw_route_type	draw.c	/^static enum e_route_type draw_route_type;$/;"	v	typeref:enum:e_route_type	file:
draw_rr	draw.c	/^static void draw_rr(void)$/;"	f	file:	signature:(void)
draw_rr	draw.c	/^static void draw_rr(void);$/;"	p	file:	signature:(void)
draw_rr_chanx	draw.c	/^static void draw_rr_chanx(int inode, int itrack)$/;"	f	file:	signature:(int inode, int itrack)
draw_rr_chanx	draw.c	/^static void draw_rr_chanx(int inode, int itrack);$/;"	p	file:	signature:(int inode, int itrack)
draw_rr_chany	draw.c	/^static void draw_rr_chany(int inode, int itrack)$/;"	f	file:	signature:(int inode, int itrack)
draw_rr_chany	draw.c	/^static void draw_rr_chany(int inode, int itrack);$/;"	p	file:	signature:(int inode, int itrack)
draw_rr_edges	draw.c	/^static void draw_rr_edges(int from_node);$/;"	p	file:	signature:(int from_node)
draw_rr_edges	draw.c	/^static void draw_rr_edges(int inode)$/;"	f	file:	signature:(int inode)
draw_rr_pin	draw.c	/^static void draw_rr_pin(int inode, enum color_types color)$/;"	f	file:	signature:(int inode, enum color_types color)
draw_rr_pin	draw.c	/^static void draw_rr_pin(int inode, enum color_types color);$/;"	p	file:	signature:(int inode, enum color_types color)
draw_rr_switch	draw.c	/^static void draw_rr_switch(float from_x, float from_y, float to_x, float to_y,$/;"	f	file:	signature:(float from_x, float from_y, float to_x, float to_y, boolean buffered)
draw_rr_switch	draw.c	/^static void draw_rr_switch(float from_x, float from_y, float to_x, float to_y,$/;"	p	file:	signature:(float from_x, float from_y, float to_x, float to_y, boolean buffered)
draw_rr_toggle	draw.c	/^static enum e_draw_rr_toggle draw_rr_toggle = DRAW_NO_RR;$/;"	v	typeref:enum:e_draw_rr_toggle	file:
draw_x	draw.c	/^static void draw_x(float x, float y, float size)$/;"	f	file:	signature:(float x, float y, float size)
draw_x	draw.c	/^static void draw_x(float x, float y, float size);$/;"	p	file:	signature:(float x, float y, float size)
drawarc	../include/graphics.h	/^void drawarc(float xcen, float ycen, float rad, float startang,$/;"	p	signature:(float xcen, float ycen, float rad, float startang, float angextent)
drawarc	graphics.c	/^void drawarc(float xc, float yc, float rad, float startang,$/;"	f	signature:(float xc, float yc, float rad, float startang, float angextent)
drawarc	graphics.c	/^void drawarc(float xcen, float ycen, float rad, float startang,$/;"	f	signature:(float xcen, float ycen, float rad, float startang, float angextent)
drawbut	graphics.c	/^static void drawbut(int bnum)$/;"	f	file:	signature:(int bnum)
drawline	../include/graphics.h	/^void drawline(float x1, float y1, float x2, float y2);$/;"	p	signature:(float x1, float y1, float x2, float y2)
drawline	graphics.c	/^void drawline(float x1, float y1, float x2, float y2) { }$/;"	f	signature:(float x1, float y1, float x2, float y2)
drawline	graphics.c	/^void drawline(float x1, float y1, float x2, float y2)$/;"	f	signature:(float x1, float y1, float x2, float y2)
drawmenu	graphics.c	/^static void drawmenu(void)$/;"	f	file:	signature:(void)
drawnets	draw.c	/^static void drawnets(void)$/;"	f	file:	signature:(void)
drawnets	draw.c	/^static void drawnets(void);$/;"	p	file:	signature:(void)
drawplace	draw.c	/^static void drawplace(void)$/;"	f	file:	signature:(void)
drawplace	draw.c	/^static void drawplace(void);$/;"	p	file:	signature:(void)
drawrect	../include/graphics.h	/^void drawrect(float x1, float y1, float x2, float y2);$/;"	p	signature:(float x1, float y1, float x2, float y2)
drawrect	graphics.c	/^void drawrect(float x1, float y1, float x2, float y2) { }$/;"	f	signature:(float x1, float y1, float x2, float y2)
drawrect	graphics.c	/^void drawrect(float x1, float y1, float x2, float y2)$/;"	f	signature:(float x1, float y1, float x2, float y2)
drawroute	draw.c	/^static void drawroute(enum e_draw_net_type draw_net_type)$/;"	f	file:	signature:(enum e_draw_net_type draw_net_type)
drawroute	draw.c	/^static void drawroute(enum e_draw_net_type draw_net_type);$/;"	p	file:	signature:(enum e_draw_net_type draw_net_type)
drawscreen	draw.c	/^static void drawscreen(void)$/;"	f	file:	signature:(void)
drawscreen	draw.c	/^static void drawscreen(void);$/;"	p	file:	signature:(void)
drawtext	../include/graphics.h	/^void drawtext(float xc, float yc, char* text, float boundx);$/;"	p	signature:(float xc, float yc, char* text, float boundx)
drawtext	graphics.c	/^void drawtext(float xc, float yc, char* text, float boundx) { }$/;"	f	signature:(float xc, float yc, char* text, float boundx)
drawtext	graphics.c	/^void drawtext(float xc, float yc, char* text, float boundx)$/;"	f	signature:(float xc, float yc, char* text, float boundx)
dump_clbs	../include/read_place.h	/^void dump_clbs(void);    \/* For debugging *\/$/;"	p	signature:(void)
dump_clbs	read_place.c	/^void dump_clbs(void)$/;"	f	signature:(void)
dump_rr_graph	../include/rr_graph.h	/^void dump_rr_graph(char* file_name);                \/* For debugging only *\/$/;"	p	signature:(char* file_name)
dump_rr_graph	rr_graph.c	/^void dump_rr_graph(char* file_name)$/;"	f	signature:(char* file_name)
dump_seg_details	../include/rr_graph2.h	/^void dump_seg_details(t_seg_details* seg_details, int nodes_per_chan, char* fname);$/;"	p	signature:(t_seg_details* seg_details, int nodes_per_chan, char* fname)
dump_seg_details	rr_graph2.c	/^void dump_seg_details(t_seg_details* seg_details, int nodes_per_chan, char$/;"	f	signature:(t_seg_details* seg_details, int nodes_per_chan, char *fname)
duplicate_pins	place.c	/^static int* duplicate_pins;$/;"	v	file:
e_Fc_type	../include/vpr_types.h	/^enum e_Fc_type {$/;"	g
e_base_cost_type	../include/vpr_types.h	/^enum e_base_cost_type {$/;"	g
e_block_types	../include/vpr_types.h	/^enum e_block_types {$/;"	g
e_cost_indices	../include/vpr_types.h	/^enum e_cost_indices {$/;"	g
e_draw_net_type	draw.c	/^enum e_draw_net_type {ALL_NETS, HIGHLIGHTED};$/;"	g	file:
e_draw_rr_toggle	draw.c	/^enum e_draw_rr_toggle {DRAW_NO_RR = 0, DRAW_ALL_RR, DRAW_ALL_BUT_BUFFERS_RR,$/;"	g	file:
e_edge_dir	draw.c	/^enum e_edge_dir {FROM_X_TO_Y, FROM_Y_TO_X}; \/* Chanx to chany or vice versa? *\/$/;"	g	file:
e_operation	../include/vpr_types.h	/^enum e_operation {$/;"	g
e_pad_loc_type	../include/vpr_types.h	/^enum e_pad_loc_type {$/;"	g
e_pin_type	../include/vpr_types.h	/^enum e_pin_type {$/;"	g
e_place_algorithm	../include/vpr_types.h	/^enum e_place_algorithm {$/;"	g
e_route_type	../include/vpr_types.h	/^enum e_route_type {$/;"	g
e_router_algorithm	../include/vpr_types.h	/^enum e_router_algorithm {$/;"	g
e_side	../include/vpr_types.h	/^enum e_side {$/;"	g
e_stat	../include/vpr_types.h	/^enum e_stat {$/;"	g
e_switch_block_type	../include/vpr_types.h	/^enum e_switch_block_type {$/;"	g
edge	../include/rr_graph_util.h	/^    int edge;$/;"	m	struct:s_linked_edge	access:public
edges	../include/vpr_types.h	/^    int* edges;$/;"	m	struct:__anon22	access:public
empty_heap	../include/route_common.h	/^void empty_heap(void);$/;"	p	signature:(void)
empty_heap	route_common.c	/^void empty_heap(void)$/;"	f	signature:(void)
enable_timing_computations	../include/vpr_types.h	/^    boolean enable_timing_computations;$/;"	m	struct:s_placer_opts	access:public
event_loop	../include/graphics.h	/^void event_loop(void (*act_on_button)(float x, float y),$/;"	p	signature:(void (*act_on_button)(float x, float y), void (*drawscreen)(void))
event_loop	graphics.c	/^void event_loop(void (*act_on_button)(float x, float y),$/;"	f	signature:(void (*act_on_button)(float x, float y), void (*drawscreen)(void))
exit_crit	place.c	/^static int exit_crit(float t, float cost, struct s_annealing_sched annealing_sched)$/;"	f	file:	signature:(float t, float cost, struct s_annealing_sched annealing_sched)
exit_crit	place.c	/^static int exit_crit(float t, float cost, struct s_annealing_sched$/;"	p	file:	signature:(float t, float cost, struct s_annealing_sched annealing_sched)
exit_t	../include/vpr_types.h	/^    float exit_t;  \/* exit_temperature *\/$/;"	m	struct:s_annealing_sched	access:public
fcn	graphics.c	/^    void (*fcn)(void (*drawscreen)(void));$/;"	m	struct:__anon1	file:	access:public
feasible_routing	../include/route_export.h	/^boolean feasible_routing(void);$/;"	p	signature:(void)
feasible_routing	route_common.c	/^boolean feasible_routing(void)$/;"	f	signature:(void)
fill_arch	read_arch.c	/^static void fill_arch(void)$/;"	f	file:	signature:(void)
fill_arch	read_arch.c	/^static void fill_arch(void);$/;"	p	file:	signature:(void)
fillarc	../include/graphics.h	/^void fillarc(float xcen, float ycen, float rad, float startang,$/;"	p	signature:(float xcen, float ycen, float rad, float startang, float angextent)
fillarc	graphics.c	/^void fillarc(float xc, float yc, float rad, float startang,$/;"	f	signature:(float xc, float yc, float rad, float startang, float angextent)
fillarc	graphics.c	/^void fillarc(float xcen, float ycen, float rad, float startang,$/;"	f	signature:(float xcen, float ycen, float rad, float startang, float angextent)
fillpoly	../include/graphics.h	/^void fillpoly(t_point* points, int npoints);$/;"	p	signature:(t_point* points, int npoints)
fillpoly	graphics.c	/^void fillpoly(t_point* points, int npoints) { }$/;"	f	signature:(t_point* points, int npoints)
fillpoly	graphics.c	/^void fillpoly(t_point* points, int npoints)$/;"	f	signature:(t_point* points, int npoints)
fillrect	../include/graphics.h	/^void fillrect(float x1, float y1, float x2, float y2);$/;"	p	signature:(float x1, float y1, float x2, float y2)
fillrect	graphics.c	/^void fillrect(float x1, float y1, float x2, float y2) { }$/;"	f	signature:(float x1, float y1, float x2, float y2)
fillrect	graphics.c	/^void fillrect(float x1, float y1, float x2, float y2)$/;"	f	signature:(float x1, float y1, float x2, float y2)
find_affected_nets	place.c	/^static int find_affected_nets(int* nets_to_update, int* net_block_moved,$/;"	f	file:	signature:(int* nets_to_update, int* net_block_moved, int b_from, int b_to, int num_of_pins)
find_affected_nets	place.c	/^static int find_affected_nets(int* nets_to_update, int* net_block_moved,$/;"	p	file:	signature:(int* nets_to_update, int* net_block_moved, int b_from, int b_to, int num_of_pins)
find_to	place.c	/^static void find_to(int x_from, int y_from, int type, float rlim,$/;"	f	file:	signature:(int x_from, int y_from, int type, float rlim, int* x_to, int* y_to)
find_to	place.c	/^static void find_to(int x_from, int y_from, int type, float rlim,$/;"	p	file:	signature:(int x_from, int y_from, int type, float rlim, int* x_to, int* y_to)
first_iter_pres_fac	../include/vpr_types.h	/^    float first_iter_pres_fac;$/;"	m	struct:s_router_opts	access:public
fixed_channel_width	../include/vpr_types.h	/^    int fixed_channel_width;$/;"	m	struct:s_router_opts	access:public
flushinput	../include/graphics.h	/^void flushinput(void);    \/* Empties event queue *\/$/;"	p	signature:(void)
flushinput	graphics.c	/^void flushinput(void) { }$/;"	f	signature:(void)
flushinput	graphics.c	/^void flushinput(void)$/;"	f	signature:(void)
font_info	graphics.c	/^static XFontStruct* font_info[MAX_FONT_SIZE + 1]; \/* Data for each size *\/$/;"	v	file:
font_is_loaded	graphics.c	/^static int font_is_loaded[MAX_FONT_SIZE + 1];  \/* 1: loaded, 0: not  *\/$/;"	v	file:
force_setcolor	graphics.c	/^static void force_setcolor(int cindex)$/;"	f	file:	signature:(int cindex)
force_setfontsize	graphics.c	/^static void force_setfontsize(int pointsize)$/;"	f	file:	signature:(int pointsize)
force_setlinestyle	graphics.c	/^static void force_setlinestyle(int linestyle)$/;"	f	file:	signature:(int linestyle)
force_setlinewidth	graphics.c	/^static void force_setlinewidth(int linewidth)$/;"	f	file:	signature:(int linewidth)
fptr	../include/vpr_types.h	/^    float* fptr;$/;"	m	struct:s_linked_f_pointer	access:public
frac_cb	../include/vpr_types.h	/^    float frac_cb;$/;"	m	struct:__anon17	access:public
frac_sb	../include/vpr_types.h	/^    float frac_sb;$/;"	m	struct:__anon17	access:public
free_and_reset_internal_structures	timing_place_lookup.c	/^static void free_and_reset_internal_structures(struct s_net* original_net,$/;"	f	file:	signature:(struct s_net* original_net, struct s_block* original_block, int original_num_nets, int original_num_blocks)
free_and_reset_internal_structures	timing_place_lookup.c	/^static void free_and_reset_internal_structures(struct s_net* original_net,$/;"	p	file:	signature:(struct s_net* original_net, struct s_block* original_block, int original_num_nets, int original_num_blocks)
free_chunk_memory	../include/util.h	/^void free_chunk_memory(struct s_linked_vptr* chunk_ptr_head);$/;"	p	signature:(struct s_linked_vptr* chunk_ptr_head)
free_chunk_memory	util.c	/^void free_chunk_memory(struct s_linked_vptr* chunk_ptr_head)$/;"	f	signature:(struct s_linked_vptr* chunk_ptr_head)
free_crit	timing_place.c	/^static void free_crit(struct s_linked_vptr** chunk_list_head_ptr)$/;"	f	file:	signature:(struct s_linked_vptr** chunk_list_head_ptr)
free_crit	timing_place.c	/^static void free_crit(struct s_linked_vptr** chunk_list_head_ptr);$/;"	p	file:	signature:(struct s_linked_vptr** chunk_list_head_ptr)
free_delta_arrays	timing_place_lookup.c	/^static void free_delta_arrays(void)$/;"	f	file:	signature:(void)
free_delta_arrays	timing_place_lookup.c	/^static void free_delta_arrays(void);$/;"	p	file:	signature:(void)
free_edge_list_hard	../include/rr_graph_util.h	/^void free_edge_list_hard(t_linked_edge** edge_list_head_ptr);$/;"	p	signature:(t_linked_edge** edge_list_head_ptr)
free_edge_list_hard	rr_graph_util.c	/^void free_edge_list_hard(t_linked_edge** edge_list_head_ptr)$/;"	f	signature:(t_linked_edge** edge_list_head_ptr)
free_edge_list_head	rr_graph2.c	/^t_linked_edge* free_edge_list_head = NULL;$/;"	v
free_fanout_counts	path_delay.c	/^static void free_fanout_counts(int** num_uses_of_clb_ipin, int$/;"	p	file:	signature:(int** num_uses_of_clb_ipin, int ** num_uses_of_sblk_opin)
free_fanout_counts	path_delay.c	/^static void free_fanout_counts(int** num_uses_of_clb_ipin, int** num_uses_of_sblk_opin)$/;"	f	file:	signature:(int** num_uses_of_clb_ipin, int** num_uses_of_sblk_opin)
free_fast_cost_update_structs	place.c	/^static void free_fast_cost_update_structs(void)$/;"	f	file:	signature:(void)
free_fast_cost_update_structs	place.c	/^static void free_fast_cost_update_structs(void);$/;"	p	file:	signature:(void)
free_hash_table	../include/hash.h	/^void free_hash_table(struct s_hash** hash_table);$/;"	p	signature:(struct s_hash** hash_table)
free_hash_table	hash.c	/^void free_hash_table(struct s_hash** hash_table)$/;"	f	signature:(struct s_hash** hash_table)
free_heap_data	../include/route_common.h	/^void free_heap_data(struct s_heap* hptr);$/;"	p	signature:(struct s_heap* hptr)
free_heap_data	route_common.c	/^void free_heap_data(struct s_heap* hptr)$/;"	f	signature:(struct s_heap* hptr)
free_int_list	../include/util.h	/^void free_int_list(t_linked_int** int_list_head_ptr);$/;"	p	signature:(t_linked_int** int_list_head_ptr)
free_int_list	util.c	/^void free_int_list(t_linked_int** int_list_head_ptr)$/;"	f	signature:(t_linked_int** int_list_head_ptr)
free_ivec_matrix	../include/util.h	/^void free_ivec_matrix(struct s_ivec** ivec_matrix, int nrmin, int nrmax,$/;"	p	signature:(struct s_ivec** ivec_matrix, int nrmin, int nrmax, int ncmin, int ncmax)
free_ivec_matrix	util.c	/^void free_ivec_matrix(struct s_ivec** ivec_matrix, int nrmin, int nrmax,$/;"	f	signature:(struct s_ivec** ivec_matrix, int nrmin, int nrmax, int ncmin, int ncmax)
free_ivec_matrix3	../include/util.h	/^void free_ivec_matrix3(struct s_ivec** *ivec_matrix3, int nrmin, int nrmax,$/;"	p	signature:(struct s_ivec** *ivec_matrix3, int nrmin, int nrmax, int ncmin, int ncmax, int ndmin, int ndmax)
free_ivec_matrix3	util.c	/^void free_ivec_matrix3(struct s_ivec** *ivec_matrix3, int nrmin, int nrmax,$/;"	f	signature:(struct s_ivec** *ivec_matrix3, int nrmin, int nrmax, int ncmin, int ncmax, int ndmin, int ndmax)
free_ivec_vector	../include/util.h	/^void free_ivec_vector(struct s_ivec* ivec_vector, int nrmin, int nrmax);$/;"	p	signature:(struct s_ivec* ivec_vector, int nrmin, int nrmax)
free_ivec_vector	util.c	/^void free_ivec_vector(struct s_ivec* ivec_vector, int nrmin, int nrmax)$/;"	f	signature:(struct s_ivec* ivec_vector, int nrmin, int nrmax)
free_linked_edge_soft	../include/rr_graph_util.h	/^void free_linked_edge_soft(t_linked_edge* edge_ptr, t_linked_edge$/;"	p	signature:(t_linked_edge* edge_ptr, t_linked_edge ** free_list_head_ptr)
free_linked_edge_soft	rr_graph_util.c	/^void free_linked_edge_soft(t_linked_edge* edge_ptr, t_linked_edge$/;"	f	signature:(t_linked_edge* edge_ptr, t_linked_edge ** free_list_head_ptr)
free_linked_rc_edge	net_delay.c	/^static void free_linked_rc_edge(t_linked_rc_edge* rc_edge, t_linked_rc_edge$/;"	f	file:	signature:(t_linked_rc_edge* rc_edge, t_linked_rc_edge ** rc_edge_free_list_ptr)
free_linked_rc_edge	net_delay.c	/^static void free_linked_rc_edge(t_linked_rc_edge* rc_edge, t_linked_rc_edge$/;"	p	file:	signature:(t_linked_rc_edge* rc_edge, t_linked_rc_edge ** rc_edge_free_list_ptr)
free_linked_rt_edge	route_tree_timing.c	/^static void free_linked_rt_edge(t_linked_rt_edge* rt_edge)$/;"	f	file:	signature:(t_linked_rt_edge* rt_edge)
free_linked_rt_edge	route_tree_timing.c	/^static void free_linked_rt_edge(t_linked_rt_edge* rt_edge);$/;"	p	file:	signature:(t_linked_rt_edge* rt_edge)
free_lookups_and_criticalities	../include/timing_place.h	/^void free_lookups_and_criticalities(float*** net_delay, float*** net_slack);$/;"	p	signature:(float*** net_delay, float*** net_slack)
free_lookups_and_criticalities	timing_place.c	/^void free_lookups_and_criticalities(float** *net_delay, float** *net_slack)$/;"	f	signature:(float** *net_delay, float** *net_slack)
free_matrix	../include/util.h	/^void free_matrix(void* vptr, int nrmin, int nrmax, int ncmin, size_t elsize);$/;"	p	signature:(void* vptr, int nrmin, int nrmax, int ncmin, size_t elsize)
free_matrix	util.c	/^void free_matrix(void* vptr, int nrmin, int nrmax, int ncmin,$/;"	f	signature:(void* vptr, int nrmin, int nrmax, int ncmin, size_t elsize)
free_matrix3	../include/util.h	/^void free_matrix3(void* vptr, int nrmin, int nrmax, int ncmin, int ncmax,$/;"	p	signature:(void* vptr, int nrmin, int nrmax, int ncmin, int ncmax, int ndmin, size_t elsize)
free_matrix3	util.c	/^void free_matrix3(void* vptr, int nrmin, int nrmax, int ncmin, int ncmax,$/;"	f	signature:(void* vptr, int nrmin, int nrmax, int ncmin, int ncmax, int ndmin, size_t elsize)
free_net_delay	../include/net_delay.h	/^void free_net_delay(float** net_delay, struct s_linked_vptr$/;"	p	signature:(float** net_delay, struct s_linked_vptr ** chunk_list_head_ptr)
free_net_delay	net_delay.c	/^void free_net_delay(float** net_delay, struct s_linked_vptr** chunk_list_head_ptr)$/;"	f	signature:(float** net_delay, struct s_linked_vptr** chunk_list_head_ptr)
free_parse	read_netlist.c	/^static void free_parse(void)$/;"	f	file:	signature:(void)
free_parse	read_netlist.c	/^static void free_parse(void);$/;"	p	file:	signature:(void)
free_pin_mappings	path_delay.c	/^static void free_pin_mappings(int** block_pin_to_tnode, int$/;"	p	file:	signature:(int** block_pin_to_tnode, int ** *sblk_pin_to_tnode, int* num_subblocks_per_block)
free_pin_mappings	path_delay.c	/^static void free_pin_mappings(int** block_pin_to_tnode,$/;"	f	file:	signature:(int** block_pin_to_tnode, int*** sblk_pin_to_tnode, int* num_subblocks_per_block)
free_place_lookup_structs	../include/timing_place_lookup.h	/^void free_place_lookup_structs(void);$/;"	p	signature:(void)
free_place_lookup_structs	timing_place_lookup.c	/^void free_place_lookup_structs(void)$/;"	f	signature:(void)
free_place_regions	place.c	/^static void free_place_regions(int num_regions)$/;"	f	file:	signature:(int num_regions)
free_place_regions	place.c	/^static void free_place_regions(int num_regions);$/;"	p	file:	signature:(int num_regions)
free_placement_structs	place.c	/^static void free_placement_structs(int place_cost_type, int num_regions,$/;"	f	file:	signature:(int place_cost_type, int num_regions, float** old_region_occ_x, float** old_region_occ_y, struct s_placer_opts placer_opts)
free_placement_structs	place.c	/^static void free_placement_structs(int place_cost_type, int num_regions,$/;"	p	file:	signature:(int place_cost_type, int num_regions, float** old_region_occ_x, float** old_region_occ_y, struct s_placer_opts placer_opts)
free_rc_edge_free_list	net_delay.c	/^static void free_rc_edge_free_list(t_linked_rc_edge* rc_edge_free_list)$/;"	f	file:	signature:(t_linked_rc_edge* rc_edge_free_list)
free_rc_edge_free_list	net_delay.c	/^static void free_rc_edge_free_list(t_linked_rc_edge* rc_edge_free_list);$/;"	p	file:	signature:(t_linked_rc_edge* rc_edge_free_list)
free_rc_node	net_delay.c	/^static void free_rc_node(t_rc_node* rc_node, t_rc_node$/;"	f	file:	signature:(t_rc_node* rc_node, t_rc_node ** rc_node_free_list_ptr)
free_rc_node	net_delay.c	/^static void free_rc_node(t_rc_node* rc_node, t_rc_node$/;"	p	file:	signature:(t_rc_node* rc_node, t_rc_node ** rc_node_free_list_ptr)
free_rc_node_free_list	net_delay.c	/^static void free_rc_node_free_list(t_rc_node* rc_node_free_list)$/;"	f	file:	signature:(t_rc_node* rc_node_free_list)
free_rc_node_free_list	net_delay.c	/^static void free_rc_node_free_list(t_rc_node* rc_node_free_list);$/;"	p	file:	signature:(t_rc_node* rc_node_free_list)
free_rc_tree	net_delay.c	/^static void free_rc_tree(t_rc_node* rc_root, t_rc_node$/;"	p	file:	signature:(t_rc_node* rc_root, t_rc_node ** rc_node_free_list_ptr, t_linked_rc_edge** rc_edge_free_list_ptr)
free_rc_tree	net_delay.c	/^static void free_rc_tree(t_rc_node* rc_root, t_rc_node** rc_node_free_list_ptr,$/;"	f	file:	signature:(t_rc_node* rc_root, t_rc_node** rc_node_free_list_ptr, t_linked_rc_edge** rc_edge_free_list_ptr)
free_route_structs	../include/route_export.h	/^void free_route_structs(t_ivec** clb_opins_used_locally);$/;"	p	signature:(t_ivec** clb_opins_used_locally)
free_route_structs	route_common.c	/^void free_route_structs(t_ivec** clb_opins_used_locally)$/;"	f	signature:(t_ivec** clb_opins_used_locally)
free_route_tree	../include/route_tree_timing.h	/^void free_route_tree(t_rt_node* rt_node);$/;"	p	signature:(t_rt_node* rt_node)
free_route_tree	route_tree_timing.c	/^void free_route_tree(t_rt_node* rt_node)$/;"	f	signature:(t_rt_node* rt_node)
free_route_tree_timing_structs	../include/route_tree_timing.h	/^void free_route_tree_timing_structs(void);$/;"	p	signature:(void)
free_route_tree_timing_structs	route_tree_timing.c	/^void free_route_tree_timing_structs(void)$/;"	f	signature:(void)
free_routing_structs	timing_place_lookup.c	/^static void free_routing_structs(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf )
free_routing_structs	timing_place_lookup.c	/^static void free_routing_structs(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf )
free_rr_graph	../include/rr_graph.h	/^void free_rr_graph(void);$/;"	p	signature:(void)
free_rr_graph	rr_graph.c	/^void free_rr_graph(void)$/;"	f	signature:(void)
free_rr_graph_internals	../include/rr_graph.h	/^void free_rr_graph_internals(enum e_route_type route_type,$/;"	p	signature:(enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, enum e_base_cost_type base_cost_type)
free_rr_graph_internals	rr_graph.c	/^void free_rr_graph_internals(enum e_route_type route_type, struct s_det_routing_arch$/;"	f	signature:(enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, enum e_base_cost_type base_cost_type)
free_rr_node_indices	../include/rr_graph2.h	/^void free_rr_node_indices(int** rr_node_indices);$/;"	p	signature:(int** rr_node_indices)
free_rr_node_indices	rr_graph2.c	/^void free_rr_node_indices(int** rr_node_indices)$/;"	f	signature:(int** rr_node_indices)
free_rr_node_route_structs	../include/route_common.h	/^void free_rr_node_route_structs(void);$/;"	p	signature:(void)
free_rr_node_route_structs	route_common.c	/^void free_rr_node_route_structs(void)$/;"	f	signature:(void)
free_rt_node	route_tree_timing.c	/^static void free_rt_node(t_rt_node* rt_node)$/;"	f	file:	signature:(t_rt_node* rt_node)
free_rt_node	route_tree_timing.c	/^static void free_rt_node(t_rt_node* rt_node);$/;"	p	file:	signature:(t_rt_node* rt_node)
free_saved_routing	../include/route_export.h	/^void free_saved_routing(struct s_trace** best_routing,$/;"	p	signature:(struct s_trace** best_routing, t_ivec** saved_clb_opins_used_locally)
free_saved_routing	route_common.c	/^void free_saved_routing(struct s_trace** best_routing, t_ivec$/;"	f	signature:(struct s_trace** best_routing, t_ivec ** saved_clb_opins_used_locally)
free_seg_details	../include/rr_graph2.h	/^void free_seg_details(t_seg_details* seg_details, int nodes_per_chan);$/;"	p	signature:(t_seg_details* seg_details, int nodes_per_chan)
free_seg_details	rr_graph2.c	/^void free_seg_details(t_seg_details* seg_details, int nodes_per_chan)$/;"	f	signature:(t_seg_details* seg_details, int nodes_per_chan)
free_subblock_data	../include/path_delay.h	/^void free_subblock_data(t_subblock_data* subblock_data_ptr);$/;"	p	signature:(t_subblock_data* subblock_data_ptr)
free_subblock_data	path_delay.c	/^void free_subblock_data(t_subblock_data* subblock_data_ptr)$/;"	f	signature:(t_subblock_data* subblock_data_ptr)
free_switch_block_conn	../include/rr_graph_sbox.h	/^void free_switch_block_conn(int nodes_per_chan);$/;"	p	signature:(int nodes_per_chan)
free_switch_block_conn	rr_graph_sbox.c	/^void free_switch_block_conn(int nodes_per_chan)$/;"	f	signature:(int nodes_per_chan)
free_timing_driven_route_structs	../include/route_timing.h	/^void free_timing_driven_route_structs(float* pin_criticality,$/;"	p	signature:(float* pin_criticality, int* sink_order, t_rt_node** rt_node_of_sink)
free_timing_driven_route_structs	route_timing.c	/^void free_timing_driven_route_structs(float* pin_criticality, int$/;"	f	signature:(float* pin_criticality, int *sink_order, t_rt_node** rt_node_of_sink)
free_timing_graph	../include/path_delay.h	/^void free_timing_graph(float** net_slack);$/;"	p	signature:(float** net_slack)
free_timing_graph	path_delay.c	/^void free_timing_graph(float** net_slack)$/;"	f	signature:(float** net_slack)
free_trace_data	route_common.c	/^static void free_trace_data(struct s_trace* tptr)$/;"	f	file:	signature:(struct s_trace* tptr)
free_trace_data	route_common.c	/^static void free_trace_data(struct s_trace* tptr);$/;"	p	file:	signature:(struct s_trace* tptr)
free_trace_structs	../include/route_common.h	/^void free_trace_structs(void);$/;"	p	signature:(void)
free_trace_structs	route_common.c	/^void free_trace_structs(void)$/;"	f	signature:(void)
free_traceback	../include/route_common.h	/^void free_traceback(int inet);$/;"	p	signature:(int inet)
free_traceback	route_common.c	/^void free_traceback(int inet)$/;"	f	signature:(int inet)
free_unique_pin_list	place.c	/^static void free_unique_pin_list(void)$/;"	f	file:	signature:(void)
free_unique_pin_list	place.c	/^static void free_unique_pin_list(void);$/;"	p	file:	signature:(void)
frequency	../include/vpr_types.h	/^    float frequency;$/;"	m	struct:__anon17	access:public
gc	graphics.c	/^static GC gc, gcxor, gc_menus;$/;"	v	file:
gc_menus	graphics.c	/^static GC gc, gcxor, gc_menus;$/;"	v	file:
gcxor	graphics.c	/^static GC gc, gcxor, gc_menus;$/;"	v	file:
generic_compute_matrix	timing_place_lookup.c	/^static void generic_compute_matrix(float** *matrix_ptr,$/;"	f	file:	signature:(float** *matrix_ptr, enum e_block_types source_type, enum e_block_types sink_type, int source_x, int source_y, int start_x, int end_x, int start_y, int end_y, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf )
generic_compute_matrix	timing_place_lookup.c	/^static void generic_compute_matrix(float** *matrix_ptr,$/;"	p	file:	signature:(float** *matrix_ptr, enum e_block_types source_type, enum e_block_types sink_type, int source_x, int source_y, int start_x, int end_x, int start_y, int end_y, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf)
get_Fc_type	read_arch.c	/^static enum e_Fc_type get_Fc_type(char* ptr, FILE* fp_arch, char* buf)$/;"	f	file:	signature:(char* ptr, FILE* fp_arch, char* buf)
get_Fc_type	read_arch.c	/^static enum e_Fc_type get_Fc_type(char* ptr, FILE* fp_arch, char* buf);$/;"	p	file:	signature:(char* ptr, FILE* fp_arch, char* buf)
get_T_subblock	read_arch.c	/^static void get_T_subblock(FILE* fp_arch, char* buf, t_T_subblock$/;"	f	file:	signature:(FILE* fp_arch, char* buf, t_T_subblock *T_subblock)
get_T_subblock	read_arch.c	/^static void get_T_subblock(FILE* fp_arch, char* buf, t_T_subblock$/;"	p	file:	signature:(FILE* fp_arch, char* buf, t_T_subblock *T_subblock)
get_average_opin_delay	rr_graph_indexed_data.c	/^static float get_average_opin_delay(int** rr_node_indices, int$/;"	f	file:	signature:(int** rr_node_indices, int nodes_per_chan)
get_average_opin_delay	rr_graph_indexed_data.c	/^static float get_average_opin_delay(int** rr_node_indices, int$/;"	p	file:	signature:(int** rr_node_indices, int nodes_per_chan)
get_bb_from_scratch	place.c	/^static void get_bb_from_scratch(int inet, struct s_bb* coords,$/;"	f	file:	signature:(int inet, struct s_bb* coords, struct s_bb* num_on_edges)
get_bb_from_scratch	place.c	/^static void get_bb_from_scratch(int inet, struct s_bb* coords,$/;"	p	file:	signature:(int inet, struct s_bb* coords, struct s_bb* num_on_edges)
get_block_center	draw.c	/^static void get_block_center(int bnum, float* x, float* y)$/;"	f	file:	signature:(int bnum, float* x, float* y)
get_block_center	draw.c	/^static void get_block_center(int bnum, float* x, float* y);$/;"	p	file:	signature:(int bnum, float* x, float* y)
get_cblock_trans	rr_graph_area.c	/^static float get_cblock_trans(int* num_inputs_to_cblock, int$/;"	f	file:	signature:(int* num_inputs_to_cblock, int max_inputs_to_cblock, float trans_cblock_to_lblock_buf, float trans_sram_bit)
get_cblock_trans	rr_graph_area.c	/^static float get_cblock_trans(int* num_inputs_to_cblock, int$/;"	p	file:	signature:(int* num_inputs_to_cblock, int max_inputs_to_cblock, float trans_cblock_to_lblock_buf, float trans_sram_bit)
get_chan	read_arch.c	/^static void get_chan(char* ptr, t_chan* chan, int inp_num, FILE* fp_arch,$/;"	f	file:	signature:(char* ptr, t_chan* chan, int inp_num, FILE* fp_arch, char* buf)
get_chan	read_arch.c	/^static void get_chan(char* ptr, t_chan* chan, int inp_num, FILE* fp_arch,$/;"	p	file:	signature:(char* ptr, t_chan* chan, int inp_num, FILE* fp_arch, char* buf)
get_channel_occupancy_stats	stats.c	/^static void get_channel_occupancy_stats(void)$/;"	f	file:	signature:(void)
get_channel_occupancy_stats	stats.c	/^static void get_channel_occupancy_stats(void);$/;"	p	file:	signature:(void)
get_class	read_arch.c	/^static int get_class(FILE* fp_arch, char* buf)$/;"	f	file:	signature:(FILE* fp_arch, char* buf)
get_class	read_arch.c	/^static int get_class(FILE* fp_arch, char* buf);$/;"	p	file:	signature:(FILE* fp_arch, char* buf)
get_clb_opin_connections	../include/rr_graph2.h	/^int get_clb_opin_connections(int***  clb_opin_to_tracks, int ipin,$/;"	p	signature:(int*** clb_opin_to_tracks, int ipin, int i, int j, int Fc_output, t_seg_details* seg_details_x, t_seg_details* seg_details_y, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices)
get_clb_opin_connections	rr_graph2.c	/^int get_clb_opin_connections(int** *clb_opin_to_tracks, int ipin, int i, int$/;"	f	signature:(int** *clb_opin_to_tracks, int ipin, int i, int j, int Fc_output, t_seg_details* seg_details_x, t_seg_details *seg_details_y, t_linked_edge** edge_list_ptr, int nodes_per_chan, int ** rr_node_indices)
get_closest_seg_start	../include/rr_graph2.h	/^int get_closest_seg_start(t_seg_details* seg_details, int itrack, int seg_num,$/;"	p	signature:(t_seg_details* seg_details, int itrack, int seg_num, int chan_num)
get_closest_seg_start	rr_graph2.c	/^int get_closest_seg_start(t_seg_details* seg_details, int itrack, int seg_num,$/;"	f	signature:(t_seg_details* seg_details, int itrack, int seg_num, int chan_num)
get_delay_normalization_fac	rr_graph_indexed_data.c	/^static float get_delay_normalization_fac(int nodes_per_chan, int**$/;"	f	file:	signature:(int nodes_per_chan, int** rr_node_indices)
get_delay_normalization_fac	rr_graph_indexed_data.c	/^static float get_delay_normalization_fac(int nodes_per_chan, int**$/;"	p	file:	signature:(int nodes_per_chan, int** rr_node_indices)
get_expected_segs_to_target	route_timing.c	/^static int get_expected_segs_to_target(int inode, int target_node, int *$/;"	f	file:	signature:(int inode, int target_node, int * num_segs_ortho_dir_ptr)
get_expected_segs_to_target	route_timing.c	/^static int get_expected_segs_to_target(int inode, int target_node, int *$/;"	p	file:	signature:(int inode, int target_node, int * num_segs_ortho_dir_ptr)
get_first_pin	timing_place_lookup.c	/^static int  get_first_pin(enum e_pin_type pintype)$/;"	f	file:	signature:(enum e_pin_type pintype)
get_first_pin	timing_place_lookup.c	/^static int get_first_pin(enum e_pin_type pintype);$/;"	p	file:	signature:(enum e_pin_type pintype)
get_float	read_arch.c	/^static float get_float(char* ptr, int inp_num, float llim, float ulim,$/;"	p	file:	signature:(char* ptr, int inp_num, float llim, float ulim, FILE* fp_arch, char* buf)
get_float	read_arch.c	/^static float get_float(char* ptr, int inp_num, float low_lim,$/;"	f	file:	signature:(char* ptr, int inp_num, float low_lim, float upp_lim, FILE* fp_arch, char* buf)
get_hash_entry	../include/hash.h	/^struct s_hash* get_hash_entry(struct s_hash** hash_table, char* name);$/;"	p	signature:(struct s_hash** hash_table, char* name)
get_hash_entry	hash.c	/^struct s_hash* get_hash_entry(struct s_hash** hash_table, char* name) {$/;"	f	signature:(struct s_hash** hash_table, char* name)
get_heap_head	../include/route_common.h	/^struct s_heap* get_heap_head(void);$/;"	p	signature:(void)
get_heap_head	route_common.c	/^struct s_heap* get_heap_head(void) {$/;"	f	signature:(void)
get_input	main.c	/^static void get_input(char* net_file, char* arch_file, int place_cost_type,$/;"	f	file:	signature:(char* net_file, char* arch_file, int place_cost_type, int num_regions, float aspect_ratio, boolean user_sized, enum e_route_type route_type, struct s_det_routing_arch *det_routing_arch, t_segment_inf** segment_inf_ptr, t_timing_inf* timing_inf_ptr, t_subblock_data* subblock_data_ptr, t_chan_width_dist* chan_width_dist_ptr)
get_input	main.c	/^static void get_input(char* net_file, char* arch_file, int place_cost_type,$/;"	p	file:	signature:(char* net_file, char* arch_file, int place_cost_type, int num_regions, float aspect_ratio, boolean user_sized, enum e_route_type route_type, struct s_det_routing_arch *det_routing_arch, t_segment_inf** segment_inf_ptr, t_timing_inf* timing_inf_ptr, t_subblock_data* subblock_data_ptr, t_chan_width_dist* chan_width_dist_ptr)
get_int	read_arch.c	/^static int get_int(char* ptr, int inp_num, FILE* fp_arch, char* buf,$/;"	f	file:	signature:(char* ptr, int inp_num, FILE* fp_arch, char* buf, int min_val)
get_int	read_arch.c	/^static int get_int(char* ptr, int inp_num, FILE* fp_arch, char* buf,$/;"	p	file:	signature:(char* ptr, int inp_num, FILE* fp_arch, char* buf, int min_val)
get_last_token	read_arch.c	/^static char* get_last_token(FILE* fp, char* buf)$/;"	f	file:	signature:(FILE* fp, char* buf)
get_last_token	read_arch.c	/^static char* get_last_token(FILE* fp, char* buf);$/;"	p	file:	signature:(FILE* fp, char* buf)
get_length_and_bends_stats	stats.c	/^static void get_length_and_bends_stats(void)$/;"	f	file:	signature:(void)
get_length_and_bends_stats	stats.c	/^static void get_length_and_bends_stats(void);$/;"	p	file:	signature:(void)
get_longest_segment_length	timing_place_lookup.c	/^static int get_longest_segment_length(struct s_det_routing_arch det_routing_arch,$/;"	f	file:	signature:(struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf)
get_longest_segment_length	timing_place_lookup.c	/^static int get_longest_segment_length(struct s_det_routing_arch det_routing_arch,$/;"	p	file:	signature:(struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf)
get_max_pins_per_net	route_timing.c	/^static int get_max_pins_per_net(void)$/;"	f	file:	signature:(void)
get_max_pins_per_net	route_timing.c	/^static int get_max_pins_per_net(void);$/;"	p	file:	signature:(void)
get_middle_token	read_arch.c	/^static char* get_middle_token(FILE* fp, char* buf)$/;"	f	file:	signature:(FILE* fp, char* buf)
get_middle_token	read_arch.c	/^static char* get_middle_token(FILE* fp, char* buf);$/;"	p	file:	signature:(FILE* fp, char* buf)
get_net_cost	place.c	/^static float get_net_cost(int inet, struct s_bb* bb_ptr);$/;"	p	file:	signature:(int inet, struct s_bb* bb_ptr)
get_net_cost	place.c	/^static float get_net_cost(int inet, struct s_bb* bbptr)$/;"	f	file:	signature:(int inet, struct s_bb* bbptr)
get_next_hash	../include/hash.h	/^struct s_hash* get_next_hash(struct s_hash** hash_table, struct$/;"	p	signature:(struct s_hash** hash_table, struct s_hash_iterator* hash_iterator)
get_next_hash	hash.c	/^struct s_hash* get_next_hash(struct s_hash** hash_table, struct$/;"	f	signature:(struct s_hash** hash_table, struct s_hash_iterator* hash_iterator)
get_nodes_per_chan	../include/rr_graph.h	/^int get_nodes_per_chan(void);$/;"	p	signature:(void)
get_nodes_per_chan	rr_graph.c	/^int get_nodes_per_chan()$/;"	f
get_non_updateable_bb	place.c	/^static void get_non_updateable_bb(int inet, struct s_bb* bb_coord_new)$/;"	f	file:	signature:(int inet, struct s_bb* bb_coord_new)
get_non_updateable_bb	place.c	/^static void get_non_updateable_bb(int inet, struct s_bb* bb_coord_new);$/;"	p	file:	signature:(int inet, struct s_bb* bb_coord_new)
get_num_bends_and_length	stats.c	/^static void get_num_bends_and_length(int inet, int* bends, int* length, int$/;"	p	file:	signature:(int inet, int* bends, int* length, int *segments)
get_num_bends_and_length	stats.c	/^static void get_num_bends_and_length(int inet, int* bends_ptr, int* len_ptr,$/;"	f	file:	signature:(int inet, int* bends_ptr, int* len_ptr, int* segments_ptr)
get_num_conn	check_netlist.c	/^static int get_num_conn(int bnum)$/;"	f	file:	signature:(int bnum)
get_num_conn	check_netlist.c	/^static int get_num_conn(int bnum);$/;"	p	file:	signature:(int bnum)
get_one_float	read_arch.c	/^static float get_one_float(char* ptr, int inp_num, float low_lim,$/;"	f	file:	signature:(char* ptr, int inp_num, float low_lim, float upp_lim, FILE* fp_arch, char* buf)
get_one_float	read_arch.c	/^static float get_one_float(char* ptr, int inp_num, float low_lim,$/;"	p	file:	signature:(char* ptr, int inp_num, float low_lim, float upp_lim, FILE* fp_arch, char* buf)
get_pad_opin_connections	../include/rr_graph2.h	/^int get_pad_opin_connections(int** pads_to_tracks, int ipad, int i, int j,$/;"	p	signature:(int** pads_to_tracks, int ipad, int i, int j, int Fc_pad, t_seg_details* seg_details_x, t_seg_details* seg_details_y, t_linked_edge** edge_list_ptr, int nodes_per_chan, int ** rr_node_indices)
get_pad_opin_connections	rr_graph2.c	/^int get_pad_opin_connections(int** pads_to_tracks, int ipad, int i, int j,$/;"	f	signature:(int** pads_to_tracks, int ipad, int i, int j, int Fc_pad, t_seg_details* seg_details_x, t_seg_details* seg_details_y, t_linked_edge** edge_list_ptr, int nodes_per_chan, int ** rr_node_indices)
get_pin	read_arch.c	/^static void get_pin(char* ptr, int pinnum, enum e_pin_type type,$/;"	f	file:	signature:(char* ptr, int pinnum, enum e_pin_type type, FILE* fp_arch, char* buf)
get_pin	read_arch.c	/^static void get_pin(char* ptr, int pinnum, enum e_pin_type type,$/;"	p	file:	signature:(char* ptr, int pinnum, enum e_pin_type type, FILE* fp_arch, char* buf)
get_pin_number	read_netlist.c	/^static int get_pin_number(char* ptr)$/;"	f	file:	signature:(char* ptr)
get_pin_number	read_netlist.c	/^static int get_pin_number(char* ptr);$/;"	p	file:	signature:(char* ptr)
get_rr_cong_cost	../include/route_common.h	/^float get_rr_cong_cost(int inode);$/;"	p	signature:(int inode)
get_rr_cong_cost	route_common.c	/^float get_rr_cong_cost(int inode)$/;"	f	signature:(int inode)
get_rr_node_index	../include/rr_graph2.h	/^int get_rr_node_index(int i_in, int j_in, t_rr_type rr_type, int ioff,$/;"	p	signature:(int i_in, int j_in, t_rr_type rr_type, int ioff, int nodes_per_chan, int** rr_node_indices)
get_rr_node_index	rr_graph2.c	/^int get_rr_node_index(int i, int j, t_rr_type rr_type, int ioff,$/;"	f	signature:(int i, int j, t_rr_type rr_type, int ioff, int nodes_per_chan, int** rr_node_indices)
get_rr_node_indices	../include/rr_graph.h	/^int** get_rr_node_indices(void);$/;"	p	signature:(void)
get_rr_node_indices	rr_graph.c	/^int** get_rr_node_indices()$/;"	f
get_rr_pin_draw_coords	draw.c	/^static void get_rr_pin_draw_coords(int inode, int iside, float* xcen,$/;"	f	file:	signature:(int inode, int iside, float* xcen, float* ycen)
get_rr_pin_draw_coords	draw.c	/^static void get_rr_pin_draw_coords(int inode, int iside, float* xcen,$/;"	p	file:	signature:(int inode, int iside, float* xcen, float* ycen)
get_sbox_side	rr_graph_sbox.c	/^static enum e_side get_sbox_side(int get_i, int get_j, t_rr_type get_type,$/;"	f	file:	signature:(int get_i, int get_j, t_rr_type get_type, int comp_i, int comp_j)
get_sbox_side	rr_graph_sbox.c	/^static enum e_side get_sbox_side(int get_i, int get_j, t_rr_type get_type,$/;"	p	file:	signature:(int get_i, int get_j, t_rr_type get_type, int comp_i, int comp_j)
get_seg_end	../include/rr_graph2.h	/^int get_seg_end(t_seg_details* seg_details, int itrack, int seg_start, int$/;"	p	signature:(t_seg_details* seg_details, int itrack, int seg_start, int chan_num, int max_end)
get_seg_end	rr_graph2.c	/^int get_seg_end(t_seg_details* seg_details, int itrack, int seg_start, int$/;"	f	signature:(t_seg_details* seg_details, int itrack, int seg_start, int chan_num, int max_end)
get_segment_inf	read_arch.c	/^static void get_segment_inf(FILE* fp_arch, char* buf, t_segment_inf* seg_ptr,$/;"	f	file:	signature:(FILE* fp_arch, char* buf, t_segment_inf* seg_ptr, int num_switch, enum e_route_type route_type)
get_segment_inf	read_arch.c	/^static void get_segment_inf(FILE* fp_arch, char* buf,$/;"	p	file:	signature:(FILE* fp_arch, char* buf, t_segment_inf* seg_ptr, int num_switch, enum e_route_type route_type)
get_segment_usage_stats	../include/segment_stats.h	/^void get_segment_usage_stats(int num_segment, t_segment_inf* segment_inf);$/;"	p	signature:(int num_segment, t_segment_inf* segment_inf)
get_segment_usage_stats	segment_stats.c	/^void get_segment_usage_stats(int num_segment, t_segment_inf* segment_inf)$/;"	f	signature:(int num_segment, t_segment_inf* segment_inf)
get_serial_num	../include/route_export.h	/^void get_serial_num(void);$/;"	p	signature:(void)
get_serial_num	route_common.c	/^void get_serial_num(void)$/;"	f	signature:(void)
get_simple_switch_block_track	rr_graph_sbox.c	/^static int get_simple_switch_block_track(enum e_side from_side, enum e_side$/;"	f	file:	signature:(enum e_side from_side, enum e_side to_side, int from_track, enum e_switch_block_type switch_block_type, int nodes_per_chan)
get_simple_switch_block_track	rr_graph_sbox.c	/^static int get_simple_switch_block_track(enum e_side from_side, enum e_side$/;"	p	file:	signature:(enum e_side from_side, enum e_side to_side, int from_track, enum e_switch_block_type switch_block_type, int nodes_per_chan)
get_std_dev	place.c	/^static double get_std_dev(int n, double sum_x_squared, double av_x)$/;"	f	file:	signature:(int n, double sum_x_squared, double av_x)
get_std_dev	place.c	/^static double get_std_dev(int n, double sum_x_squared, double av_x);$/;"	p	file:	signature:(int n, double sum_x_squared, double av_x)
get_subblock	read_place.c	/^static int get_subblock(int i, int j, int bnum)$/;"	f	file:	signature:(int i, int j, int bnum)
get_subblock	read_place.c	/^static int get_subblock(int i, int j, int bnum);$/;"	p	file:	signature:(int i, int j, int bnum)
get_switch_block_type	read_arch.c	/^static enum e_switch_block_type get_switch_block_type(FILE* fp_arch,$/;"	f	file:	signature:(FILE* fp_arch, char* buf)
get_switch_block_type	read_arch.c	/^static enum e_switch_block_type get_switch_block_type(FILE* fp_arch,$/;"	p	file:	signature:(FILE* fp_arch, char* buf)
get_switch_box_tracks	../include/rr_graph_sbox.h	/^struct s_ivec get_switch_box_tracks(int from_i, int from_j, int from_track,$/;"	p	signature:(int from_i, int from_j, int from_track, t_rr_type from_type, int to_i, int to_j, t_rr_type to_type, enum e_switch_block_type switch_block_type, int nodes_per_chan)
get_switch_box_tracks	rr_graph_sbox.c	/^struct s_ivec get_switch_box_tracks(int from_i, int from_j, int from_track,$/;"	f	signature:(int from_i, int from_j, int from_track, t_rr_type from_type, int to_i, int to_j, t_rr_type to_type, enum e_switch_block_type switch_block_type, int nodes_per_chan)
get_switch_inf	read_arch.c	/^static void get_switch_inf(FILE* fp_arch, char* buf, int num_switch,$/;"	f	file:	signature:(FILE* fp_arch, char* buf, int num_switch, enum e_route_type route_type)
get_switch_inf	read_arch.c	/^static void get_switch_inf(FILE* fp_arch, char* buf, int num_switch,$/;"	p	file:	signature:(FILE* fp_arch, char* buf, int num_switch, enum e_route_type route_type)
get_switch_type	rr_graph2.c	/^static void get_switch_type(boolean is_from_sbox, boolean is_to_sbox,$/;"	f	file:	signature:(boolean is_from_sbox, boolean is_to_sbox, short from_node_switch, short to_node_switch, short switch_types[2])
get_switch_type	rr_graph2.c	/^static void get_switch_type(boolean is_from_sbox, boolean is_to_sbox,$/;"	p	file:	signature:(boolean is_from_sbox, boolean is_to_sbox, short from_node_switch, short to_node_switch, short switch_types[2])
get_timing_driven_expected_cost	route_timing.c	/^static float get_timing_driven_expected_cost(int inode, int target_node,$/;"	f	file:	signature:(int inode, int target_node, float criticality_fac, float R_upstream)
get_timing_driven_expected_cost	route_timing.c	/^static float get_timing_driven_expected_cost(int inode, int target_node,$/;"	p	file:	signature:(int inode, int target_node, float criticality_fac, float R_upstream)
get_tnode_block_and_output_net	../include/path_delay.h	/^void get_tnode_block_and_output_net(int inode, int* iblk_ptr, int* inet_ptr);$/;"	p	signature:(int inode, int* iblk_ptr, int* inet_ptr)
get_tnode_block_and_output_net	path_delay.c	/^void get_tnode_block_and_output_net(int inode, int* iblk_ptr, int* inet_ptr)$/;"	f	signature:(int inode, int* iblk_ptr, int* inet_ptr)
get_tok	read_netlist.c	/^static char* get_tok(char* buf, int doall, FILE* fp_net)$/;"	f	file:	signature:(char* buf, int doall, FILE* fp_net)
get_tok	read_netlist.c	/^static char* get_tok(char* buf, int doall, FILE* fp_net);$/;"	p	file:	signature:(char* buf, int doall, FILE* fp_net)
get_top_of_heap_index	heapsort.c	/^static int get_top_of_heap_index(int* heap, float* sort_values, int$/;"	f	file:	signature:(int* heap, float* sort_values, int heap_tail)
get_top_of_heap_index	heapsort.c	/^static int get_top_of_heap_index(int* heap, float* sort_values, int$/;"	p	file:	signature:(int* heap, float* sort_values, int heap_tail)
get_track_num	draw.c	/^static int get_track_num(int inode, int** chanx_track, int** chany_track)$/;"	f	file:	signature:(int inode, int** chanx_track, int** chany_track)
get_track_num	draw.c	/^static int get_track_num(int inode, int** chanx_track, int** chany_track);$/;"	p	file:	signature:(int inode, int** chanx_track, int** chany_track)
get_xtrack_to_clb_ipin_edges	../include/rr_graph2.h	/^int get_xtrack_to_clb_ipin_edges(int tr_istart, int tr_iend, int tr_j,$/;"	p	signature:(int tr_istart, int tr_iend, int tr_j, int itrack, int iside, t_linked_edge** edge_list_ptr, struct s_ivec ** tracks_to_clb_ipin, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, int wire_to_ipin_switch)
get_xtrack_to_clb_ipin_edges	rr_graph2.c	/^int get_xtrack_to_clb_ipin_edges(int tr_istart, int tr_iend, int tr_j,$/;"	f	signature:(int tr_istart, int tr_iend, int tr_j, int itrack, int iside, t_linked_edge** edge_list_ptr, struct s_ivec ** tracks_to_clb_ipin, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, int wire_to_ipin_switch)
get_xtrack_to_pad_edges	../include/rr_graph2.h	/^int get_xtrack_to_pad_edges(int tr_istart, int tr_iend, int tr_j, int pad_j,$/;"	p	signature:(int tr_istart, int tr_iend, int tr_j, int pad_j, int itrack, t_linked_edge** edge_list_ptr, struct s_ivec *tracks_to_pads, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, int wire_to_ipin_switch)
get_xtrack_to_pad_edges	rr_graph2.c	/^int get_xtrack_to_pad_edges(int tr_istart, int tr_iend, int tr_j, int pad_j,$/;"	f	signature:(int tr_istart, int tr_iend, int tr_j, int pad_j, int itrack, t_linked_edge** edge_list_ptr, struct s_ivec *tracks_to_pads, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, int wire_to_ipin_switch)
get_xtrack_to_xtrack	../include/rr_graph2.h	/^int get_xtrack_to_xtrack(int from_i, int j, int from_track, int to_i,$/;"	p	signature:(int from_i, int j, int from_track, int to_i, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, enum e_switch_block_type switch_block_type)
get_xtrack_to_xtrack	rr_graph2.c	/^int get_xtrack_to_xtrack(int from_i, int j, int from_track, int to_i,$/;"	f	signature:(int from_i, int j, int from_track, int to_i, t_linked_edge** edge_list_ptr, int nodes_per_chan, int ** rr_node_indices, t_seg_details* seg_details_x, enum e_switch_block_type switch_block_type)
get_xtrack_to_ytracks	../include/rr_graph2.h	/^int get_xtrack_to_ytracks(int from_istart, int from_iend, int from_j, int$/;"	p	signature:(int from_istart, int from_iend, int from_j, int from_track, int to_j, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, t_seg_details *seg_details_y, enum e_switch_block_type switch_block_type)
get_xtrack_to_ytracks	rr_graph2.c	/^int get_xtrack_to_ytracks(int from_istart, int from_iend, int from_j, int$/;"	f	signature:(int from_istart, int from_iend, int from_j, int from_track, int to_j, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, t_seg_details *seg_details_y, enum e_switch_block_type switch_block_type)
get_ytrack_to_clb_ipin_edges	../include/rr_graph2.h	/^int get_ytrack_to_clb_ipin_edges(int tr_jstart, int tr_jend, int tr_i,$/;"	p	signature:(int tr_jstart, int tr_jend, int tr_i, int itrack, int iside, t_linked_edge** edge_list_ptr, struct s_ivec ** tracks_to_clb_ipin, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_y, int wire_to_ipin_switch)
get_ytrack_to_clb_ipin_edges	rr_graph2.c	/^int get_ytrack_to_clb_ipin_edges(int tr_jstart, int tr_jend, int tr_i,$/;"	f	signature:(int tr_jstart, int tr_jend, int tr_i, int itrack, int iside, t_linked_edge** edge_list_ptr, struct s_ivec ** tracks_to_clb_ipin, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_y, int wire_to_ipin_switch)
get_ytrack_to_pad_edges	../include/rr_graph2.h	/^int get_ytrack_to_pad_edges(int tr_jstart, int tr_jend, int tr_i, int pad_i,$/;"	p	signature:(int tr_jstart, int tr_jend, int tr_i, int pad_i, int itrack, t_linked_edge** edge_list_ptr, struct s_ivec *tracks_to_pads, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_y, int wire_to_ipin_switch)
get_ytrack_to_pad_edges	rr_graph2.c	/^int get_ytrack_to_pad_edges(int tr_jstart, int tr_jend, int tr_i, int pad_i,$/;"	f	signature:(int tr_jstart, int tr_jend, int tr_i, int pad_i, int itrack, t_linked_edge** edge_list_ptr, struct s_ivec *tracks_to_pads, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_y, int wire_to_ipin_switch)
get_ytrack_to_xtracks	../include/rr_graph2.h	/^int get_ytrack_to_xtracks(int from_jstart, int from_jend, int from_i, int$/;"	p	signature:(int from_jstart, int from_jend, int from_i, int from_track, int to_i, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, t_seg_details *seg_details_y, enum e_switch_block_type switch_block_type)
get_ytrack_to_xtracks	rr_graph2.c	/^int get_ytrack_to_xtracks(int from_jstart, int from_jend, int from_i, int$/;"	f	signature:(int from_jstart, int from_jend, int from_i, int from_track, int to_i, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_x, t_seg_details *seg_details_y, enum e_switch_block_type switch_block_type)
get_ytrack_to_ytrack	../include/rr_graph2.h	/^int get_ytrack_to_ytrack(int i, int from_j, int from_track, int to_j,$/;"	p	signature:(int i, int from_j, int from_track, int to_j, t_linked_edge** edge_list_ptr, int nodes_per_chan, int** rr_node_indices, t_seg_details* seg_details_y, enum e_switch_block_type switch_block_type)
get_ytrack_to_ytrack	rr_graph2.c	/^int get_ytrack_to_ytrack(int i, int from_j, int from_track, int to_j,$/;"	f	signature:(int i, int from_j, int from_track, int to_j, t_linked_edge** edge_list_ptr, int nodes_per_chan, int ** rr_node_indices, t_seg_details* seg_details_y, enum e_switch_block_type switch_block_type)
gr_automode	draw.c	/^static int gr_automode;  \/* Need user input after: 0: each t,   *$/;"	v	file:
h_ptr	../include/hash.h	/^    struct s_hash* h_ptr;$/;"	m	struct:s_hash_iterator	typeref:struct:s_hash_iterator::s_hash	access:public
hash_table	read_netlist.c	/^static struct s_hash** hash_table;$/;"	v	typeref:struct:s_hash	file:
hash_value	hash.c	/^static int hash_value(char* name)$/;"	f	file:	signature:(char* name)
hash_value	hash.c	/^static int hash_value(char* name);$/;"	p	file:	signature:(char* name)
heap	route_common.c	/^static struct s_heap** heap;  \/* Indexed from [1..heap_size] *\/$/;"	v	typeref:struct:s_heap	file:
heap_free_head	route_common.c	/^static struct s_heap* heap_free_head = NULL;$/;"	v	typeref:struct:s_heap	file:
heap_size	route_common.c	/^static int heap_size;   \/* Number of slots in the heap array *\/$/;"	v	file:
heap_tail	route_common.c	/^static int heap_tail;   \/* Index of first unused slot in the heap array *\/$/;"	v	file:
heapsort	../include/heapsort.h	/^void heapsort(int* sort_index, float* sort_values, int nelem);$/;"	p	signature:(int* sort_index, float* sort_values, int nelem)
heapsort	heapsort.c	/^void heapsort(int* sort_index, float* sort_values, int nelem)$/;"	f	signature:(int* sort_index, float* sort_values, int nelem)
height	graphics.c	/^    int height;$/;"	m	struct:__anon1	file:	access:public
highlight_blocks	draw.c	/^static void highlight_blocks(float x, float y)$/;"	f	file:	signature:(float x, float y)
highlight_blocks	draw.c	/^static void highlight_blocks(float x, float y);$/;"	p	file:	signature:(float x, float y)
highlight_crit_path	draw.c	/^static void highlight_crit_path(void (*drawscreen_ptr)(void))$/;"	f	file:	signature:(void (*drawscreen_ptr)(void))
highlight_crit_path	draw.c	/^static void highlight_crit_path(void (*drawscreen_ptr)(void));$/;"	p	file:	signature:(void (*drawscreen_ptr)(void))
i	../include/hash.h	/^    int i;$/;"	m	struct:s_hash_iterator	access:public
iblk	../include/path_delay2.h	/^    int iblk;$/;"	m	struct:__anon7	access:public
index	../include/hash.h	/^    int index;$/;"	m	struct:s_hash	access:public
index	../include/route_common.h	/^    int index;$/;"	m	struct:s_heap	access:public
index	../include/vpr_types.h	/^    int index;$/;"	m	struct:__anon18	access:public
index	../include/vpr_types.h	/^    int index;$/;"	m	struct:s_trace	access:public
init_arch	../include/read_arch.h	/^void init_arch(float aspect_ratio, boolean user_sized);$/;"	p	signature:(float aspect_ratio, boolean user_sized)
init_arch	read_arch.c	/^void init_arch(float aspect_ratio, boolean user_sized)$/;"	f	signature:(float aspect_ratio, boolean user_sized)
init_chan	../include/place_and_route.h	/^void init_chan(int cfactor, t_chan_width_dist chan_width_dist);$/;"	p	signature:(int cfactor, t_chan_width_dist chan_width_dist)
init_chan	place_and_route.c	/^void init_chan(int cfactor, t_chan_width_dist chan_width_dist)$/;"	f	signature:(int cfactor, t_chan_width_dist chan_width_dist)
init_draw_coords	../include/draw.h	/^void init_draw_coords(float clb_width);$/;"	p	signature:(float clb_width)
init_draw_coords	draw.c	/^void init_draw_coords(float clb_width_val)$/;"	f	signature:(float clb_width_val)
init_graphics	../include/graphics.h	/^void init_graphics(char* window_name);   \/* Initializes X display *\/$/;"	p	signature:(char* window_name)
init_graphics	graphics.c	/^void init_graphics(char* window_name) { }$/;"	f	signature:(char* window_name)
init_graphics	graphics.c	/^void init_graphics(char* window_name)$/;"	f	signature:(char* window_name)
init_occ	timing_place_lookup.c	/^static void init_occ(void)$/;"	f	file:	signature:(void)
init_occ	timing_place_lookup.c	/^static void init_occ(void);$/;"	p	file:	signature:(void)
init_parse	read_netlist.c	/^static void init_parse(int doall)$/;"	f	file:	signature:(int doall)
init_parse	read_netlist.c	/^static void init_parse(int doall);$/;"	p	file:	signature:(int doall)
init_postscript	../include/graphics.h	/^int init_postscript(char* fname);    \/* Returns 1 if successful *\/$/;"	p	signature:(char* fname)
init_postscript	graphics.c	/^int init_postscript(char* fname)$/;"	f	signature:(char* fname)
init_route_structs	../include/route_common.h	/^void init_route_structs(int bb_factor);$/;"	p	signature:(int bb_factor)
init_route_structs	route_common.c	/^void init_route_structs(int bb_factor)$/;"	f	signature:(int bb_factor)
init_route_tree_to_source	../include/route_tree_timing.h	/^t_rt_node* init_route_tree_to_source(int inet);$/;"	p	signature:(int inet)
init_route_tree_to_source	route_tree_timing.c	/^t_rt_node* init_route_tree_to_source(int inet)$/;"	f	signature:(int inet)
init_t	../include/vpr_types.h	/^    float init_t;  \/* initial_temperature *\/$/;"	m	struct:s_annealing_sched	access:public
init_world	../include/graphics.h	/^void init_world(float xl, float yt, float xr, float yb);$/;"	p	signature:(float xl, float yt, float xr, float yb)
init_world	graphics.c	/^void init_world(float x1, float y1, float x2, float y2)$/;"	f	signature:(float x1, float y1, float x2, float y2)
init_world	graphics.c	/^void init_world(float xl, float yt, float xr, float yb) { }$/;"	f	signature:(float xl, float yt, float xr, float yb)
initial_placement	place.c	/^static void initial_placement(enum e_pad_loc_type pad_loc_type,$/;"	f	file:	signature:(enum e_pad_loc_type pad_loc_type, char* pad_loc_file)
initial_placement	place.c	/^static void initial_placement(enum e_pad_loc_type pad_loc_type,$/;"	p	file:	signature:(enum e_pad_loc_type pad_loc_type, char* pad_loc_file)
initial_pres_fac	../include/vpr_types.h	/^    float initial_pres_fac;$/;"	m	struct:s_router_opts	access:public
inner_loop_recompute_divider	../include/vpr_types.h	/^    int   inner_loop_recompute_divider;$/;"	m	struct:s_placer_opts	access:public
inner_num	../include/vpr_types.h	/^    float inner_num; \/* used for controlling the move times in SA inner loop*\/$/;"	m	struct:s_annealing_sched	access:public
inode	../include/route_tree_timing.h	/^    int inode;$/;"	m	struct:s_rt_node	access:public
inode	net_delay.c	/^    int inode;$/;"	m	struct:s_rc_node	file:	access:public
inputs	../include/vpr_types.h	/^    int* inputs;$/;"	m	struct:__anon15	access:public
insert_in_edge_list	../include/rr_graph_util.h	/^t_linked_edge* insert_in_edge_list(t_linked_edge* head, int edge, short$/;"	p	signature:(t_linked_edge* head, int edge, short iswitch, t_linked_edge** free_list_head_ptr)
insert_in_edge_list	rr_graph_util.c	/^t_linked_edge* insert_in_edge_list(t_linked_edge* head, int edge, short iswitch,$/;"	f	signature:(t_linked_edge* head, int edge, short iswitch, t_linked_edge** free_list_head_ptr)
insert_in_hash_table	../include/hash.h	/^struct s_hash* insert_in_hash_table(struct s_hash** hash_table, char* name,$/;"	p	signature:(struct s_hash** hash_table, char* name, int next_free_index)
insert_in_hash_table	hash.c	/^struct s_hash* insert_in_hash_table(struct s_hash** hash_table, char* name,$/;"	f	signature:(struct s_hash** hash_table, char* name, int next_free_index)
insert_in_int_list	../include/util.h	/^t_linked_int* insert_in_int_list(t_linked_int* head, int data, t_linked_int**$/;"	p	signature:(t_linked_int* head, int data, t_linked_int** free_list_head_ptr)
insert_in_int_list	util.c	/^t_linked_int* insert_in_int_list(t_linked_int* head, int data, t_linked_int**$/;"	f	signature:(t_linked_int* head, int data, t_linked_int** free_list_head_ptr)
insert_in_vptr_list	../include/util.h	/^struct s_linked_vptr* insert_in_vptr_list(struct s_linked_vptr* head,$/;"	p	signature:(struct s_linked_vptr* head, void* vptr_to_add)
insert_in_vptr_list	util.c	/^struct s_linked_vptr* insert_in_vptr_list(struct s_linked_vptr* head,$/;"	f	signature:(struct s_linked_vptr* head, void* vptr_to_add)
inv_capacity	../include/vpr_types.h	/^    float inv_capacity;$/;"	m	struct:s_place_region	access:public
inv_length	../include/vpr_types.h	/^    float inv_length;$/;"	m	struct:__anon23	access:public
invalidate_heap_entries	../include/route_common.h	/^void invalidate_heap_entries(int sink_node, int ipin_node);$/;"	p	signature:(int sink_node, int ipin_node)
invalidate_heap_entries	route_common.c	/^void invalidate_heap_entries(int sink_node, int ipin_node)$/;"	f	signature:(int sink_node, int ipin_node)
io_blocks	../include/vpr_types.h	/^        int* io_blocks;$/;"	m	union:s_clb::__anon12	access:public
io_rat	main.c	/^int nx, ny, io_rat, pins_per_clb;$/;"	v
ipin	../include/path_delay2.h	/^    short ipin;$/;"	m	struct:__anon7	access:public
is_cbox	../include/rr_graph2.h	/^boolean is_cbox(int seg_num, int chan_num, int itrack, t_seg_details$/;"	p	signature:(int seg_num, int chan_num, int itrack, t_seg_details *seg_details)
is_cbox	rr_graph2.c	/^boolean is_cbox(int seg_num, int chan_num, int itrack, t_seg_details$/;"	f	signature:(int seg_num, int chan_num, int itrack, t_seg_details *seg_details)
is_global	main.c	/^boolean* is_global;         \/* FALSE if a net is normal, TRUE if it is   *\/$/;"	v
is_global_clb_pin	main.c	/^boolean* is_global_clb_pin;     \/* [0..pins_per_clb-1]. *\/$/;"	v
is_global_clock	path_delay.c	/^static boolean is_global_clock(int iblk, int* num_subblocks_per_block,$/;"	f	file:	signature:(int iblk, int* num_subblocks_per_block, t_subblock** subblock_inf)
is_global_clock	path_delay.c	/^static boolean is_global_clock(int iblk, int* num_subblocks_per_block,$/;"	p	file:	signature:(int iblk, int* num_subblocks_per_block, t_subblock** subblock_inf)
is_opin	../include/vpr_utils.h	/^boolean is_opin(int ipin);$/;"	p	signature:(int ipin)
is_opin	vpr_utils.c	/^boolean is_opin(int ipin)$/;"	f	signature:(int ipin)
is_sbox	../include/rr_graph2.h	/^boolean is_sbox(int seg_num, int chan_num, int itrack, t_seg_details$/;"	p	signature:(int seg_num, int chan_num, int itrack, t_seg_details *seg_details, boolean above_or_right)
is_sbox	rr_graph2.c	/^boolean is_sbox(int seg_num, int chan_num, int itrack, t_seg_details$/;"	f	signature:(int seg_num, int chan_num, int itrack, t_seg_details *seg_details, boolean above_or_right)
ispoly	graphics.c	/^    int ispoly;$/;"	m	struct:__anon1	file:	access:public
ispressed	graphics.c	/^    int ispressed;$/;"	m	struct:__anon1	file:	access:public
isread	read_arch.c	/^static int isread[NUMINP];$/;"	v	file:
istext	graphics.c	/^    int istext;$/;"	m	struct:__anon1	file:	access:public
isubblk	../include/path_delay2.h	/^    short isubblk;$/;"	m	struct:__anon7	access:public
iswitch	../include/route_tree_timing.h	/^    short  iswitch;$/;"	m	struct:s_linked_rt_edge	access:public
iswitch	../include/rr_graph_util.h	/^    short iswitch;$/;"	m	struct:s_linked_edge	access:public
iswitch	../include/vpr_types.h	/^    short iswitch;$/;"	m	struct:s_trace	access:public
iswitch	net_delay.c	/^    short iswitch;$/;"	m	struct:s_linked_rc_edge	file:	access:public
length	../include/vpr_types.h	/^    int   length;$/;"	m	struct:__anon17	access:public
length	../include/vpr_types.h	/^    int length;$/;"	m	struct:__anon18	access:public
line_types	../include/graphics.h	/^enum line_types {$/;"	g
linenum	util.c	/^int linenum;  \/* Line in file being parsed. *\/$/;"	v
linked_f_pointer_free_head	route_common.c	/^static struct s_linked_f_pointer* linked_f_pointer_free_head = NULL;$/;"	v	typeref:struct:s_linked_f_pointer	file:
list	../include/util.h	/^    int* list;$/;"	m	struct:s_ivec	access:public
load_channel_occupancies	stats.c	/^static void load_channel_occupancies(int** chanx_occ, int** chany_occ)$/;"	f	file:	signature:(int** chanx_occ, int** chany_occ)
load_channel_occupancies	stats.c	/^static void load_channel_occupancies(int** chanx_occ, int** chany_occ);$/;"	p	file:	signature:(int** chanx_occ, int** chany_occ)
load_chanx_rr_indices	rr_graph2.c	/^static int load_chanx_rr_indices(t_seg_details* seg_details_x, int$/;"	f	file:	signature:(t_seg_details* seg_details_x, int nodes_per_chan, int start_index, int i, int j)
load_chanx_rr_indices	rr_graph2.c	/^static int load_chanx_rr_indices(t_seg_details* seg_details_x, int$/;"	p	file:	signature:(t_seg_details* seg_details_x, int nodes_per_chan, int start_index, int i, int j)
load_chany_rr_indices	rr_graph2.c	/^static int load_chany_rr_indices(t_seg_details* seg_details_y, int$/;"	f	file:	signature:(t_seg_details* seg_details_y, int nodes_per_chan, int start_index, int i, int j)
load_chany_rr_indices	rr_graph2.c	/^static int load_chany_rr_indices(t_seg_details* seg_details_y, int$/;"	p	file:	signature:(t_seg_details* seg_details_y, int nodes_per_chan, int start_index, int i, int j)
load_constant_net_delay	../include/net_delay.h	/^void load_constant_net_delay(float** net_delay, float delay_value);$/;"	p	signature:(float** net_delay, float delay_value)
load_constant_net_delay	net_delay.c	/^void load_constant_net_delay(float** net_delay, float delay_value)$/;"	f	signature:(float** net_delay, float delay_value)
load_criticalities	../include/timing_place.h	/^void load_criticalities(struct s_placer_opts placer_opts,$/;"	p	signature:(struct s_placer_opts placer_opts, float** net_slack, float d_max, float crit_exponent)
load_criticalities	timing_place.c	/^void load_criticalities(struct s_placer_opts placer_opts,$/;"	f	signature:(struct s_placer_opts placer_opts, float** net_slack, float d_max, float crit_exponent)
load_extra_switch_types	read_arch.c	/^static void load_extra_switch_types(struct s_det_routing_arch *$/;"	f	file:	signature:(struct s_det_routing_arch * det_routing_arch, t_timing_inf* timing_inf)
load_extra_switch_types	read_arch.c	/^static void load_extra_switch_types(struct s_det_routing_arch *$/;"	p	file:	signature:(struct s_det_routing_arch * det_routing_arch, t_timing_inf* timing_inf)
load_font	graphics.c	/^static void load_font(int pointsize)$/;"	f	file:	signature:(int pointsize)
load_global_segment_and_switch	read_arch.c	/^static void load_global_segment_and_switch(struct s_det_routing_arch *$/;"	f	file:	signature:(struct s_det_routing_arch * det_routing_arch, t_segment_inf* segment_inf, t_timing_inf *timing_inf)
load_global_segment_and_switch	read_arch.c	/^static void load_global_segment_and_switch(struct s_det_routing_arch *$/;"	p	file:	signature:(struct s_det_routing_arch * det_routing_arch, t_segment_inf* segment_inf, t_timing_inf *timing_inf)
load_net_delay_from_routing	../include/net_delay.h	/^void load_net_delay_from_routing(float** net_delay);$/;"	p	signature:(float** net_delay)
load_net_delay_from_routing	net_delay.c	/^void load_net_delay_from_routing(float** net_delay)$/;"	f	signature:(float** net_delay)
load_net_rr_terminals	../include/rr_graph.h	/^void load_net_rr_terminals(int** rr_node_indices,$/;"	p	signature:(int** rr_node_indices, int nodes_per_chan)
load_net_rr_terminals	rr_graph.c	/^void load_net_rr_terminals(int** rr_node_indices,$/;"	f	signature:(int** rr_node_indices, int nodes_per_chan)
load_net_slack	../include/path_delay.h	/^float load_net_slack(float** net_slack, float target_cycle_time);$/;"	p	signature:(float** net_slack, float target_cycle_time)
load_net_slack	path_delay.c	/^float load_net_slack(float** net_slack, float target_cycle_time)$/;"	f	signature:(float** net_slack, float target_cycle_time)
load_new_path_R_upstream	route_tree_timing.c	/^static void load_new_path_R_upstream(t_rt_node* start_of_new_path_rt_node)$/;"	f	file:	signature:(t_rt_node* start_of_new_path_rt_node)
load_new_path_R_upstream	route_tree_timing.c	/^static void load_new_path_R_upstream(t_rt_node* start_of_new_path_rt_node);$/;"	p	file:	signature:(t_rt_node* start_of_new_path_rt_node)
load_one_clb_fanout_count	../include/vpr_utils.h	/^void load_one_clb_fanout_count(int subblock_lut_size, t_subblock *subblock_inf,$/;"	p	signature:(int subblock_lut_size, t_subblock *subblock_inf, int num_subblocks, int* num_uses_of_clb_ipin, int* num_uses_of_sblk_opin, int iblk)
load_one_clb_fanout_count	vpr_utils.c	/^void load_one_clb_fanout_count(int subblock_lut_size, t_subblock* subblock_inf,$/;"	f	signature:(int subblock_lut_size, t_subblock* subblock_inf, int num_subblocks, int* num_uses_of_clb_ipin, int* num_uses_of_sblk_opin, int iblk)
load_one_constant_net_delay	net_delay.c	/^static void load_one_constant_net_delay(float** net_delay, int inet, float$/;"	f	file:	signature:(float** net_delay, int inet, float delay_value)
load_one_constant_net_delay	net_delay.c	/^static void load_one_constant_net_delay(float** net_delay, int inet, float$/;"	p	file:	signature:(float** net_delay, int inet, float delay_value)
load_one_net_delay	net_delay.c	/^static void load_one_net_delay(float** net_delay, int inet, t_linked_rc_ptr$/;"	f	file:	signature:(float** net_delay, int inet, t_linked_rc_ptr *rr_node_to_rc_node)
load_one_net_delay	net_delay.c	/^static void load_one_net_delay(float** net_delay, int inet, t_linked_rc_ptr$/;"	p	file:	signature:(float** net_delay, int inet, t_linked_rc_ptr *rr_node_to_rc_node)
load_perturbed_switch_pattern	rr_graph.c	/^static void load_perturbed_switch_pattern(int** *tracks_connected_to_pin,$/;"	f	file:	signature:(int** *tracks_connected_to_pin, int num_phys_pins, int* pin_num_ordering, int* side_ordering, int nodes_per_chan, int Fc, float step_size)
load_perturbed_switch_pattern	rr_graph.c	/^static void load_perturbed_switch_pattern(int** *tracks_connected_to_pin,$/;"	p	file:	signature:(int** *tracks_connected_to_pin, int num_phys_pins, int* pin_num_ordering, int* side_ordering, int nodes_per_chan, int Fc, float step_size)
load_place_regions	place.c	/^static void load_place_regions(int num_regions)$/;"	f	file:	signature:(int num_regions)
load_place_regions	place.c	/^static void load_place_regions(int num_regions);$/;"	p	file:	signature:(int num_regions)
load_rc_tree_C	net_delay.c	/^static float load_rc_tree_C(t_rc_node* rc_node)$/;"	f	file:	signature:(t_rc_node* rc_node)
load_rc_tree_C	net_delay.c	/^static float load_rc_tree_C(t_rc_node* rc_node);$/;"	p	file:	signature:(t_rc_node* rc_node)
load_rc_tree_T	net_delay.c	/^static void load_rc_tree_T(t_rc_node* rc_node, float T_arrival)$/;"	f	file:	signature:(t_rc_node* rc_node, float T_arrival)
load_rc_tree_T	net_delay.c	/^static void load_rc_tree_T(t_rc_node* rc_node, float T_arrival);$/;"	p	file:	signature:(t_rc_node* rc_node, float T_arrival)
load_route_bb	route_common.c	/^static void load_route_bb(int bb_factor)$/;"	f	file:	signature:(int bb_factor)
load_route_bb	route_common.c	/^static void load_route_bb(int bb_factor);$/;"	p	file:	signature:(int bb_factor)
load_rr_indexed_data_T_values	rr_graph_indexed_data.c	/^static void load_rr_indexed_data_T_values(int index_start, int$/;"	f	file:	signature:(int index_start, int num_indices_to_load, t_rr_type rr_type, int nodes_per_chan, int** rr_node_indices, t_segment_inf* segment_inf)
load_rr_indexed_data_T_values	rr_graph_indexed_data.c	/^static void load_rr_indexed_data_T_values(int index_start, int$/;"	p	file:	signature:(int index_start, int num_indices_to_load, t_rr_type rr_type, int nodes_per_chan, int** rr_node_indices, t_segment_inf* segment_inf)
load_rr_indexed_data_base_costs	rr_graph_indexed_data.c	/^static void load_rr_indexed_data_base_costs(int nodes_per_chan, int**$/;"	f	file:	signature:(int nodes_per_chan, int** rr_node_indices, enum e_base_cost_type base_cost_type, int wire_to_ipin_switch)
load_rr_indexed_data_base_costs	rr_graph_indexed_data.c	/^static void load_rr_indexed_data_base_costs(int nodes_per_chan, int**$/;"	p	file:	signature:(int nodes_per_chan, int** rr_node_indices, enum e_base_cost_type base_cost_type, int wire_to_ipin_switch)
load_rt_subtree_Tdel	route_tree_timing.c	/^static void load_rt_subtree_Tdel(t_rt_node* subtree_rt_root, float Tarrival)$/;"	f	file:	signature:(t_rt_node* subtree_rt_root, float Tarrival)
load_rt_subtree_Tdel	route_tree_timing.c	/^static void load_rt_subtree_Tdel(t_rt_node* subtree_rt_root, float Tarrival);$/;"	p	file:	signature:(t_rt_node* subtree_rt_root, float Tarrival)
load_subblock_array	read_netlist.c	/^static void load_subblock_array(int doall, FILE* fp_net, char* temp_buf,$/;"	p	file:	signature:(int doall, FILE* fp_net, char* temp_buf, int num_subblocks, int bnum)
load_subblock_array	read_netlist.c	/^static void load_subblock_array(int doall, FILE* fp_net,$/;"	f	file:	signature:(int doall, FILE* fp_net, char* temp_buf, int num_subblocks, int bnum)
load_timing_graph_net_delays	../include/path_delay.h	/^void load_timing_graph_net_delays(float** net_delay);$/;"	p	signature:(float** net_delay)
load_timing_graph_net_delays	path_delay.c	/^void load_timing_graph_net_delays(float** net_delay)$/;"	f	signature:(float** net_delay)
load_uniform_switch_pattern	rr_graph.c	/^static void load_uniform_switch_pattern(int** *tracks_connected_to_pin,$/;"	f	file:	signature:(int** *tracks_connected_to_pin, int num_phys_pins, int* pin_num_ordering, int* side_ordering, int nodes_per_chan, int Fc, float step_size)
load_uniform_switch_pattern	rr_graph.c	/^static void load_uniform_switch_pattern(int** *tracks_connected_to_pin,$/;"	p	file:	signature:(int** *tracks_connected_to_pin, int num_phys_pins, int* pin_num_ordering, int* side_ordering, int nodes_per_chan, int Fc, float step_size)
longline	../include/vpr_types.h	/^    boolean longline;$/;"	m	struct:__anon17	access:public
longline	../include/vpr_types.h	/^    boolean longline;$/;"	m	struct:__anon18	access:public
lookup_dump	timing_place_lookup.c	/^static FILE* lookup_dump; \/*if debugging mode is on, print out to   *\/$/;"	v	file:
main	main.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
map_button	graphics.c	/^static void map_button(int bnum)$/;"	f	file:	signature:(int bnum)
map_button	graphics.c	/^static void map_button(int bnum);$/;"	p	file:	signature:(int bnum)
mark_ends	../include/route_common.h	/^void mark_ends(int inet);$/;"	p	signature:(int inet)
mark_ends	route_common.c	/^void mark_ends(int inet)$/;"	f	signature:(int inet)
max	../include/util.h	21;"	d
max	graphics.c	84;"	d	file:
max_criticality	../include/vpr_types.h	/^    float max_criticality;$/;"	m	struct:s_router_opts	access:public
max_router_iterations	../include/vpr_types.h	/^    int max_router_iterations;$/;"	m	struct:s_router_opts	access:public
max_subblocks_per_block	../include/vpr_types.h	/^    int  max_subblocks_per_block;$/;"	m	struct:__anon16	access:public
max_subblocks_per_block	read_netlist.c	/^static int max_subblocks_per_block;$/;"	v	file:
menu	graphics.c	/^static Window toplevel, menu, textarea;  \/* various windows *\/$/;"	v	file:
menu_font_size	graphics.c	/^static const int menu_font_size = 14;   \/* Font for menus and dialog boxes. *\/$/;"	v	file:
menutext	graphics.c	/^static void menutext(Window win, int xc, int yc, char* text)$/;"	f	file:	signature:(Window win, int xc, int yc, char* text)
message	graphics.c	/^static char message[BUFSIZE] = "\\0"; \/* User message to display *\/$/;"	v	file:
min	../include/util.h	22;"	d
min	graphics.c	85;"	d	file:
my_atoi	../include/util.h	/^int my_atoi(const char* str);$/;"	p	signature:(const char* str)
my_atoi	util.c	/^int my_atoi(const char* str)$/;"	f	signature:(const char* str)
my_calloc	../include/util.h	/^void* my_calloc(size_t nelem, size_t size);$/;"	p	signature:(size_t nelem, size_t size)
my_calloc	util.c	/^void* my_calloc(size_t nelem, size_t size)$/;"	f	signature:(size_t nelem, size_t size)
my_chunk_malloc	../include/util.h	/^void* my_chunk_malloc(size_t size, struct s_linked_vptr** chunk_ptr_head,$/;"	p	signature:(size_t size, struct s_linked_vptr** chunk_ptr_head, int* mem_avail_ptr, char** next_mem_loc_ptr)
my_chunk_malloc	util.c	/^void* my_chunk_malloc(size_t size, struct s_linked_vptr** chunk_ptr_head,$/;"	f	signature:(size_t size, struct s_linked_vptr** chunk_ptr_head, int* mem_avail_ptr, char** next_mem_loc_ptr)
my_fgets	../include/util.h	/^char* my_fgets(char* buf, int max_size, FILE* fp);$/;"	p	signature:(char* buf, int max_size, FILE* fp)
my_fgets	util.c	/^char* my_fgets(char* buf, int max_size, FILE* fp)$/;"	f	signature:(char* buf, int max_size, FILE* fp)
my_fopen	../include/util.h	/^FILE* my_fopen(char* fname, char* flag, int prompt);$/;"	p	signature:(char* fname, char* flag, int prompt)
my_fopen	util.c	/^FILE* my_fopen(char* fname, char* flag, int prompt)$/;"	f	signature:(char* fname, char* flag, int prompt)
my_frand	../include/util.h	/^float my_frand(void);$/;"	p	signature:(void)
my_frand	util.c	/^float my_frand(void)$/;"	f	signature:(void)
my_irand	../include/util.h	/^int my_irand(int imax);$/;"	p	signature:(int imax)
my_irand	util.c	/^int my_irand(int imax)$/;"	f	signature:(int imax)
my_malloc	../include/util.h	/^void* my_malloc(size_t size);$/;"	p	signature:(size_t size)
my_malloc	util.c	/^void* my_malloc(size_t size)$/;"	f	signature:(size_t size)
my_realloc	../include/util.h	/^void* my_realloc(void* ptr, size_t size);$/;"	p	signature:(void* ptr, size_t size)
my_realloc	util.c	/^void* my_realloc(void* ptr, size_t size)$/;"	f	signature:(void* ptr, size_t size)
my_srandom	../include/util.h	/^void my_srandom(int seed);$/;"	p	signature:(int seed)
my_srandom	util.c	/^void my_srandom(int seed)$/;"	f	signature:(int seed)
my_strtok	../include/util.h	/^char* my_strtok(char* ptr, char* tokens, FILE* fp, char* buf);$/;"	p	signature:(char* ptr, char* tokens, FILE* fp, char* buf)
my_strtok	util.c	/^char* my_strtok(char* ptr, char* tokens, FILE* fp, char* buf)$/;"	f	signature:(char* ptr, char* tokens, FILE* fp, char* buf)
name	../include/hash.h	/^    char* name;$/;"	m	struct:s_hash	access:public
name	../include/vpr_types.h	/^    char* name;$/;"	m	struct:__anon15	access:public
name	../include/vpr_types.h	/^    char* name;$/;"	m	struct:s_block	access:public
name	../include/vpr_types.h	/^    char* name;$/;"	m	struct:s_net	access:public
names	read_arch.c	/^static const char* names[NUMINP] = {"io_rat", "chan_width_x", "chan_width_y",$/;"	v	file:
nelem	../include/util.h	/^    int nelem;$/;"	m	struct:s_ivec	access:public
net	main.c	/^struct s_net* net;$/;"	v	typeref:struct:s_net
net_color	draw.c	/^static enum color_types* net_color, *block_color;$/;"	v	typeref:enum:color_types	file:
net_cost	place.c	/^static float* net_cost = NULL, *temp_net_cost = NULL;     \/* [0..num_nets-1] *\/$/;"	v	file:
net_delay	timing_place_lookup.c	/^static float** net_delay;$/;"	v	file:
net_delay_chunk_list_head	timing_place.c	/^static struct s_linked_vptr* net_delay_chunk_list_head;$/;"	v	typeref:struct:s_linked_vptr	file:
net_pin_index	place.c	/^static int** net_pin_index = NULL;$/;"	v	file:
net_rr_terminals	main.c	/^int** net_rr_terminals;                  \/* [0..num_nets-1][0..num_pins-1]. *\/$/;"	v
net_slack	timing_place_lookup.c	/^static float** net_slack;$/;"	v	file:
net_to_driver_tnode	path_delay2.c	/^int* net_to_driver_tnode;$/;"	v
nets	../include/vpr_types.h	/^    int* nets;$/;"	m	struct:s_block	access:public
next	../include/hash.h	/^    struct s_hash* next;$/;"	m	struct:s_hash	typeref:struct:s_hash::s_hash	access:public
next	../include/route_common.h	/^        struct s_heap* next;$/;"	m	union:s_heap::__anon8	typeref:struct:s_heap::__anon8::s_heap	access:public
next	../include/route_tree_timing.h	/^        struct s_rt_node* next;$/;"	m	union:s_rt_node::__anon10	typeref:struct:s_rt_node::__anon10::s_rt_node	access:public
next	../include/route_tree_timing.h	/^    struct s_linked_rt_edge* next;$/;"	m	struct:s_linked_rt_edge	typeref:struct:s_linked_rt_edge::s_linked_rt_edge	access:public
next	../include/rr_graph_util.h	/^    struct s_linked_edge* next;$/;"	m	struct:s_linked_edge	typeref:struct:s_linked_edge::s_linked_edge	access:public
next	../include/util.h	/^    struct s_linked_int* next;$/;"	m	struct:s_linked_int	typeref:struct:s_linked_int::s_linked_int	access:public
next	../include/util.h	/^    struct s_linked_vptr* next;$/;"	m	struct:s_linked_vptr	typeref:struct:s_linked_vptr::s_linked_vptr	access:public
next	../include/vpr_types.h	/^    struct s_linked_f_pointer* next;$/;"	m	struct:s_linked_f_pointer	typeref:struct:s_linked_f_pointer::s_linked_f_pointer	access:public
next	../include/vpr_types.h	/^    struct s_trace* next;$/;"	m	struct:s_trace	typeref:struct:s_trace::s_trace	access:public
next	net_delay.c	/^                *next;$/;"	m	union:s_rc_node::__anon2	typeref:struct:s_rc_node::__anon2::s_rc_node	file:	access:public
next	net_delay.c	/^            *next;$/;"	m	struct:s_linked_rc_ptr	typeref:struct:s_linked_rc_ptr::s_linked_rc_ptr	file:	access:public
next	net_delay.c	/^            s_linked_rc_edge* next;$/;"	m	struct:s_linked_rc_edge	typeref:struct:s_linked_rc_edge::s_linked_rc_edge	file:	access:public
nint	../include/util.h	23;"	d
node_to_heap	../include/route_common.h	/^void node_to_heap(int inode, float cost, int prev_node, int prev_edge,$/;"	p	signature:(int inode, float cost, int prev_node, int prev_edge, float backward_path_cost, float R_upstream)
node_to_heap	route_common.c	/^void node_to_heap(int inode, float cost, int prev_node, int prev_edge,$/;"	f	signature:(int inode, float cost, int prev_node, int prev_edge, float backward_path_cost, float R_upstream)
nodes_per_chan	rr_graph.c	/^    int nodes_per_chan;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
nonlinear_cong_cost	place.c	/^static float nonlinear_cong_cost(int num_regions)$/;"	f	file:	signature:(int num_regions)
nonlinear_cong_cost	place.c	/^static float nonlinear_cong_cost(int num_regions);$/;"	p	file:	signature:(int num_regions)
num_blocks	main.c	/^int num_nets, num_blocks;$/;"	v
num_buttons	graphics.c	/^static int num_buttons;                  \/* Number of menu buttons *\/$/;"	v	file:
num_class	main.c	/^int num_class;       \/* Number of different classes.  *\/$/;"	v
num_clbs	main.c	/^int num_p_inputs, num_p_outputs, num_clbs, num_globals;$/;"	v
num_const_gen	../include/vpr_types.h	/^    int num_const_gen;$/;"	m	struct:__anon16	access:public
num_driver	read_netlist.c	/^static int* num_driver, *temp_num_pins;$/;"	v	file:
num_edges	../include/path_delay2.h	/^    int      num_edges;$/;"	m	struct:__anon5	access:public
num_edges	../include/vpr_types.h	/^    short num_edges;$/;"	m	struct:__anon22	access:public
num_ff	../include/vpr_types.h	/^    int num_ff; \/* number of flip-flops in the input circuit netlist *\/$/;"	m	struct:__anon16	access:public
num_globals	main.c	/^int num_p_inputs, num_p_outputs, num_clbs, num_globals;$/;"	v
num_heap_allocated	route_common.c	/^static int num_heap_allocated = 0;$/;"	v	file:
num_linked_f_pointer_allocated	route_common.c	/^static int num_linked_f_pointer_allocated = 0;$/;"	v	file:
num_nets	main.c	/^int num_nets, num_blocks;$/;"	v
num_p_inputs	main.c	/^int num_p_inputs, num_p_outputs, num_clbs, num_globals;$/;"	v
num_p_outputs	main.c	/^int num_p_inputs, num_p_outputs, num_clbs, num_globals;$/;"	v
num_pins	../include/vpr_types.h	/^    int num_pins;$/;"	m	struct:s_class	access:public
num_pins	../include/vpr_types.h	/^    int num_pins;$/;"	m	struct:s_net	access:public
num_regions	../include/vpr_types.h	/^    int   num_regions;$/;"	m	struct:s_placer_opts	access:public
num_rr_indexed_data	main.c	/^int num_rr_indexed_data;$/;"	v
num_rr_nodes	main.c	/^int num_rr_nodes;$/;"	v
num_segment	../include/vpr_types.h	/^    int num_segment;$/;"	m	struct:s_det_routing_arch	access:public
num_subblocks_per_block	../include/vpr_types.h	/^    int* num_subblocks_per_block; \/* int num_subblocks_per_block[0...num_blocks-1] *\/$/;"	m	struct:__anon16	access:public
num_subblocks_per_block	read_netlist.c	/^static int* num_subblocks_per_block;$/;"	v	file:
num_switch	../include/vpr_types.h	/^    short num_switch;$/;"	m	struct:s_det_routing_arch	access:public
num_tnode_levels	path_delay2.c	/^int num_tnode_levels;     \/* Number of levels in the timing graph. *\/$/;"	v
num_tnodes	path_delay2.c	/^int num_tnodes;   \/* Number of nodes (pins) in the timing graph *\/$/;"	v
num_trace_allocated	route_common.c	/^static int num_trace_allocated = 0;   \/* To watch for memory leaks. *\/$/;"	v	file:
nx	main.c	/^int nx, ny, io_rat, pins_per_clb;$/;"	v
ny	main.c	/^int nx, ny, io_rat, pins_per_clb;$/;"	v
occ	../include/vpr_types.h	/^    int occ;$/;"	m	struct:s_clb	access:public
occ	../include/vpr_types.h	/^    short occ;$/;"	m	struct:__anon22	access:public
occupancy	../include/vpr_types.h	/^    float occupancy;$/;"	m	struct:s_place_region	access:public
opin_switch	../include/vpr_types.h	/^    short opin_switch;$/;"	m	struct:__anon17	access:public
opin_switch	../include/vpr_types.h	/^    short opin_switch;$/;"	m	struct:__anon18	access:public
ortho_cost_index	../include/vpr_types.h	/^    int ortho_cost_index;$/;"	m	struct:__anon23	access:public
out_edges	../include/path_delay2.h	/^    t_tedge* out_edges;$/;"	m	struct:__anon5	access:public
output	../include/vpr_types.h	/^    int output;$/;"	m	struct:__anon15	access:public
pad_loc_file	../include/vpr_types.h	/^    char* pad_loc_file;$/;"	m	struct:s_placer_opts	access:public
pad_loc_type	../include/vpr_types.h	/^    enum  e_pad_loc_type pad_loc_type;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::e_pad_loc_type	access:public
pads_to_tracks	rr_graph.c	/^    int** pads_to_tracks;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
parent_node	../include/route_tree_timing.h	/^    struct s_rt_node* parent_node;$/;"	m	struct:s_rt_node	typeref:struct:s_rt_node::s_rt_node	access:public
parent_switch	../include/route_tree_timing.h	/^    short parent_switch;$/;"	m	struct:s_rt_node	access:public
parse_command	main.c	/^static void parse_command(int argc, char* argv[], char* net_file, char$/;"	f	file:	signature:(int argc, char* argv[], char* net_file, char *arch_file, char* place_file, char* route_file, enum e_operation *operation, float* aspect_ratio, boolean* full_stats, boolean* user_sized, boolean* verify_binary_search, int* gr_automode, boolean* show_graphics, struct s_annealing_sched* annealing_sched, struct s_placer_opts *placer_opts, struct s_router_opts* router_opts, boolean *timing_analysis_enabled, float* constant_net_delay)
parse_command	main.c	/^static void parse_command(int argc, char* argv[], char* net_file, char$/;"	p	file:	signature:(int argc, char* argv[], char* net_file, char *arch_file, char* place_file, char* route_file, enum e_operation *operation, float* aspect_ratio, boolean* full_stats, boolean* user_sized, boolean* verify_binary_search, int* gr_automode, boolean* show_graphics, struct s_annealing_sched* annealing_sched, struct s_placer_opts *placer_opts, struct s_router_opts* router_opts, boolean *timing_analysis_enabled, float* constant_net_delay)
parse_name_and_pinlist	read_netlist.c	/^static void parse_name_and_pinlist(int doall, FILE* fp_net, char* buf)$/;"	f	file:	signature:(int doall, FILE* fp_net, char* buf)
parse_name_and_pinlist	read_netlist.c	/^static void parse_name_and_pinlist(int doall, FILE* fp_net, char* buf);$/;"	p	file:	signature:(int doall, FILE* fp_net, char* buf)
parse_placement_file	../include/read_place.h	/^void parse_placement_file(char* place_file, char* net_file, char* arch_file);$/;"	p	signature:(char* place_file, char* net_file, char* arch_file)
parse_placement_file	read_place.c	/^void parse_placement_file(char* place_file, char* net_file, char* arch_file)$/;"	f	signature:(char* place_file, char* net_file, char* arch_file)
parse_subblocks	read_netlist.c	/^static char* parse_subblocks(int doall, FILE* fp_net, char* buf, int bnum);$/;"	p	file:	signature:(int doall, FILE* fp_net, char* buf, int bnum)
parse_subblocks	read_netlist.c	/^static char* parse_subblocks(int doall, FILE* fp_net, char* buf,$/;"	f	file:	signature:(int doall, FILE* fp_net, char* buf, int bnum)
path_cost	../include/route_common.h	/^    path_cost;$/;"	m	struct:__anon9	access:public
pathfinder_update_cost	../include/route_common.h	/^void pathfinder_update_cost(float pres_fac, float acc_fac);$/;"	p	signature:(float pres_fac, float acc_fac)
pathfinder_update_cost	route_common.c	/^void pathfinder_update_cost(float pres_fac, float acc_fac)$/;"	f	signature:(float pres_fac, float acc_fac)
pathfinder_update_one_cost	../include/route_common.h	/^void pathfinder_update_one_cost(struct s_trace* route_segment_start,$/;"	p	signature:(struct s_trace* route_segment_start, int add_or_sub, float pres_fac)
pathfinder_update_one_cost	route_common.c	/^void pathfinder_update_one_cost(struct s_trace* route_segment_start,$/;"	f	signature:(struct s_trace* route_segment_start, int add_or_sub, float pres_fac)
peak	../include/vpr_types.h	/^    float peak;$/;"	m	struct:__anon13	access:public
pfreq	../include/vpr_types.h	/^enum pfreq {$/;"	g
pic_on_screen	draw.c	/^static enum pic_type pic_on_screen = NO_PICTURE;  \/* What do I draw? *\/$/;"	v	typeref:enum:pic_type	file:
pic_type	../include/vpr_types.h	/^enum pic_type {$/;"	g
pin_and_chan_adjacent	check_route.c	/^static int pin_and_chan_adjacent(int pin_node, int chan_node)$/;"	f	file:	signature:(int pin_node, int chan_node)
pin_and_chan_adjacent	check_route.c	/^static int pin_and_chan_adjacent(int pin_node, int chan_node);$/;"	p	file:	signature:(int pin_node, int chan_node)
pin_criticality	timing_place_lookup.c	/^static float* pin_criticality;$/;"	v	file:
pin_size	draw.c	/^static float clb_width, pin_size;$/;"	v	file:
pinlist	../include/vpr_types.h	/^    int* pinlist;$/;"	m	struct:s_class	access:public
pinloc	main.c	/^int** pinloc;$/;"	v
pins_per_clb	main.c	/^int nx, ny, io_rat, pins_per_clb;$/;"	v
place_algorithm	../include/vpr_types.h	/^    enum  e_place_algorithm place_algorithm;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::e_place_algorithm	access:public
place_and_route	../include/place_and_route.h	/^void place_and_route(enum e_operation operation,$/;"	p	signature:(enum e_operation operation, struct s_placer_opts placer_opts, char* place_file, char* net_file, char* arch_file, char* route_file, boolean full_stats, boolean verify_binary_search, struct s_annealing_sched annealing_sched, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data* subblock_data_ptr, t_chan_width_dist chan_width_dist)
place_and_route	place_and_route.c	/^void place_and_route(enum e_operation operation,$/;"	f	signature:(enum e_operation operation, struct s_placer_opts placer_opts, char* place_file, char* net_file, char* arch_file, char* route_file, boolean full_stats, boolean verify_binary_search, struct s_annealing_sched annealing_sched, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data *subblock_data_ptr, t_chan_width_dist chan_width_dist)
place_c_types	../include/vpr_types.h	/^enum place_c_types {$/;"	g
place_chan_width	../include/vpr_types.h	/^    int   place_chan_width;$/;"	m	struct:s_placer_opts	access:public
place_cost_exp	../include/vpr_types.h	/^    float place_cost_exp;$/;"	m	struct:s_placer_opts	access:public
place_cost_type	../include/vpr_types.h	/^    enum  place_c_types place_cost_type;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::place_c_types	access:public
place_freq	../include/vpr_types.h	/^    enum  pfreq place_freq;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::pfreq	access:public
place_region_bounds_x	place.c	/^static float* place_region_bounds_x, *place_region_bounds_y;$/;"	v	file:
place_region_bounds_y	place.c	/^static float* place_region_bounds_x, *place_region_bounds_y;$/;"	v	file:
place_region_x	place.c	/^static struct s_place_region** place_region_x, ** place_region_y;$/;"	v	typeref:struct:s_place_region	file:
place_region_y	place.c	/^static struct s_place_region** place_region_x, ** place_region_y;$/;"	v	typeref:struct:	file:
point_to_point_delay_cost	place.c	/^static float** point_to_point_delay_cost = NULL;$/;"	v	file:
point_to_point_timing_cost	place.c	/^static float** point_to_point_timing_cost = NULL;$/;"	v	file:
poly	graphics.c	/^    int poly[3][2];$/;"	m	struct:__anon1	file:	access:public
pos	place.c	/^} *pos;$/;"	v	typeref:struct:s_pos
postscript	graphics.c	/^static void postscript(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
postscript	graphics.c	/^static void postscript(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
pres_cost	../include/route_common.h	/^    float pres_cost;$/;"	m	struct:__anon9	access:public
pres_fac_mult	../include/vpr_types.h	/^    float pres_fac_mult;$/;"	m	struct:s_router_opts	access:public
prev_edge	../include/route_common.h	/^    int prev_edge;$/;"	m	struct:s_heap	access:public
prev_edge	../include/route_common.h	/^    short prev_edge;$/;"	m	struct:__anon9	access:public
prev_node	../include/route_common.h	/^        int prev_node;$/;"	m	union:s_heap::__anon8	access:public
prev_node	../include/route_common.h	/^    int prev_node;$/;"	m	struct:__anon9	access:public
print_arch	../include/read_arch.h	/^void print_arch(char* arch_file, enum e_route_type route_type,$/;"	p	signature:(char* arch_file, enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data subblock_data, t_chan_width_dist chan_width_dist)
print_arch	read_arch.c	/^void print_arch(char* arch_file, enum e_route_type route_type,$/;"	f	signature:(char* arch_file, enum e_route_type route_type, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data subblock_data, t_chan_width_dist chan_width_dist)
print_array	timing_place_lookup.c	/^static void  print_array(float** array_to_print, int x1, int x2, int y1, int y2)$/;"	f	file:	signature:(float** array_to_print, int x1, int x2, int y1, int y2)
print_array	timing_place_lookup.c	/^static void  print_array(float** array_to_print, int x1, int x2, int y1, int y2);$/;"	p	file:	signature:(float** array_to_print, int x1, int x2, int y1, int y2)
print_critical_path	../include/path_delay.h	/^void print_critical_path(char* fname);$/;"	p	signature:(char* fname)
print_critical_path	path_delay.c	/^void print_critical_path(char* fname)$/;"	f	signature:(char* fname)
print_critical_path_node	../include/path_delay2.h	/^float print_critical_path_node(FILE* fp, t_linked_int* critical_path_node);$/;"	p	signature:(FILE* fp, t_linked_int* critical_path_node)
print_critical_path_node	path_delay2.c	/^float print_critical_path_node(FILE* fp, t_linked_int* critical_path_node)$/;"	f	signature:(FILE* fp, t_linked_int* critical_path_node)
print_lambda	../include/stats.h	/^void print_lambda(void);$/;"	p	signature:(void)
print_lambda	stats.c	/^void print_lambda(void)$/;"	f	signature:(void)
print_net_delay	../include/net_delay.h	/^void print_net_delay(float** net_delay, char* fname);$/;"	p	signature:(float** net_delay, char* fname)
print_net_delay	net_delay.c	/^void print_net_delay(float** net_delay, char* fname)$/;"	f	signature:(float** net_delay, char* fname)
print_net_slack	../include/path_delay.h	/^void print_net_slack(char* fname, float** net_slack);$/;"	p	signature:(char* fname, float** net_slack)
print_net_slack	path_delay.c	/^void print_net_slack(char* fname, float** net_slack)$/;"	f	signature:(char* fname, float** net_slack)
print_netlist	../include/print_netlist.h	/^void print_netlist(char* foutput, char* net_file,$/;"	p	signature:(char* foutput, char* net_file, t_subblock_data subblock_data)
print_netlist	print_netlist.c	/^void print_netlist(char* foutput, char* net_file, t_subblock_data subblock_data)$/;"	f	signature:(char* foutput, char* net_file, t_subblock_data subblock_data)
print_pinnum	print_netlist.c	/^static void print_pinnum(FILE* fp, int pinnum)$/;"	f	file:	signature:(FILE* fp, int pinnum)
print_pinnum	print_netlist.c	/^static void print_pinnum(FILE* fp, int pinnum);$/;"	p	file:	signature:(FILE* fp, int pinnum)
print_place	../include/read_place.h	/^void print_place(char* place_file, char* net_file, char* arch_file);$/;"	p	signature:(char* place_file, char* net_file, char* arch_file)
print_place	read_place.c	/^void print_place(char* place_file, char* net_file, char* arch_file)$/;"	f	signature:(char* place_file, char* net_file, char* arch_file)
print_route	../include/route_export.h	/^void print_route(char* name);$/;"	p	signature:(char* name)
print_route	route_common.c	/^void print_route(char* route_file)$/;"	f	signature:(char* route_file)
print_rr_indexed_data	../include/rr_graph.h	/^void print_rr_indexed_data(FILE* fp, int index);    \/* For debugging only *\/$/;"	p	signature:(FILE* fp, int index)
print_rr_indexed_data	rr_graph.c	/^void print_rr_indexed_data(FILE* fp, int index)$/;"	f	signature:(FILE* fp, int index)
print_rr_node	../include/rr_graph.h	/^void print_rr_node(FILE* fp, int inode);            \/* For debugging only *\/$/;"	p	signature:(FILE* fp, int inode)
print_rr_node	rr_graph.c	/^void print_rr_node(FILE* fp, int inode)$/;"	f	signature:(FILE* fp, int inode)
print_sink_delays	../include/timing_place.h	/^void print_sink_delays(char* fname);$/;"	p	signature:(char* fname)
print_sink_delays	timing_place.c	/^void print_sink_delays(char* fname)$/;"	f	signature:(char* fname)
print_timing_graph	../include/path_delay.h	/^void print_timing_graph(char* fname);$/;"	p	signature:(char* fname)
print_timing_graph	path_delay.c	/^void print_timing_graph(char* fname)$/;"	f	signature:(char* fname)
print_wirelen_prob_dist	../include/stats.h	/^void print_wirelen_prob_dist(void);$/;"	p	signature:(void)
print_wirelen_prob_dist	stats.c	/^void print_wirelen_prob_dist(void)$/;"	f	signature:(void)
private_cmap	graphics.c	/^static Colormap private_cmap; \/* "None" unless a private cmap was allocated. *\/$/;"	v	file:
proceed	graphics.c	/^static void proceed(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
proceed	graphics.c	/^static void proceed(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
ps	graphics.c	/^static  FILE* ps;$/;"	v	file:
ps_bot	graphics.c	/^static float ps_left, ps_right, ps_top, ps_bot; \/* Figure boundaries for *$/;"	v	file:
ps_left	graphics.c	/^static float ps_left, ps_right, ps_top, ps_bot; \/* Figure boundaries for *$/;"	v	file:
ps_right	graphics.c	/^static float ps_left, ps_right, ps_top, ps_bot; \/* Figure boundaries for *$/;"	v	file:
ps_top	graphics.c	/^static float ps_left, ps_right, ps_top, ps_bot; \/* Figure boundaries for *$/;"	v	file:
ps_xmult	graphics.c	/^static float ps_xmult, ps_ymult;     \/* Transformation for PostScript. *\/$/;"	v	file:
ps_ymult	graphics.c	/^static float ps_xmult, ps_ymult;     \/* Transformation for PostScript. *\/$/;"	v	file:
ptc_num	../include/vpr_types.h	/^    short ptc_num;$/;"	m	struct:__anon22	access:public
quit	graphics.c	/^static void quit(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
quit	graphics.c	/^static void quit(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
rc_node	net_delay.c	/^    struct s_rc_node* rc_node;$/;"	m	struct:s_linked_rc_ptr	typeref:struct:s_linked_rc_ptr::s_rc_node	file:	access:public
re_expand	../include/route_tree_timing.h	/^    short re_expand;$/;"	m	struct:s_rt_node	access:public
read_arch	../include/read_arch.h	/^void read_arch(char* arch_file, enum e_route_type route_type,$/;"	p	signature:(char* arch_file, enum e_route_type route_type, struct s_det_routing_arch* det_routing_arch, t_segment_inf ** segment_inf_ptr, t_timing_inf* timing_inf_ptr, t_subblock_data *subblock_data_ptr, t_chan_width_dist* chan_width_dist_ptr)
read_arch	read_arch.c	/^void read_arch(char* arch_file, enum e_route_type route_type,$/;"	f	signature:(char* arch_file, enum e_route_type route_type, struct s_det_routing_arch* det_routing_arch, t_segment_inf ** segment_inf_ptr, t_timing_inf* timing_inf_ptr, t_subblock_data *subblock_data_ptr, t_chan_width_dist* chan_width_dist_ptr)
read_float_option	main.c	/^static float read_float_option(int argc, char* argv[], int iarg)$/;"	f	file:	signature:(int argc, char* argv[], int iarg)
read_float_option	main.c	/^static float read_float_option(int argc, char* argv[], int iarg);$/;"	p	file:	signature:(int argc, char* argv[], int iarg)
read_int_option	main.c	/^static int read_int_option(int argc, char* argv[], int iarg)$/;"	f	file:	signature:(int argc, char* argv[], int iarg)
read_int_option	main.c	/^static int read_int_option(int argc, char* argv[], int iarg);$/;"	p	file:	signature:(int argc, char* argv[], int iarg)
read_net	../include/read_netlist.h	/^void read_net(char* net_file, t_subblock_data* subblock_data_ptr);$/;"	p	signature:(char* net_file, t_subblock_data* subblock_data_ptr)
read_net	read_netlist.c	/^void read_net(char* net_file, t_subblock_data* subblock_data_ptr)$/;"	f	signature:(char* net_file, t_subblock_data* subblock_data_ptr)
read_place	../include/place.h	/^void read_place(char* place_file, char* net_file, char* arch_file,$/;"	p	signature:(char* place_file, char* net_file, char* arch_file, struct s_placer_opts placer_opts, struct s_router_opts router_opts, t_chan_width_dist chan_width_dist, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data* subblock_data_ptr)
read_place	place.c	/^void read_place(char* place_file, char* net_file, char* arch_file,$/;"	f	signature:(char* place_file, char* net_file, char* arch_file, struct s_placer_opts placer_opts, struct s_router_opts router_opts, t_chan_width_dist chan_width_dist, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data* subblock_data_ptr)
read_place_header	read_place.c	/^static void read_place_header(FILE* fp, char* net_file, char* arch_file,$/;"	f	file:	signature:(FILE* fp, char* net_file, char* arch_file, char* buf)
read_place_header	read_place.c	/^static void read_place_header(FILE* fp, char* net_file, char* arch_file,$/;"	p	file:	signature:(FILE* fp, char* net_file, char* arch_file, char* buf)
read_user_pad_loc	../include/read_place.h	/^void read_user_pad_loc(char* pad_loc_file);$/;"	p	signature:(char* pad_loc_file)
read_user_pad_loc	read_place.c	/^void read_user_pad_loc(char* pad_loc_file)$/;"	f	signature:(char* pad_loc_file)
recompute_bb_cost	place.c	/^static float recompute_bb_cost(int place_cost_type, int num_regions)$/;"	f	file:	signature:(int place_cost_type, int num_regions)
recompute_bb_cost	place.c	/^static float recompute_bb_cost(int place_cost_type, int num_regions);$/;"	p	file:	signature:(int place_cost_type, int num_regions)
recompute_crit_iter	../include/vpr_types.h	/^    int   recompute_crit_iter;$/;"	m	struct:s_placer_opts	access:public
recompute_occupancy_from_scratch	check_route.c	/^static void recompute_occupancy_from_scratch(t_ivec** clb_opins_used_locally)$/;"	f	file:	signature:(t_ivec** clb_opins_used_locally)
recompute_occupancy_from_scratch	check_route.c	/^static void recompute_occupancy_from_scratch(t_ivec** clb_opins_used_locally);$/;"	p	file:	signature:(t_ivec** clb_opins_used_locally)
rect_off_screen	graphics.c	/^static int rect_off_screen(float x1, float y1, float x2, float y2)$/;"	f	file:	signature:(float x1, float y1, float x2, float y2)
redraw_screen	draw.c	/^static void redraw_screen(void)$/;"	f	file:	signature:(void)
redraw_screen	draw.c	/^static void redraw_screen(void);$/;"	p	file:	signature:(void)
reserve_locally_used_opins	../include/route_common.h	/^void reserve_locally_used_opins(float pres_fac, boolean rip_up_local_opins,$/;"	p	signature:(float pres_fac, boolean rip_up_local_opins, t_ivec** clb_opins_used_locally)
reserve_locally_used_opins	route_common.c	/^void reserve_locally_used_opins(float pres_fac, boolean rip_up_local_opins,$/;"	f	signature:(float pres_fac, boolean rip_up_local_opins, t_ivec** clb_opins_used_locally)
reset_flags	check_route.c	/^static void reset_flags(int inet, boolean* connected_to_route)$/;"	f	file:	signature:(int inet, boolean* connected_to_route)
reset_flags	check_route.c	/^static void reset_flags(int inet, boolean* connected_to_route);$/;"	p	file:	signature:(int inet, boolean* connected_to_route)
reset_path_costs	../include/route_common.h	/^void reset_path_costs(void);$/;"	p	signature:(void)
reset_path_costs	route_common.c	/^void reset_path_costs(void)$/;"	f	signature:(void)
reset_rr_node_to_rc_node	net_delay.c	/^static void reset_rr_node_to_rc_node(t_linked_rc_ptr* rr_node_to_rc_node, int$/;"	f	file:	signature:(t_linked_rc_ptr* rr_node_to_rc_node, int inet)
reset_rr_node_to_rc_node	net_delay.c	/^static void reset_rr_node_to_rc_node(t_linked_rc_ptr* rr_node_to_rc_node, int$/;"	p	file:	signature:(t_linked_rc_ptr* rr_node_to_rc_node, int inet)
restore_region_occ	place.c	/^static void restore_region_occ(float** old_region_occ_x,$/;"	f	file:	signature:(float** old_region_occ_x, float** old_region_occ_y, int num_regions)
restore_region_occ	place.c	/^static void restore_region_occ(float** old_region_occ_x,$/;"	p	file:	signature:(float** old_region_occ_x, float** old_region_occ_y, int num_regions)
restore_routing	../include/route_export.h	/^void restore_routing(struct s_trace** best_routing,$/;"	p	signature:(struct s_trace** best_routing, t_ivec** clb_opins_used_locally, t_ivec** saved_clb_opins_used_locally)
restore_routing	route_common.c	/^void restore_routing(struct s_trace** best_routing, t_ivec$/;"	f	signature:(struct s_trace** best_routing, t_ivec ** clb_opins_used_locally, t_ivec** saved_clb_opins_used_locally)
route_bb	route_common.c	/^struct s_bb* route_bb = NULL; \/* [0..num_nets-1]. Limits area in which each  *\/$/;"	v	typeref:struct:s_bb
route_type	../include/vpr_types.h	/^    enum e_route_type route_type;$/;"	m	struct:s_router_opts	typeref:enum:s_router_opts::e_route_type	access:public
router_algorithm	../include/vpr_types.h	/^    enum e_router_algorithm router_algorithm;$/;"	m	struct:s_router_opts	typeref:enum:s_router_opts::e_router_algorithm	access:public
routing_stats	../include/stats.h	/^void routing_stats(boolean full_stats, enum e_route_type route_type,$/;"	p	signature:(boolean full_stats, enum e_route_type route_type, int num_switch, t_segment_inf* segment_inf, int num_segment, float R_minW_nmos, float R_minW_pmos, boolean timing_analysis_enabled, float** net_slack, float** net_delay)
routing_stats	stats.c	/^void routing_stats(boolean full_stats, enum e_route_type route_type,$/;"	f	signature:(boolean full_stats, enum e_route_type route_type, int num_switch, t_segment_inf* segment_inf, int num_segment, float R_minW_nmos, float R_minW_pmos, boolean timing_analysis_enabled, float** net_slack, float** net_delay)
rr_clb_source	main.c	/^int** rr_clb_source;          \/* [0..num_blocks-1][0..num_class-1]*\/$/;"	v
rr_edge_done	rr_graph2.c	/^boolean* rr_edge_done;$/;"	v
rr_graph_internal_vars	rr_graph.c	/^static struct s_rr_graph_internal_vars rr_graph_internal_vars;$/;"	v	typeref:struct:s_rr_graph_internal_vars	file:
rr_indexed_data	main.c	/^t_rr_indexed_data* rr_indexed_data;         \/* [0..num_rr_indexed_data-1] *\/$/;"	v
rr_mem_chunk_list_head	rr_graph.c	/^static struct s_linked_vptr* rr_mem_chunk_list_head = NULL;$/;"	v	typeref:struct:s_linked_vptr	file:
rr_modified_head	route_common.c	/^static struct s_linked_f_pointer* rr_modified_head = NULL;$/;"	v	typeref:struct:s_linked_f_pointer	file:
rr_node	main.c	/^t_rr_node* rr_node;                         \/* [0..num_rr_nodes-1]  *\/$/;"	v
rr_node_indices	rr_graph.c	/^    int** rr_node_indices;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
rr_node_is_global_clb_ipin	check_rr_graph.c	/^static boolean rr_node_is_global_clb_ipin(int inode)$/;"	f	file:	signature:(int inode)
rr_node_is_global_clb_ipin	check_rr_graph.c	/^static boolean rr_node_is_global_clb_ipin(int inode);$/;"	p	file:	signature:(int inode)
rr_node_route_inf	route_common.c	/^t_rr_node_route_inf* rr_node_route_inf = NULL;       \/* [0..num_rr_nodes-1] *\/$/;"	v
rr_node_to_rt_node	route_tree_timing.c	/^static t_rt_node** rr_node_to_rt_node = NULL;   \/* [0..num_rr_nodes-1] *\/$/;"	v	file:
rt_edge_free_list	route_tree_timing.c	/^static t_linked_rt_edge* rt_edge_free_list = NULL;$/;"	v	file:
rt_node_free_list	route_tree_timing.c	/^static t_rt_node* rt_node_free_list = NULL;$/;"	v	file:
rt_node_of_sink	timing_place_lookup.c	/^static t_rt_node** rt_node_of_sink;$/;"	v	file:
s_annealing_sched	../include/vpr_types.h	/^struct s_annealing_sched {$/;"	s
s_annealing_sched::alpha_t	../include/vpr_types.h	/^    float alpha_t; \/* factor about descrease the temperature. *\/$/;"	m	struct:s_annealing_sched	access:public
s_annealing_sched::exit_t	../include/vpr_types.h	/^    float exit_t;  \/* exit_temperature *\/$/;"	m	struct:s_annealing_sched	access:public
s_annealing_sched::init_t	../include/vpr_types.h	/^    float init_t;  \/* initial_temperature *\/$/;"	m	struct:s_annealing_sched	access:public
s_annealing_sched::inner_num	../include/vpr_types.h	/^    float inner_num; \/* used for controlling the move times in SA inner loop*\/$/;"	m	struct:s_annealing_sched	access:public
s_annealing_sched::type	../include/vpr_types.h	/^    enum sched_type type;$/;"	m	struct:s_annealing_sched	typeref:enum:s_annealing_sched::sched_type	access:public
s_bb	../include/vpr_types.h	/^struct s_bb {$/;"	s
s_bb::xmax	../include/vpr_types.h	/^    int xmax;$/;"	m	struct:s_bb	access:public
s_bb::xmin	../include/vpr_types.h	/^    int xmin;$/;"	m	struct:s_bb	access:public
s_bb::ymax	../include/vpr_types.h	/^    int ymax;$/;"	m	struct:s_bb	access:public
s_bb::ymin	../include/vpr_types.h	/^    int ymin;$/;"	m	struct:s_bb	access:public
s_block	../include/vpr_types.h	/^struct s_block {$/;"	s
s_block::name	../include/vpr_types.h	/^    char* name;$/;"	m	struct:s_block	access:public
s_block::nets	../include/vpr_types.h	/^    int* nets;$/;"	m	struct:s_block	access:public
s_block::type	../include/vpr_types.h	/^    enum e_block_types type;$/;"	m	struct:s_block	typeref:enum:s_block::e_block_types	access:public
s_block::x	../include/vpr_types.h	/^    int x;$/;"	m	struct:s_block	access:public
s_block::y	../include/vpr_types.h	/^    int y;$/;"	m	struct:s_block	access:public
s_class	../include/vpr_types.h	/^struct s_class {$/;"	s
s_class::num_pins	../include/vpr_types.h	/^    int num_pins;$/;"	m	struct:s_class	access:public
s_class::pinlist	../include/vpr_types.h	/^    int* pinlist;$/;"	m	struct:s_class	access:public
s_class::type	../include/vpr_types.h	/^    enum e_pin_type type;$/;"	m	struct:s_class	typeref:enum:s_class::e_pin_type	access:public
s_clb	../include/vpr_types.h	/^struct s_clb {$/;"	s
s_clb::__anon12::block	../include/vpr_types.h	/^        int block;$/;"	m	union:s_clb::__anon12	access:public
s_clb::__anon12::io_blocks	../include/vpr_types.h	/^        int* io_blocks;$/;"	m	union:s_clb::__anon12	access:public
s_clb::occ	../include/vpr_types.h	/^    int occ;$/;"	m	struct:s_clb	access:public
s_clb::type	../include/vpr_types.h	/^    enum e_block_types type;$/;"	m	struct:s_clb	typeref:enum:s_clb::e_block_types	access:public
s_clb::u	../include/vpr_types.h	/^    } u;$/;"	m	struct:s_clb	typeref:union:s_clb::__anon12	access:public
s_det_routing_arch	../include/vpr_types.h	/^struct s_det_routing_arch {$/;"	s
s_det_routing_arch::Fc_input	../include/vpr_types.h	/^    float Fc_input;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::Fc_output	../include/vpr_types.h	/^    float Fc_output;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::Fc_pad	../include/vpr_types.h	/^    float Fc_pad;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::Fc_type	../include/vpr_types.h	/^    enum  e_Fc_type Fc_type;$/;"	m	struct:s_det_routing_arch	typeref:enum:s_det_routing_arch::e_Fc_type	access:public
s_det_routing_arch::R_minW_nmos	../include/vpr_types.h	/^    float R_minW_nmos;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::R_minW_pmos	../include/vpr_types.h	/^    float R_minW_pmos;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::delayless_switch	../include/vpr_types.h	/^    short delayless_switch;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::num_segment	../include/vpr_types.h	/^    int num_segment;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::num_switch	../include/vpr_types.h	/^    short num_switch;$/;"	m	struct:s_det_routing_arch	access:public
s_det_routing_arch::switch_block_type	../include/vpr_types.h	/^    enum e_switch_block_type switch_block_type;$/;"	m	struct:s_det_routing_arch	typeref:enum:s_det_routing_arch::e_switch_block_type	access:public
s_det_routing_arch::wire_to_ipin_switch	../include/vpr_types.h	/^    short wire_to_ipin_switch;$/;"	m	struct:s_det_routing_arch	access:public
s_hash	../include/hash.h	/^struct s_hash {$/;"	s
s_hash::count	../include/hash.h	/^    int count;$/;"	m	struct:s_hash	access:public
s_hash::index	../include/hash.h	/^    int index;$/;"	m	struct:s_hash	access:public
s_hash::name	../include/hash.h	/^    char* name;$/;"	m	struct:s_hash	access:public
s_hash::next	../include/hash.h	/^    struct s_hash* next;$/;"	m	struct:s_hash	typeref:struct:s_hash::s_hash	access:public
s_hash_iterator	../include/hash.h	/^struct s_hash_iterator {$/;"	s
s_hash_iterator::h_ptr	../include/hash.h	/^    struct s_hash* h_ptr;$/;"	m	struct:s_hash_iterator	typeref:struct:s_hash_iterator::s_hash	access:public
s_hash_iterator::i	../include/hash.h	/^    int i;$/;"	m	struct:s_hash_iterator	access:public
s_heap	../include/route_common.h	/^struct s_heap {$/;"	s
s_heap::R_upstream	../include/route_common.h	/^    float R_upstream;$/;"	m	struct:s_heap	access:public
s_heap::__anon8::next	../include/route_common.h	/^        struct s_heap* next;$/;"	m	union:s_heap::__anon8	typeref:struct:s_heap::__anon8::s_heap	access:public
s_heap::__anon8::prev_node	../include/route_common.h	/^        int prev_node;$/;"	m	union:s_heap::__anon8	access:public
s_heap::backward_path_cost	../include/route_common.h	/^    float backward_path_cost;$/;"	m	struct:s_heap	access:public
s_heap::cost	../include/route_common.h	/^    float cost;$/;"	m	struct:s_heap	access:public
s_heap::index	../include/route_common.h	/^    int index;$/;"	m	struct:s_heap	access:public
s_heap::prev_edge	../include/route_common.h	/^    int prev_edge;$/;"	m	struct:s_heap	access:public
s_heap::u	../include/route_common.h	/^    } u;$/;"	m	struct:s_heap	typeref:union:s_heap::__anon8	access:public
s_ivec	../include/util.h	/^struct s_ivec {$/;"	s
s_ivec::list	../include/util.h	/^    int* list;$/;"	m	struct:s_ivec	access:public
s_ivec::nelem	../include/util.h	/^    int nelem;$/;"	m	struct:s_ivec	access:public
s_linked_edge	../include/rr_graph_util.h	/^struct s_linked_edge {$/;"	s
s_linked_edge::edge	../include/rr_graph_util.h	/^    int edge;$/;"	m	struct:s_linked_edge	access:public
s_linked_edge::iswitch	../include/rr_graph_util.h	/^    short iswitch;$/;"	m	struct:s_linked_edge	access:public
s_linked_edge::next	../include/rr_graph_util.h	/^    struct s_linked_edge* next;$/;"	m	struct:s_linked_edge	typeref:struct:s_linked_edge::s_linked_edge	access:public
s_linked_f_pointer	../include/vpr_types.h	/^struct s_linked_f_pointer {$/;"	s
s_linked_f_pointer::fptr	../include/vpr_types.h	/^    float* fptr;$/;"	m	struct:s_linked_f_pointer	access:public
s_linked_f_pointer::next	../include/vpr_types.h	/^    struct s_linked_f_pointer* next;$/;"	m	struct:s_linked_f_pointer	typeref:struct:s_linked_f_pointer::s_linked_f_pointer	access:public
s_linked_int	../include/util.h	/^struct s_linked_int {$/;"	s
s_linked_int::data	../include/util.h	/^    int data;$/;"	m	struct:s_linked_int	access:public
s_linked_int::next	../include/util.h	/^    struct s_linked_int* next;$/;"	m	struct:s_linked_int	typeref:struct:s_linked_int::s_linked_int	access:public
s_linked_rc_edge	net_delay.c	/^struct s_linked_rc_edge {$/;"	s	file:
s_linked_rc_edge::child	net_delay.c	/^    struct s_rc_node* child;$/;"	m	struct:s_linked_rc_edge	typeref:struct:s_linked_rc_edge::s_rc_node	file:	access:public
s_linked_rc_edge::iswitch	net_delay.c	/^    short iswitch;$/;"	m	struct:s_linked_rc_edge	file:	access:public
s_linked_rc_edge::next	net_delay.c	/^            s_linked_rc_edge* next;$/;"	m	struct:s_linked_rc_edge	typeref:struct:s_linked_rc_edge::s_linked_rc_edge	file:	access:public
s_linked_rc_ptr	net_delay.c	/^struct s_linked_rc_ptr {$/;"	s	file:
s_linked_rc_ptr::next	net_delay.c	/^            *next;$/;"	m	struct:s_linked_rc_ptr	typeref:struct:s_linked_rc_ptr::s_linked_rc_ptr	file:	access:public
s_linked_rc_ptr::rc_node	net_delay.c	/^    struct s_rc_node* rc_node;$/;"	m	struct:s_linked_rc_ptr	typeref:struct:s_linked_rc_ptr::s_rc_node	file:	access:public
s_linked_rt_edge	../include/route_tree_timing.h	/^struct s_linked_rt_edge {$/;"	s
s_linked_rt_edge::child	../include/route_tree_timing.h	/^    struct s_rt_node* child;$/;"	m	struct:s_linked_rt_edge	typeref:struct:s_linked_rt_edge::s_rt_node	access:public
s_linked_rt_edge::iswitch	../include/route_tree_timing.h	/^    short  iswitch;$/;"	m	struct:s_linked_rt_edge	access:public
s_linked_rt_edge::next	../include/route_tree_timing.h	/^    struct s_linked_rt_edge* next;$/;"	m	struct:s_linked_rt_edge	typeref:struct:s_linked_rt_edge::s_linked_rt_edge	access:public
s_linked_vptr	../include/util.h	/^struct s_linked_vptr {$/;"	s
s_linked_vptr::data_vptr	../include/util.h	/^    void* data_vptr;$/;"	m	struct:s_linked_vptr	access:public
s_linked_vptr::next	../include/util.h	/^    struct s_linked_vptr* next;$/;"	m	struct:s_linked_vptr	typeref:struct:s_linked_vptr::s_linked_vptr	access:public
s_net	../include/vpr_types.h	/^struct s_net {$/;"	s
s_net::blk_pin	../include/vpr_types.h	/^    int* blk_pin;$/;"	m	struct:s_net	access:public
s_net::blocks	../include/vpr_types.h	/^    int* blocks;$/;"	m	struct:s_net	access:public
s_net::name	../include/vpr_types.h	/^    char* name;$/;"	m	struct:s_net	access:public
s_net::num_pins	../include/vpr_types.h	/^    int num_pins;$/;"	m	struct:s_net	access:public
s_place_region	../include/vpr_types.h	/^struct s_place_region {$/;"	s
s_place_region::capacity	../include/vpr_types.h	/^    float capacity;$/;"	m	struct:s_place_region	access:public
s_place_region::cost	../include/vpr_types.h	/^    float cost;$/;"	m	struct:s_place_region	access:public
s_place_region::inv_capacity	../include/vpr_types.h	/^    float inv_capacity;$/;"	m	struct:s_place_region	access:public
s_place_region::occupancy	../include/vpr_types.h	/^    float occupancy;$/;"	m	struct:s_place_region	access:public
s_placer_opts	../include/vpr_types.h	/^struct s_placer_opts {$/;"	s
s_placer_opts::block_dist	../include/vpr_types.h	/^    int   block_dist;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::enable_timing_computations	../include/vpr_types.h	/^    boolean enable_timing_computations;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::inner_loop_recompute_divider	../include/vpr_types.h	/^    int   inner_loop_recompute_divider;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::num_regions	../include/vpr_types.h	/^    int   num_regions;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::pad_loc_file	../include/vpr_types.h	/^    char* pad_loc_file;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::pad_loc_type	../include/vpr_types.h	/^    enum  e_pad_loc_type pad_loc_type;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::e_pad_loc_type	access:public
s_placer_opts::place_algorithm	../include/vpr_types.h	/^    enum  e_place_algorithm place_algorithm;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::e_place_algorithm	access:public
s_placer_opts::place_chan_width	../include/vpr_types.h	/^    int   place_chan_width;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::place_cost_exp	../include/vpr_types.h	/^    float place_cost_exp;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::place_cost_type	../include/vpr_types.h	/^    enum  place_c_types place_cost_type;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::place_c_types	access:public
s_placer_opts::place_freq	../include/vpr_types.h	/^    enum  pfreq place_freq;$/;"	m	struct:s_placer_opts	typeref:enum:s_placer_opts::pfreq	access:public
s_placer_opts::recompute_crit_iter	../include/vpr_types.h	/^    int   recompute_crit_iter;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::td_place_exp_first	../include/vpr_types.h	/^    float td_place_exp_first;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::td_place_exp_last	../include/vpr_types.h	/^    float td_place_exp_last;$/;"	m	struct:s_placer_opts	access:public
s_placer_opts::timing_tradeoff	../include/vpr_types.h	/^    float timing_tradeoff;$/;"	m	struct:s_placer_opts	access:public
s_pos	place.c	/^struct s_pos {$/;"	s	file:
s_pos::x	place.c	/^    int x;$/;"	m	struct:s_pos	file:	access:public
s_pos::y	place.c	/^    int y;$/;"	m	struct:s_pos	file:	access:public
s_rc_node	net_delay.c	/^struct s_rc_node {$/;"	s	file:
s_rc_node::C_downstream	net_delay.c	/^    float C_downstream;$/;"	m	struct:s_rc_node	file:	access:public
s_rc_node::Tdel	net_delay.c	/^    float Tdel;$/;"	m	struct:s_rc_node	file:	access:public
s_rc_node::__anon2::child_list	net_delay.c	/^        t_linked_rc_edge* child_list;$/;"	m	union:s_rc_node::__anon2	file:	access:public
s_rc_node::__anon2::next	net_delay.c	/^                *next;$/;"	m	union:s_rc_node::__anon2	typeref:struct:s_rc_node::__anon2::s_rc_node	file:	access:public
s_rc_node::inode	net_delay.c	/^    int inode;$/;"	m	struct:s_rc_node	file:	access:public
s_rc_node::u	net_delay.c	/^    } u;$/;"	m	struct:s_rc_node	typeref:union:s_rc_node::__anon2	file:	access:public
s_router_opts	../include/vpr_types.h	/^struct s_router_opts {$/;"	s
s_router_opts::acc_fac	../include/vpr_types.h	/^    float acc_fac;$/;"	m	struct:s_router_opts	access:public
s_router_opts::astar_fac	../include/vpr_types.h	/^    float astar_fac;$/;"	m	struct:s_router_opts	access:public
s_router_opts::base_cost_type	../include/vpr_types.h	/^    enum e_base_cost_type base_cost_type;$/;"	m	struct:s_router_opts	typeref:enum:s_router_opts::e_base_cost_type	access:public
s_router_opts::bb_factor	../include/vpr_types.h	/^    int bb_factor;$/;"	m	struct:s_router_opts	access:public
s_router_opts::bend_cost	../include/vpr_types.h	/^    float bend_cost;$/;"	m	struct:s_router_opts	access:public
s_router_opts::criticality_exp	../include/vpr_types.h	/^    float criticality_exp;$/;"	m	struct:s_router_opts	access:public
s_router_opts::first_iter_pres_fac	../include/vpr_types.h	/^    float first_iter_pres_fac;$/;"	m	struct:s_router_opts	access:public
s_router_opts::fixed_channel_width	../include/vpr_types.h	/^    int fixed_channel_width;$/;"	m	struct:s_router_opts	access:public
s_router_opts::initial_pres_fac	../include/vpr_types.h	/^    float initial_pres_fac;$/;"	m	struct:s_router_opts	access:public
s_router_opts::max_criticality	../include/vpr_types.h	/^    float max_criticality;$/;"	m	struct:s_router_opts	access:public
s_router_opts::max_router_iterations	../include/vpr_types.h	/^    int max_router_iterations;$/;"	m	struct:s_router_opts	access:public
s_router_opts::pres_fac_mult	../include/vpr_types.h	/^    float pres_fac_mult;$/;"	m	struct:s_router_opts	access:public
s_router_opts::route_type	../include/vpr_types.h	/^    enum e_route_type route_type;$/;"	m	struct:s_router_opts	typeref:enum:s_router_opts::e_route_type	access:public
s_router_opts::router_algorithm	../include/vpr_types.h	/^    enum e_router_algorithm router_algorithm;$/;"	m	struct:s_router_opts	typeref:enum:s_router_opts::e_router_algorithm	access:public
s_rr_graph_internal_vars	rr_graph.c	/^struct s_rr_graph_internal_vars {$/;"	s	file:
s_rr_graph_internal_vars::clb_ipin_to_tracks	rr_graph.c	/^    int*** clb_ipin_to_tracks;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::clb_opin_to_tracks	rr_graph.c	/^    int*** clb_opin_to_tracks;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::nodes_per_chan	rr_graph.c	/^    int nodes_per_chan;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::pads_to_tracks	rr_graph.c	/^    int** pads_to_tracks;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::rr_node_indices	rr_graph.c	/^    int** rr_node_indices;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::seg_details_x	rr_graph.c	/^    t_seg_details* seg_details_x;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::seg_details_y	rr_graph.c	/^    t_seg_details* seg_details_y;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
s_rr_graph_internal_vars::tracks_to_clb_ipin	rr_graph.c	/^    struct s_ivec** tracks_to_clb_ipin;$/;"	m	struct:s_rr_graph_internal_vars	typeref:struct:s_rr_graph_internal_vars::s_ivec	file:	access:public
s_rr_graph_internal_vars::tracks_to_pads	rr_graph.c	/^    struct s_ivec* tracks_to_pads;$/;"	m	struct:s_rr_graph_internal_vars	typeref:struct:s_rr_graph_internal_vars::s_ivec	file:	access:public
s_rt_node	../include/route_tree_timing.h	/^struct s_rt_node {$/;"	s
s_rt_node::C_downstream	../include/route_tree_timing.h	/^    float C_downstream;$/;"	m	struct:s_rt_node	access:public
s_rt_node::R_upstream	../include/route_tree_timing.h	/^    float R_upstream;$/;"	m	struct:s_rt_node	access:public
s_rt_node::Tdel	../include/route_tree_timing.h	/^    float Tdel;$/;"	m	struct:s_rt_node	access:public
s_rt_node::__anon10::child_list	../include/route_tree_timing.h	/^        t_linked_rt_edge* child_list;$/;"	m	union:s_rt_node::__anon10	access:public
s_rt_node::__anon10::next	../include/route_tree_timing.h	/^        struct s_rt_node* next;$/;"	m	union:s_rt_node::__anon10	typeref:struct:s_rt_node::__anon10::s_rt_node	access:public
s_rt_node::inode	../include/route_tree_timing.h	/^    int inode;$/;"	m	struct:s_rt_node	access:public
s_rt_node::parent_node	../include/route_tree_timing.h	/^    struct s_rt_node* parent_node;$/;"	m	struct:s_rt_node	typeref:struct:s_rt_node::s_rt_node	access:public
s_rt_node::parent_switch	../include/route_tree_timing.h	/^    short parent_switch;$/;"	m	struct:s_rt_node	access:public
s_rt_node::re_expand	../include/route_tree_timing.h	/^    short re_expand;$/;"	m	struct:s_rt_node	access:public
s_rt_node::u	../include/route_tree_timing.h	/^    } u;$/;"	m	struct:s_rt_node	typeref:union:s_rt_node::__anon10	access:public
s_switch_inf	../include/vpr_types.h	/^struct s_switch_inf {$/;"	s
s_switch_inf::Cin	../include/vpr_types.h	/^    float Cin;$/;"	m	struct:s_switch_inf	access:public
s_switch_inf::Cout	../include/vpr_types.h	/^    float Cout;$/;"	m	struct:s_switch_inf	access:public
s_switch_inf::R	../include/vpr_types.h	/^    float R;$/;"	m	struct:s_switch_inf	access:public
s_switch_inf::Tdel	../include/vpr_types.h	/^    float Tdel;$/;"	m	struct:s_switch_inf	access:public
s_switch_inf::buffered	../include/vpr_types.h	/^    boolean buffered; \/* buffer or tri-state transistor *\/$/;"	m	struct:s_switch_inf	access:public
s_trace	../include/vpr_types.h	/^struct s_trace {$/;"	s
s_trace::index	../include/vpr_types.h	/^    int index;$/;"	m	struct:s_trace	access:public
s_trace::iswitch	../include/vpr_types.h	/^    short iswitch;$/;"	m	struct:s_trace	access:public
s_trace::next	../include/vpr_types.h	/^    struct s_trace* next;$/;"	m	struct:s_trace	typeref:struct:s_trace::s_trace	access:public
save_region_occ	place.c	/^static void save_region_occ(float** old_region_occ_x,$/;"	f	file:	signature:(float** old_region_occ_x, float** old_region_occ_y, int num_regions)
save_region_occ	place.c	/^static void save_region_occ(float** old_region_occ_x,$/;"	p	file:	signature:(float** old_region_occ_x, float** old_region_occ_y, int num_regions)
save_routing	../include/route_export.h	/^void save_routing(struct s_trace** best_routing,$/;"	p	signature:(struct s_trace** best_routing, t_ivec** clb_opins_used_locally, t_ivec** saved_clb_opins_used_locally)
save_routing	route_common.c	/^void save_routing(struct s_trace** best_routing, t_ivec$/;"	f	signature:(struct s_trace** best_routing, t_ivec ** clb_opins_used_locally, t_ivec** saved_clb_opins_used_locally)
saved_base_cost	../include/vpr_types.h	/^    float saved_base_cost;$/;"	m	struct:__anon23	access:public
saved_xleft	graphics.c	/^static float saved_xleft, saved_xright, saved_ytop, saved_ybot;$/;"	v	file:
saved_xright	graphics.c	/^static float saved_xleft, saved_xright, saved_ytop, saved_ybot;$/;"	v	file:
saved_ybot	graphics.c	/^static float saved_xleft, saved_xright, saved_ytop, saved_ybot;$/;"	v	file:
saved_ytop	graphics.c	/^static float saved_xleft, saved_xright, saved_ytop, saved_ybot;$/;"	v	file:
sb	../include/vpr_types.h	/^    boolean* sb;$/;"	m	struct:__anon18	access:public
sched_type	../include/vpr_types.h	/^enum sched_type {$/;"	g
screen_num	graphics.c	/^static int screen_num;$/;"	v	file:
seg_details_x	rr_graph.c	/^    t_seg_details* seg_details_x;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
seg_details_y	rr_graph.c	/^    t_seg_details* seg_details_y;$/;"	m	struct:s_rr_graph_internal_vars	file:	access:public
seg_index	../include/vpr_types.h	/^    int seg_index;$/;"	m	struct:__anon23	access:public
seg_index_of_cblock	../include/rr_graph_util.h	/^int seg_index_of_cblock(t_rr_type from_rr_type, int to_node);$/;"	p	signature:(t_rr_type from_rr_type, int to_node)
seg_index_of_cblock	rr_graph_util.c	/^int seg_index_of_cblock(t_rr_type from_rr_type, int to_node)$/;"	f	signature:(t_rr_type from_rr_type, int to_node)
seg_index_of_sblock	../include/rr_graph_util.h	/^int seg_index_of_sblock(int from_node, int to_node);$/;"	p	signature:(int from_node, int to_node)
seg_index_of_sblock	rr_graph_util.c	/^int seg_index_of_sblock(int from_node, int to_node)$/;"	f	signature:(int from_node, int to_node)
set_graphics_state	../include/draw.h	/^void set_graphics_state(boolean show_graphics_val, int gr_automode_val,$/;"	p	signature:(boolean show_graphics_val, int gr_automode_val, enum e_route_type route_type)
set_graphics_state	draw.c	/^void set_graphics_state(boolean show_graphics_val, int gr_automode_val,$/;"	f	signature:(boolean show_graphics_val, int gr_automode_val, enum e_route_type route_type)
set_subblock_count	read_netlist.c	/^static void set_subblock_count(int bnum, int num_subblocks)$/;"	f	file:	signature:(int bnum, int num_subblocks)
set_subblock_count	read_netlist.c	/^static void set_subblock_count(int bnum, int num_subblocks);$/;"	p	file:	signature:(int bnum, int num_subblocks)
setcolor	../include/graphics.h	/^void setcolor(int cindex);   \/* Use a constant from clist *\/$/;"	p	signature:(int cindex)
setcolor	graphics.c	/^void setcolor(int cindex) { }$/;"	f	signature:(int cindex)
setcolor	graphics.c	/^void setcolor(int cindex)$/;"	f	signature:(int cindex)
setfontsize	../include/graphics.h	/^void setfontsize(int pointsize);$/;"	p	signature:(int pointsize)
setfontsize	graphics.c	/^void setfontsize(int pointsize) { }$/;"	f	signature:(int pointsize)
setfontsize	graphics.c	/^void setfontsize(int pointsize)$/;"	f	signature:(int pointsize)
setlinestyle	../include/graphics.h	/^void setlinestyle(int linestyle);$/;"	p	signature:(int linestyle)
setlinestyle	graphics.c	/^void setlinestyle(int linestyle) { }$/;"	f	signature:(int linestyle)
setlinestyle	graphics.c	/^void setlinestyle(int linestyle)$/;"	f	signature:(int linestyle)
setlinewidth	../include/graphics.h	/^void setlinewidth(int linewidth);$/;"	p	signature:(int linewidth)
setlinewidth	graphics.c	/^void setlinewidth(int linewidth) { }$/;"	f	signature:(int linewidth)
setlinewidth	graphics.c	/^void setlinewidth(int linewidth)$/;"	f	signature:(int linewidth)
setpoly	graphics.c	/^static void setpoly(int bnum, int xc, int yc, int r, float theta)$/;"	f	file:	signature:(int bnum, int xc, int yc, int r, float theta)
setup_chan_width	timing_place_lookup.c	/^static void setup_chan_width(struct s_router_opts router_opts,$/;"	f	file:	signature:(struct s_router_opts router_opts, t_chan_width_dist chan_width_dist)
setup_chan_width	timing_place_lookup.c	/^static void setup_chan_width(struct s_router_opts router_opts,$/;"	p	file:	signature:(struct s_router_opts router_opts, t_chan_width_dist chan_width_dist)
show_congestion	draw.c	/^static boolean show_congestion = FALSE;$/;"	v	file:
show_graphics	draw.c	/^static boolean show_graphics;  \/* Graphics enabled or not? *\/$/;"	v	file:
show_nets	draw.c	/^static boolean show_nets = FALSE;  \/* Show nets of placement or routing? *\/$/;"	v	file:
sink_order	timing_place_lookup.c	/^static int* sink_order;$/;"	v	file:
start	../include/vpr_types.h	/^    int start;$/;"	m	struct:__anon18	access:public
start_hash_table_iterator	../include/hash.h	/^struct s_hash_iterator start_hash_table_iterator(void);$/;"	p	signature:(void)
start_hash_table_iterator	hash.c	/^struct s_hash_iterator start_hash_table_iterator(void) {$/;"	f	signature:(void)
starting_t	place.c	/^static float starting_t (float* cost_ptr, float* bb_cost_ptr, float* timing_cost_ptr,$/;"	p	file:	signature:(float* cost_ptr, float* bb_cost_ptr, float* timing_cost_ptr, int* pins_on_block, int place_cost_type, float** old_region_occ_x, float** old_region_occ_y, int num_regions, boolean fixed_pins, struct s_annealing_sched annealing_sched, int max_moves, float rlim, enum e_place_algorithm place_algorithm, float timing_tradeoff, float inverse_prev_bb_cost, float inverse_prev_timing_cost, float* delay_cost_ptr)
starting_t	place.c	/^static float starting_t(float* cost_ptr, float* bb_cost_ptr, float* timing_cost_ptr,$/;"	f	file:	signature:(float* cost_ptr, float* bb_cost_ptr, float* timing_cost_ptr, int* pins_on_block, int place_cost_type, float** old_region_occ_x, float** old_region_occ_y, int num_regions, boolean fixed_pins, struct s_annealing_sched annealing_sched, int max_moves, float rlim, enum e_place_algorithm place_algorithm, float timing_tradeoff, float inverse_prev_bb_cost, float inverse_prev_timing_cost, float* delay_cost_ptr)
subblock_inf	../include/vpr_types.h	/^    t_subblock** subblock_inf;$/;"	m	struct:__anon16	access:public
subblock_inf	read_netlist.c	/^static t_subblock** subblock_inf;$/;"	v	file:
subblock_lut_size	../include/vpr_types.h	/^    int subblock_lut_size; \/* input pins of subblock, that is, LUT-K. *\/$/;"	m	struct:__anon16	access:public
subblock_lut_size	read_netlist.c	/^static int subblock_lut_size;$/;"	v	file:
switch_block_conn	rr_graph_sbox.c	/^static struct s_ivec*** switch_block_conn;$/;"	v	typeref:struct:s_ivec	file:
switch_block_type	../include/vpr_types.h	/^    enum e_switch_block_type switch_block_type;$/;"	m	struct:s_det_routing_arch	typeref:enum:s_det_routing_arch::e_switch_block_type	access:public
switch_inf	main.c	/^struct s_switch_inf* switch_inf;      \/* [0..det_routing_arch.num_switch-1] *\/$/;"	v	typeref:struct:s_switch_inf
switches	../include/vpr_types.h	/^    short* switches;$/;"	m	struct:__anon22	access:public
t_T_subblock	../include/vpr_types.h	/^} t_T_subblock;$/;"	t	typeref:struct:__anon19
t_button	graphics.c	/^} t_button;$/;"	t	typeref:struct:__anon1	file:
t_chan	../include/vpr_types.h	/^} t_chan;$/;"	t	typeref:struct:__anon13
t_chan_width_dist	../include/vpr_types.h	/^} t_chan_width_dist;$/;"	t	typeref:struct:__anon14
t_ivec	../include/util.h	/^typedef struct s_ivec t_ivec;$/;"	t	typeref:struct:s_ivec
t_linked_edge	../include/rr_graph_util.h	/^typedef struct s_linked_edge t_linked_edge;$/;"	t	typeref:struct:s_linked_edge
t_linked_int	../include/util.h	/^typedef struct s_linked_int t_linked_int;$/;"	t	typeref:struct:s_linked_int
t_linked_rc_edge	net_delay.c	/^typedef struct s_linked_rc_edge t_linked_rc_edge;$/;"	t	typeref:struct:s_linked_rc_edge	file:
t_linked_rc_ptr	net_delay.c	/^typedef struct s_linked_rc_ptr t_linked_rc_ptr;$/;"	t	typeref:struct:s_linked_rc_ptr	file:
t_linked_rt_edge	../include/route_tree_timing.h	/^typedef struct s_linked_rt_edge t_linked_rt_edge;$/;"	t	typeref:struct:s_linked_rt_edge
t_point	../include/graphics.h	/^} t_point; \/* Used in calls to fillpoly *\/$/;"	t	typeref:struct:__anon3
t_rc_node	net_delay.c	/^typedef struct s_rc_node t_rc_node;$/;"	t	typeref:struct:s_rc_node	file:
t_rr_indexed_data	../include/vpr_types.h	/^} t_rr_indexed_data;$/;"	t	typeref:struct:__anon23
t_rr_node	../include/vpr_types.h	/^} t_rr_node;$/;"	t	typeref:struct:__anon22
t_rr_node_route_inf	../include/route_common.h	/^} t_rr_node_route_inf;$/;"	t	typeref:struct:__anon9
t_rr_type	../include/vpr_types.h	/^} t_rr_type;$/;"	t	typeref:enum:__anon21
t_rt_node	../include/route_tree_timing.h	/^typedef struct s_rt_node t_rt_node;$/;"	t	typeref:struct:s_rt_node
t_seg_details	../include/vpr_types.h	/^} t_seg_details;$/;"	t	typeref:struct:__anon18
t_segment_inf	../include/vpr_types.h	/^} t_segment_inf;$/;"	t	typeref:struct:__anon17
t_subblock	../include/vpr_types.h	/^} t_subblock;$/;"	t	typeref:struct:__anon15
t_subblock_data	../include/vpr_types.h	/^} t_subblock_data;$/;"	t	typeref:struct:__anon16
t_tedge	../include/path_delay2.h	/^} t_tedge;$/;"	t	typeref:struct:__anon4
t_timing_inf	../include/vpr_types.h	/^} t_timing_inf;$/;"	t	typeref:struct:__anon20
t_tnode	../include/path_delay2.h	/^} t_tnode;$/;"	t	typeref:struct:__anon5
t_tnode_descript	../include/path_delay2.h	/^} t_tnode_descript;$/;"	t	typeref:struct:__anon7
t_tnode_type	../include/path_delay2.h	/^} t_tnode_type;$/;"	t	typeref:enum:__anon6
target_flag	../include/route_common.h	/^    target_flag;$/;"	m	struct:__anon9	access:public
td_place_exp_first	../include/vpr_types.h	/^    float td_place_exp_first;$/;"	m	struct:s_placer_opts	access:public
td_place_exp_last	../include/vpr_types.h	/^    float td_place_exp_last;$/;"	m	struct:s_placer_opts	access:public
tedge_ch_bytes_avail	path_delay.c	/^static int tedge_ch_bytes_avail = 0;$/;"	v	file:
tedge_ch_list_head	path_delay.c	/^static struct s_linked_vptr* tedge_ch_list_head = NULL;$/;"	v	typeref:struct:s_linked_vptr	file:
tedge_ch_next_avail	path_delay.c	/^static char* tedge_ch_next_avail = NULL;$/;"	v	file:
temp_block_storage	read_netlist.c	/^static int temp_block_storage;$/;"	v	file:
temp_net_cost	place.c	/^static float* net_cost = NULL, *temp_net_cost = NULL;     \/* [0..num_nets-1] *\/$/;"	v	file:
temp_num_pins	read_netlist.c	/^static int* num_driver, *temp_num_pins;$/;"	v	file:
temp_point_to_point_delay_cost	place.c	/^static float** temp_point_to_point_delay_cost = NULL;$/;"	v	file:
temp_point_to_point_timing_cost	place.c	/^static float** temp_point_to_point_timing_cost = NULL;$/;"	v	file:
test_if_exposed	graphics.c	/^static Bool test_if_exposed(Display* disp, XEvent* event_ptr,$/;"	f	file:	signature:(Display* disp, XEvent* event_ptr, XPointer dummy)
test_if_exposed	graphics.c	/^static Bool test_if_exposed(Display* disp, XEvent* event_ptr,$/;"	p	file:	signature:(Display* disp, XEvent* event_ptr, XPointer dummy)
text	graphics.c	/^    char text[BUTTON_TEXT_LEN];$/;"	m	struct:__anon1	file:	access:public
textarea	graphics.c	/^static Window toplevel, menu, textarea;  \/* various windows *\/$/;"	v	file:
timing_analysis_enabled	../include/vpr_types.h	/^    boolean timing_analysis_enabled;$/;"	m	struct:__anon20	access:public
timing_driven_check_net_delays	route_timing.c	/^static void timing_driven_check_net_delays(float** net_delay)$/;"	f	file:	signature:(float** net_delay)
timing_driven_check_net_delays	route_timing.c	/^static void timing_driven_check_net_delays(float** net_delay);$/;"	p	file:	signature:(float** net_delay)
timing_driven_expand_neighbours	route_timing.c	/^static void timing_driven_expand_neighbours(struct s_heap* current, int inet,$/;"	f	file:	signature:(struct s_heap* current, int inet, float bend_cost, float criticality_fac, int target_node, float astar_fac)
timing_driven_expand_neighbours	route_timing.c	/^static void timing_driven_expand_neighbours(struct s_heap* current, int inet,$/;"	p	file:	signature:(struct s_heap* current, int inet, float bend_cost, float criticality_fac, int target_node, float astar_fac)
timing_driven_route_net	../include/route_timing.h	/^boolean timing_driven_route_net(int inet, float pres_fac,$/;"	p	signature:(int inet, float pres_fac, float max_criticality, float criticality_exp, float astar_fac, float bend_cost, float* net_slack, float* pin_criticality, int* sink_order, t_rt_node** rt_node_of_sink, float T_crit, float* net_delay)
timing_driven_route_net	route_timing.c	/^boolean timing_driven_route_net(int inet, float pres_fac,$/;"	f	signature:(int inet, float pres_fac, float max_criticality, float criticality_exp, float astar_fac, float bend_cost, float* net_slack, float* pin_criticality, int* sink_order, t_rt_node** rt_node_of_sink, float T_crit, float* net_delay)
timing_place_crit	timing_place.c	/^float** timing_place_crit;  \/*available externally*\/$/;"	v
timing_place_crit_chunk_list_head	timing_place.c	/^static struct s_linked_vptr* timing_place_crit_chunk_list_head;$/;"	v	typeref:struct:s_linked_vptr	file:
timing_tradeoff	../include/vpr_types.h	/^    float timing_tradeoff;$/;"	m	struct:s_placer_opts	access:public
tnode	path_delay2.c	/^t_tnode* tnode;                    \/* [0..num_tnodes - 1] *\/$/;"	v
tnode_descript	path_delay2.c	/^t_tnode_descript* tnode_descript;  \/* [0..num_tnodes - 1] *\/$/;"	v
tnodes_at_level	path_delay2.c	/^struct s_ivec* tnodes_at_level;$/;"	v	typeref:struct:s_ivec
to_node	../include/path_delay2.h	/^    int to_node;$/;"	m	struct:__anon4	access:public
toggle_congestion	draw.c	/^static void toggle_congestion(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
toggle_congestion	draw.c	/^static void toggle_congestion(void (*drawscreen_ptr)(void))$/;"	f	file:	signature:(void (*drawscreen_ptr)(void))
toggle_nets	draw.c	/^static void toggle_nets(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
toggle_nets	draw.c	/^static void toggle_nets(void (*drawscreen_ptr)(void))$/;"	f	file:	signature:(void (*drawscreen_ptr)(void))
toggle_rr	draw.c	/^static void toggle_rr(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
toggle_rr	draw.c	/^static void toggle_rr(void (*drawscreen_ptr)(void))$/;"	f	file:	signature:(void (*drawscreen_ptr)(void))
top_height	graphics.c	/^static unsigned int top_width, top_height;      \/* window size *\/$/;"	v	file:
top_width	graphics.c	/^static unsigned int top_width, top_height;      \/* window size *\/$/;"	v	file:
toplevel	graphics.c	/^static Window toplevel, menu, textarea;  \/* various windows *\/$/;"	v	file:
trace_free_head	route_common.c	/^static struct s_trace* trace_free_head = NULL;$/;"	v	typeref:struct:s_trace	file:
trace_head	main.c	/^struct s_trace** trace_head, ** trace_tail;$/;"	v	typeref:struct:s_trace
trace_tail	main.c	/^struct s_trace** trace_head, ** trace_tail;$/;"	v	typeref:struct:
track_side	rr_graph.c	/^static int track_side(int clb_side)$/;"	f	file:	signature:(int clb_side)
track_side	rr_graph.c	/^static int track_side(int clb_side);$/;"	p	file:	signature:(int clb_side)
tracks_to_clb_ipin	rr_graph.c	/^    struct s_ivec** tracks_to_clb_ipin;$/;"	m	struct:s_rr_graph_internal_vars	typeref:struct:s_rr_graph_internal_vars::s_ivec	file:	access:public
tracks_to_pads	rr_graph.c	/^    struct s_ivec* tracks_to_pads;$/;"	m	struct:s_rr_graph_internal_vars	typeref:struct:s_rr_graph_internal_vars::s_ivec	file:	access:public
trans_per_R	rr_graph_area.c	/^static float trans_per_R(float Rtrans, float R_minW_trans)$/;"	f	file:	signature:(float Rtrans, float R_minW_trans)
trans_per_R	rr_graph_area.c	/^static float trans_per_R(float Rtrans, float R_minW_trans);$/;"	p	file:	signature:(float Rtrans, float R_minW_trans)
trans_per_buf	rr_graph_area.c	/^static float trans_per_buf(float Rbuf, float R_minW_nmos, float R_minW_pmos)$/;"	f	file:	signature:(float Rbuf, float R_minW_nmos, float R_minW_pmos)
trans_per_buf	rr_graph_area.c	/^static float trans_per_buf(float Rbuf, float R_minW_nmos, float R_minW_pmos);$/;"	p	file:	signature:(float Rbuf, float R_minW_nmos, float R_minW_pmos)
trans_per_mux	rr_graph_area.c	/^static float trans_per_mux(int num_inputs, float trans_sram_bit)$/;"	f	file:	signature:(int num_inputs, float trans_sram_bit)
trans_per_mux	rr_graph_area.c	/^static float trans_per_mux(int num_inputs, float trans_sram_bit);$/;"	p	file:	signature:(int num_inputs, float trans_sram_bit)
translate_down	graphics.c	/^static void translate_down(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
translate_down	graphics.c	/^static void translate_down(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
translate_left	graphics.c	/^static void translate_left(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
translate_left	graphics.c	/^static void translate_left(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
translate_right	graphics.c	/^static void translate_right(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
translate_right	graphics.c	/^static void translate_right(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
translate_up	graphics.c	/^static void translate_up(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
translate_up	graphics.c	/^static void translate_up(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
try_breadth_first_route	../include/route_breadth_first.h	/^boolean try_breadth_first_route(struct s_router_opts router_opts,$/;"	p	signature:(struct s_router_opts router_opts, t_ivec** clb_opins_used_locally)
try_breadth_first_route	route_breadth_first.c	/^boolean try_breadth_first_route(struct s_router_opts router_opts,$/;"	f	signature:(struct s_router_opts router_opts, t_ivec** clb_opins_used_locally)
try_place	../include/place.h	/^void try_place(struct s_placer_opts placer_opts,$/;"	p	signature:(struct s_placer_opts placer_opts, struct s_annealing_sched annealing_sched, t_chan_width_dist chan_width_dist, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data* subblock_data_ptr)
try_place	place.c	/^void try_place(struct s_placer_opts  placer_opts,$/;"	f	signature:(struct s_placer_opts placer_opts, struct s_annealing_sched annealing_sched, t_chan_width_dist chan_width_dist, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, t_subblock_data* subblock_data_ptr)
try_route	../include/route_export.h	/^boolean try_route(int width_fac, struct s_router_opts router_opts,$/;"	p	signature:(int width_fac, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, float** net_slack, float** net_delay, t_chan_width_dist chan_width_dist, t_ivec** clb_opins_used_locally)
try_route	route_common.c	/^boolean try_route(int width_fac, struct s_router_opts router_opts,$/;"	f	signature:(int width_fac, struct s_router_opts router_opts, struct s_det_routing_arch det_routing_arch, t_segment_inf* segment_inf, t_timing_inf timing_inf, float** net_slack, float** net_delay, t_chan_width_dist chan_width_dist, t_ivec** clb_opins_used_locally)
try_swap	place.c	/^static int try_swap(float  t,$/;"	f	file:	signature:(float t, float* cost, float* bb_cost, float* timing_cost, float rlim, int* pins_on_block, int place_cost_type, float** old_region_occ_x, float** old_region_occ_y, int num_regions, boolean fixed_pins, enum e_place_algorithm place_algorithm, float timing_tradeoff, float inverse_prev_bb_cost, float inverse_prev_timing_cost, float* delay_cost)
try_swap	place.c	/^static int try_swap(float t, float* cost, float* bb_cost, float* timing_cost,$/;"	p	file:	signature:(float t, float* cost, float* bb_cost, float* timing_cost, float rlim, int* pins_on_block, int place_cost_type, float** old_region_occ_x, float** old_region_occ_y, int num_regions, boolean fixed_pins, enum e_place_algorithm place_algorithm, float timing_tradeoff, float inverse_prev_bb_cost, float inverse_prev_timing_cost, float* delay_cost)
try_timing_driven_route	../include/route_timing.h	/^boolean try_timing_driven_route(struct s_router_opts router_opts,$/;"	p	signature:(struct s_router_opts router_opts, float** net_slack, float** net_delay, t_ivec** clb_opins_used_locally)
try_timing_driven_route	route_timing.c	/^boolean try_timing_driven_route(struct s_router_opts router_opts,$/;"	f	signature:(struct s_router_opts router_opts, float** net_slack, float** net_delay, t_ivec** clb_opins_used_locally)
turn_on_off	graphics.c	/^static void turn_on_off(int pressed)$/;"	f	file:	signature:(int pressed)
type	../include/path_delay2.h	/^    t_tnode_type type;$/;"	m	struct:__anon7	access:public
type	../include/vpr_types.h	/^    enum e_block_types type;$/;"	m	struct:s_block	typeref:enum:s_block::e_block_types	access:public
type	../include/vpr_types.h	/^    enum e_block_types type;$/;"	m	struct:s_clb	typeref:enum:s_clb::e_block_types	access:public
type	../include/vpr_types.h	/^    enum e_pin_type type;$/;"	m	struct:s_class	typeref:enum:s_class::e_pin_type	access:public
type	../include/vpr_types.h	/^    enum e_stat type;$/;"	m	struct:__anon13	typeref:enum:__anon13::e_stat	access:public
type	../include/vpr_types.h	/^    enum sched_type type;$/;"	m	struct:s_annealing_sched	typeref:enum:s_annealing_sched::sched_type	access:public
type	../include/vpr_types.h	/^    t_rr_type type;$/;"	m	struct:__anon22	access:public
u	../include/route_common.h	/^    } u;$/;"	m	struct:s_heap	typeref:union:s_heap::__anon8	access:public
u	../include/route_tree_timing.h	/^    } u;$/;"	m	struct:s_rt_node	typeref:union:s_rt_node::__anon10	access:public
u	../include/vpr_types.h	/^    } u;$/;"	m	struct:s_clb	typeref:union:s_clb::__anon12	access:public
u	net_delay.c	/^    } u;$/;"	m	struct:s_rc_node	typeref:union:s_rc_node::__anon2	file:	access:public
unique_pin_list	place.c	/^static int** unique_pin_list;$/;"	v	file:
unmap_button	graphics.c	/^static void unmap_button(int bnum)$/;"	f	file:	signature:(int bnum)
unmap_button	graphics.c	/^static void unmap_button(int bnum);$/;"	p	file:	signature:(int bnum)
update_bb	place.c	/^static void update_bb(int inet, struct s_bb* bb_coord_new, struct s_bb$/;"	f	file:	signature:(int inet, struct s_bb* bb_coord_new, struct s_bb *bb_edge_new, int xold, int yold, int xnew, int ynew)
update_bb	place.c	/^static void update_bb(int inet, struct s_bb* bb_coord_new, struct s_bb$/;"	p	file:	signature:(int inet, struct s_bb* bb_coord_new, struct s_bb *bb_edge_new, int xold, int yold, int xnew, int ynew)
update_message	../include/graphics.h	/^void update_message(char* msg);$/;"	p	signature:(char* msg)
update_message	graphics.c	/^void update_message(char* msg) { }$/;"	f	signature:(char* msg)
update_message	graphics.c	/^void update_message(char* msg)$/;"	f	signature:(char* msg)
update_net_delays_from_route_tree	../include/route_tree_timing.h	/^void update_net_delays_from_route_tree(float* net_delay,$/;"	p	signature:(float* net_delay, t_rt_node** rt_node_of_sink, int inet)
update_net_delays_from_route_tree	route_tree_timing.c	/^void update_net_delays_from_route_tree(float* net_delay, t_rt_node$/;"	f	signature:(float* net_delay, t_rt_node ** rt_node_of_sink, int inet)
update_ps_transform	graphics.c	/^static void update_ps_transform(void)$/;"	f	file:	signature:(void)
update_region_occ	place.c	/^static void update_region_occ(int inet, struct s_bb* coords,$/;"	f	file:	signature:(int inet, struct s_bb* coords, int add_or_sub, int num_regions)
update_region_occ	place.c	/^static void update_region_occ(int inet, struct s_bb* coords,$/;"	p	file:	signature:(int inet, struct s_bb* coords, int add_or_sub, int num_regions)
update_rlim	place.c	/^static void update_rlim(float* rlim, float success_rat)$/;"	f	file:	signature:(float* rlim, float success_rat)
update_rlim	place.c	/^static void update_rlim(float* rlim, float success_rat);$/;"	p	file:	signature:(float* rlim, float success_rat)
update_route_tree	../include/route_tree_timing.h	/^t_rt_node* update_route_tree(struct s_heap* hptr);$/;"	p	signature:(struct s_heap* hptr)
update_route_tree	route_tree_timing.c	/^t_rt_node* update_route_tree(struct s_heap* hptr)$/;"	f	signature:(struct s_heap* hptr)
update_rr_base_costs	route_timing.c	/^static void update_rr_base_costs(int inet, float largest_criticality)$/;"	f	file:	signature:(int inet, float largest_criticality)
update_rr_base_costs	route_timing.c	/^static void update_rr_base_costs(int inet, float largest_criticality);$/;"	p	file:	signature:(int inet, float largest_criticality)
update_screen	../include/draw.h	/^void update_screen(int priority, char* msg, enum pic_type pic_on_screen_val,$/;"	p	signature:(int priority, char* msg, enum pic_type pic_on_screen_val, boolean crit_path_button_enabled)
update_screen	draw.c	/^void update_screen(int priority, char* msg, enum pic_type$/;"	f	signature:(int priority, char* msg, enum pic_type pic_on_screen_val, boolean crit_path_button_enabled)
update_t	place.c	/^static void update_t (float* t, float std_dev, float rlim, float success_rat,$/;"	p	file:	signature:(float* t, float std_dev, float rlim, float success_rat, struct s_annealing_sched annealing_sched)
update_t	place.c	/^static void update_t (float* t, float std_dev, float rlim,$/;"	f	file:	signature:(float* t, float std_dev, float rlim, float success_rat, struct s_annealing_sched annealing_sched)
update_td_cost	place.c	/^static void update_td_cost(int b_from, int b_to, int num_of_pins)$/;"	f	file:	signature:(int b_from, int b_to, int num_of_pins)
update_td_cost	place.c	/^static void update_td_cost(int b_from, int b_to, int num_of_pins);$/;"	p	file:	signature:(int b_from, int b_to, int num_of_pins)
update_traceback	../include/route_common.h	/^struct s_trace* update_traceback(struct s_heap* hptr, int inet);$/;"	p	signature:(struct s_heap* hptr, int inet)
update_traceback	route_common.c	/^struct s_trace* update_traceback(struct s_heap* hptr, int inet) {$/;"	f	signature:(struct s_heap* hptr, int inet)
update_transform	graphics.c	/^static void update_transform(void)$/;"	f	file:	signature:(void)
update_unbuffered_ancestors_C_downstream	route_tree_timing.c	/^static t_rt_node* update_unbuffered_ancestors_C_downstream(t_rt_node$/;"	f	file:	signature:(t_rt_node *start_of_new_path_rt_node)
update_unbuffered_ancestors_C_downstream	route_tree_timing.c	/^static t_rt_node* update_unbuffered_ancestors_C_downstream(t_rt_node$/;"	p	file:	signature:(t_rt_node *start_of_new_path_rt_node)
update_win	graphics.c	/^static void update_win(int x[2], int y[2], void (*drawscreen)(void))$/;"	f	file:	signature:(int x[2], int y[2], void (*drawscreen)(void))
which_button	graphics.c	/^static int which_button(Window win)$/;"	f	file:	signature:(Window win)
which_io_block	rr_graph.c	/^static int which_io_block(int iblk)$/;"	f	file:	signature:(int iblk)
which_io_block	rr_graph.c	/^static int which_io_block(int iblk);$/;"	p	file:	signature:(int iblk)
width	../include/vpr_types.h	/^    float width;$/;"	m	struct:__anon13	access:public
width	graphics.c	/^    int width;$/;"	m	struct:__anon1	file:	access:public
win	graphics.c	/^    Window win;$/;"	m	struct:__anon1	file:	access:public
wire_switch	../include/vpr_types.h	/^    short wire_switch;$/;"	m	struct:__anon17	access:public
wire_switch	../include/vpr_types.h	/^    short wire_switch;$/;"	m	struct:__anon18	access:public
wire_to_ipin_switch	../include/vpr_types.h	/^    short wire_to_ipin_switch;$/;"	m	struct:s_det_routing_arch	access:public
x	../include/graphics.h	/^    float x;$/;"	m	struct:__anon3	access:public
x	../include/vpr_types.h	/^    int x;$/;"	m	struct:s_block	access:public
x	place.c	/^    int x;$/;"	m	struct:s_pos	file:	access:public
x_clb_left	draw.c	/^static float* x_clb_left, *y_clb_bottom;$/;"	v	file:
xcoord	graphics.c	/^static int xcoord(float worldx)$/;"	f	file:	signature:(float worldx)
xhigh	../include/vpr_types.h	/^    short xhigh;$/;"	m	struct:__anon22	access:public
xleft	graphics.c	/^    int xleft;$/;"	m	struct:__anon1	file:	access:public
xleft	graphics.c	/^static float xleft, xright, ytop, ybot;         \/* world coordinates *\/$/;"	v	file:
xlow	../include/vpr_types.h	/^    short xlow;$/;"	m	struct:__anon22	access:public
xmax	../include/vpr_types.h	/^    int xmax;$/;"	m	struct:s_bb	access:public
xmin	../include/vpr_types.h	/^    int xmin;$/;"	m	struct:s_bb	access:public
xmult	graphics.c	/^static float xmult, ymult;                  \/* Transformation factors *\/$/;"	v	file:
xpeak	../include/vpr_types.h	/^    float xpeak;$/;"	m	struct:__anon13	access:public
xright	graphics.c	/^static float xleft, xright, ytop, ybot;         \/* world coordinates *\/$/;"	v	file:
y	../include/graphics.h	/^    float y;$/;"	m	struct:__anon3	access:public
y	../include/vpr_types.h	/^    int y;$/;"	m	struct:s_block	access:public
y	place.c	/^    int y;$/;"	m	struct:s_pos	file:	access:public
y_clb_bottom	draw.c	/^static float* x_clb_left, *y_clb_bottom;$/;"	v	file:
ybot	graphics.c	/^static float xleft, xright, ytop, ybot;         \/* world coordinates *\/$/;"	v	file:
ycoord	graphics.c	/^static int ycoord(float worldy)$/;"	f	file:	signature:(float worldy)
yhigh	../include/vpr_types.h	/^    short yhigh;$/;"	m	struct:__anon22	access:public
ylow	../include/vpr_types.h	/^    short ylow;$/;"	m	struct:__anon22	access:public
ymax	../include/vpr_types.h	/^    int ymax;$/;"	m	struct:s_bb	access:public
ymin	../include/vpr_types.h	/^    int ymin;$/;"	m	struct:s_bb	access:public
ymult	graphics.c	/^static float xmult, ymult;                  \/* Transformation factors *\/$/;"	v	file:
ytop	graphics.c	/^    int ytop;$/;"	m	struct:__anon1	file:	access:public
ytop	graphics.c	/^static float xleft, xright, ytop, ybot;         \/* world coordinates *\/$/;"	v	file:
zoom_fit	graphics.c	/^static void zoom_fit(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
zoom_fit	graphics.c	/^static void zoom_fit(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
zoom_in	graphics.c	/^static void zoom_in(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
zoom_in	graphics.c	/^static void zoom_in(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
zoom_out	graphics.c	/^static void zoom_out(void (*drawscreen)(void))$/;"	f	file:	signature:(void (*drawscreen)(void))
zoom_out	graphics.c	/^static void zoom_out(void (*drawscreen)(void));$/;"	p	file:	signature:(void (*drawscreen)(void))
